// @generated

//! Auto-Generated Fonts.

use crate::BitmapFont;
use embedded_graphics::{
	geometry::Size,
	image::ImageRaw,
	mono_font::mapping::GlyphMapping
};

struct Mapping;
impl GlyphMapping for Mapping {
	fn index(&self, c: char) -> usize {
		match c {
			{% for range in char_ranges -%}
			'{{ range.start }}' ..= '{{ range.end }}' => (c as usize - '{{ range.start }}' as usize){% if range.skip != 0 %} + {{ range.skip }}{% endif %},
			{% endfor -%}
			_ => '?' as usize - ' ' as usize
		}
	}
}
const GLYPH_MAPPING: Mapping = Mapping;

// ### Fonts

{%- for font in fonts %}

/// Tamzen {{ font.width }}x{{ font.height }}{% if font.bold %} Bold{% endif %} Font.
///
/// <img src="data:image/bmp;base64,{{ font.bmp }}"/>
///
/// Bitmap Size: {{ font.bitmap_len_str }} Byte <br/>
/// Font Source: <https://github.com/sunaku/tamzen-font/blob/master/bdf/Tamzen{{ font.width }}x{{ font.height }}
	{%- if font.bold %}b{% else %}r{% endif %}.bdf> <br/>
/// Font License: <https://github.com/sunaku/tamzen-font/blob/master/LICENSE>
#[allow(non_upper_case_globals)]
pub const FONT_{{ font.width }}x{{ font.height }}{% if font.bold %}_BOLD{% endif %}: BitmapFont<'static> = BitmapFont {
	bitmap: ImageRaw::new_binary(
		// {{ font.img_width }} x {{ font.img_height }} ({{ font.bitmap_len }})
		&[
			{%- for chunk in font.bitmap | chunks(16) %}
			{% for byte in chunk %}0x{{ "{:02x}"|format(byte) }}{% if !loop.last %}{{ ", " }}{% endif %}{% endfor %}
			{%- if !loop.last %},{% endif %}
			{%- endfor %}
		],
		{{ font.img_width }}
	),
	glyph_mapping: &GLYPH_MAPPING,
	size: Size::new({{ font.width }}, {{ font.height }}),
	pixels: 1
};

{%- endfor %}

// ### Pixel-Double Fonts

{%- for font in fonts %}

/// Pixel-double version of [`FONT_{{ font.width }}x{{ font.height }}{% if font.bold %}_BOLD{% endif %}`].
///
/// <img src="data:image/bmp;base64,{{ font.bmp_double }}"/>
///
/// This font does not store its own bitmap and therefore does not increase the flash size significantly.
#[allow(non_upper_case_globals)]
pub const FONT_{{ 2*font.width }}x{{ 2*font.height }}{% if font.bold %}_BOLD{% endif %}: BitmapFont<'static> = {
	FONT_{{ font.width }}x{{ font.height }}{% if font.bold %}_BOLD{% endif %}.pixel_double()
};

{%- endfor %}
