(function() {var implementors = {};
implementors["bitmap_font"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"bitmap_font/struct.BitmapFont.html\" title=\"struct bitmap_font::BitmapFont\">BitmapFont</a>","synthetic":true,"types":["bitmap_font::BitmapFont"]}];
implementors["byteorder"] = [{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.BigEndian.html\" title=\"enum byteorder::BigEndian\">BigEndian</a>","synthetic":true,"types":["byteorder::BigEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"byteorder/enum.LittleEndian.html\" title=\"enum byteorder::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["byteorder::LittleEndian"]}];
implementors["embedded_graphics"] = [{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/drawable/struct.Pixel.html\" title=\"struct embedded_graphics::drawable::Pixel\">Pixel</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::drawable::Pixel"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/fonts/struct.Font12x16.html\" title=\"struct embedded_graphics::fonts::Font12x16\">Font12x16</a>","synthetic":true,"types":["embedded_graphics::fonts::font12x16::Font12x16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/fonts/struct.Font24x32.html\" title=\"struct embedded_graphics::fonts::Font24x32\">Font24x32</a>","synthetic":true,"types":["embedded_graphics::fonts::font24x32::Font24x32"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/fonts/struct.Font6x12.html\" title=\"struct embedded_graphics::fonts::Font6x12\">Font6x12</a>","synthetic":true,"types":["embedded_graphics::fonts::font6x12::Font6x12"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/fonts/struct.Font6x6.html\" title=\"struct embedded_graphics::fonts::Font6x6\">Font6x6</a>","synthetic":true,"types":["embedded_graphics::fonts::font6x6::Font6x6"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/fonts/struct.Font6x8.html\" title=\"struct embedded_graphics::fonts::Font6x8\">Font6x8</a>","synthetic":true,"types":["embedded_graphics::fonts::font6x8::Font6x8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/fonts/struct.Font8x16.html\" title=\"struct embedded_graphics::fonts::Font8x16\">Font8x16</a>","synthetic":true,"types":["embedded_graphics::fonts::font8x16::Font8x16"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/fonts/struct.Text.html\" title=\"struct embedded_graphics::fonts::Text\">Text</a>&lt;'a&gt;","synthetic":true,"types":["embedded_graphics::fonts::text::Text"]},{"text":"impl&lt;'a, C, F&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/fonts/struct.StyledTextIterator.html\" title=\"struct embedded_graphics::fonts::StyledTextIterator\">StyledTextIterator</a>&lt;'a, C, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::fonts::text::StyledTextIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/geometry/struct.Point.html\" title=\"struct embedded_graphics::geometry::Point\">Point</a>","synthetic":true,"types":["embedded_graphics::geometry::point::Point"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/geometry/struct.Size.html\" title=\"struct embedded_graphics::geometry::Size\">Size</a>","synthetic":true,"types":["embedded_graphics::geometry::size::Size"]},{"text":"impl&lt;'a, C, BO&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/image/struct.ImageRaw.html\" title=\"struct embedded_graphics::image::ImageRaw\">ImageRaw</a>&lt;'a, C, BO&gt;","synthetic":true,"types":["embedded_graphics::image::image_raw::ImageRaw"]},{"text":"impl&lt;'a, I, C&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/image/struct.Image.html\" title=\"struct embedded_graphics::image::Image\">Image</a>&lt;'a, I, C&gt;","synthetic":true,"types":["embedded_graphics::image::Image"]},{"text":"impl&lt;'a, 'b, I, C&gt; !Freeze for <a class=\"struct\" href=\"embedded_graphics/image/struct.ImageIterator.html\" title=\"struct embedded_graphics::image::ImageIterator\">ImageIterator</a>&lt;'a, 'b, I, C&gt;","synthetic":true,"types":["embedded_graphics::image::ImageIterator"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/mock_display/struct.MockDisplay.html\" title=\"struct embedded_graphics::mock_display::MockDisplay\">MockDisplay</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::mock_display::MockDisplay"]},{"text":"impl Freeze for <a class=\"enum\" href=\"embedded_graphics/pixelcolor/enum.BinaryColor.html\" title=\"enum embedded_graphics::pixelcolor::BinaryColor\">BinaryColor</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::binary_color::BinaryColor"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/struct.Gray2.html\" title=\"struct embedded_graphics::pixelcolor::Gray2\">Gray2</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::gray_color::Gray2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/struct.Gray4.html\" title=\"struct embedded_graphics::pixelcolor::Gray4\">Gray4</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::gray_color::Gray4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/struct.Gray8.html\" title=\"struct embedded_graphics::pixelcolor::Gray8\">Gray8</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::gray_color::Gray8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/raw/struct.RawU1.html\" title=\"struct embedded_graphics::pixelcolor::raw::RawU1\">RawU1</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::raw::RawU1"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/raw/struct.RawU2.html\" title=\"struct embedded_graphics::pixelcolor::raw::RawU2\">RawU2</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::raw::RawU2"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/raw/struct.RawU4.html\" title=\"struct embedded_graphics::pixelcolor::raw::RawU4\">RawU4</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::raw::RawU4"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/raw/struct.RawU8.html\" title=\"struct embedded_graphics::pixelcolor::raw::RawU8\">RawU8</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::raw::RawU8"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/raw/struct.RawU16.html\" title=\"struct embedded_graphics::pixelcolor::raw::RawU16\">RawU16</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::raw::RawU16"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/raw/struct.RawU24.html\" title=\"struct embedded_graphics::pixelcolor::raw::RawU24\">RawU24</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::raw::RawU24"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/raw/struct.RawU32.html\" title=\"struct embedded_graphics::pixelcolor::raw::RawU32\">RawU32</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::raw::RawU32"]},{"text":"impl Freeze for <a class=\"enum\" href=\"embedded_graphics/pixelcolor/raw/enum.LittleEndian.html\" title=\"enum embedded_graphics::pixelcolor::raw::LittleEndian\">LittleEndian</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::raw::LittleEndian"]},{"text":"impl Freeze for <a class=\"enum\" href=\"embedded_graphics/pixelcolor/raw/enum.BigEndian.html\" title=\"enum embedded_graphics::pixelcolor::raw::BigEndian\">BigEndian</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::raw::BigEndian"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/struct.Rgb555.html\" title=\"struct embedded_graphics::pixelcolor::Rgb555\">Rgb555</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::rgb_color::Rgb555"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/struct.Bgr555.html\" title=\"struct embedded_graphics::pixelcolor::Bgr555\">Bgr555</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::rgb_color::Bgr555"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/struct.Rgb565.html\" title=\"struct embedded_graphics::pixelcolor::Rgb565\">Rgb565</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::rgb_color::Rgb565"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/struct.Bgr565.html\" title=\"struct embedded_graphics::pixelcolor::Bgr565\">Bgr565</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::rgb_color::Bgr565"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/struct.Rgb888.html\" title=\"struct embedded_graphics::pixelcolor::Rgb888\">Rgb888</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::rgb_color::Rgb888"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/pixelcolor/struct.Bgr888.html\" title=\"struct embedded_graphics::pixelcolor::Bgr888\">Bgr888</a>","synthetic":true,"types":["embedded_graphics::pixelcolor::rgb_color::Bgr888"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/primitives/circle/struct.Circle.html\" title=\"struct embedded_graphics::primitives::circle::Circle\">Circle</a>","synthetic":true,"types":["embedded_graphics::primitives::circle::Circle"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/primitives/circle/struct.StyledCircleIterator.html\" title=\"struct embedded_graphics::primitives::circle::StyledCircleIterator\">StyledCircleIterator</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::primitives::circle::StyledCircleIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/primitives/line/struct.Line.html\" title=\"struct embedded_graphics::primitives::line::Line\">Line</a>","synthetic":true,"types":["embedded_graphics::primitives::line::Line"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/primitives/line/struct.StyledLineIterator.html\" title=\"struct embedded_graphics::primitives::line::StyledLineIterator\">StyledLineIterator</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::primitives::line::StyledLineIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/primitives/rectangle/struct.Rectangle.html\" title=\"struct embedded_graphics::primitives::rectangle::Rectangle\">Rectangle</a>","synthetic":true,"types":["embedded_graphics::primitives::rectangle::Rectangle"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/primitives/rectangle/struct.StyledRectangleIterator.html\" title=\"struct embedded_graphics::primitives::rectangle::StyledRectangleIterator\">StyledRectangleIterator</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::primitives::rectangle::StyledRectangleIterator"]},{"text":"impl Freeze for <a class=\"struct\" href=\"embedded_graphics/primitives/triangle/struct.Triangle.html\" title=\"struct embedded_graphics::primitives::triangle::Triangle\">Triangle</a>","synthetic":true,"types":["embedded_graphics::primitives::triangle::Triangle"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/primitives/triangle/struct.StyledTriangleIterator.html\" title=\"struct embedded_graphics::primitives::triangle::StyledTriangleIterator\">StyledTriangleIterator</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::primitives::triangle::StyledTriangleIterator"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/style/struct.PrimitiveStyle.html\" title=\"struct embedded_graphics::style::PrimitiveStyle\">PrimitiveStyle</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::style::primitive_style::PrimitiveStyle"]},{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/style/struct.PrimitiveStyleBuilder.html\" title=\"struct embedded_graphics::style::PrimitiveStyleBuilder\">PrimitiveStyleBuilder</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::style::primitive_style::PrimitiveStyleBuilder"]},{"text":"impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/style/struct.Styled.html\" title=\"struct embedded_graphics::style::Styled\">Styled</a>&lt;T, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::style::styled::Styled"]},{"text":"impl&lt;C, F&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/style/struct.TextStyle.html\" title=\"struct embedded_graphics::style::TextStyle\">TextStyle</a>&lt;C, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::style::text_style::TextStyle"]},{"text":"impl&lt;C, F&gt; Freeze for <a class=\"struct\" href=\"embedded_graphics/style/struct.TextStyleBuilder.html\" title=\"struct embedded_graphics::style::TextStyleBuilder\">TextStyleBuilder</a>&lt;C, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["embedded_graphics::style::text_style::TextStyleBuilder"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()