var searchIndex = JSON.parse('{\
"bitmap_font":{"doc":"<strong>bitmap-font 0.1 works with embedded-graphics 0.6!</strong> Version …","t":[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,11,11,11,11,8,10,11,11,11,11,11,11,11,11],"n":["FONT_5x9","FONT_5x9_BOLD","FONT_6x12","FONT_6x12_BOLD","FONT_7x13","FONT_7x13_BOLD","FONT_7x14","FONT_7x14_BOLD","FONT_8x15","FONT_8x15_BOLD","FONT_8x16","FONT_8x16_BOLD","FONT_10x20","FONT_10x20_BOLD","FONT_10x18","FONT_10x18_BOLD","FONT_12x24","FONT_12x24_BOLD","FONT_14x26","FONT_14x26_BOLD","FONT_14x28","FONT_14x28_BOLD","FONT_16x30","FONT_16x30_BOLD","FONT_16x32","FONT_16x32_BOLD","FONT_20x40","FONT_20x40_BOLD","BitmapFont","width","height","pixel","pixel_double","WithFont","with_font","borrow","borrow_mut","try_from","from","into","try_into","type_id","clone"],"q":["bitmap_font","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Tamzen 5x9 Font.","Tamzen 5x9 Bold Font.","Tamzen 6x12 Font.","Tamzen 6x12 Bold Font.","Tamzen 7x13 Font.","Tamzen 7x13 Bold Font.","Tamzen 7x14 Font.","Tamzen 7x14 Bold Font.","Tamzen 8x15 Font.","Tamzen 8x15 Bold Font.","Tamzen 8x16 Font.","Tamzen 8x16 Bold Font.","Tamzen 10x20 Font.","Tamzen 10x20 Bold Font.","Pixel-double version of [<code>FONT_5x9</code>].","Pixel-double version of [<code>FONT_5x9_BOLD</code>].","Pixel-double version of [<code>FONT_6x12</code>].","Pixel-double version of [<code>FONT_6x12_BOLD</code>].","Pixel-double version of [<code>FONT_7x13</code>].","Pixel-double version of [<code>FONT_7x13_BOLD</code>].","Pixel-double version of [<code>FONT_7x14</code>].","Pixel-double version of [<code>FONT_7x14_BOLD</code>].","Pixel-double version of [<code>FONT_8x15</code>].","Pixel-double version of [<code>FONT_8x15_BOLD</code>].","Pixel-double version of [<code>FONT_8x16</code>].","Pixel-double version of [<code>FONT_8x16_BOLD</code>].","Pixel-double version of [<code>FONT_10x20</code>].","Pixel-double version of [<code>FONT_10x20_BOLD</code>].","Stores the font bitmap and some additional info for each …","Return the width of each character.","Return the height of each character.","Returns <code>true</code> if the pixel <code>(x, y)</code> is turned on in the …","Returns a pixel-double version of this font.","Style a [Text] with a font and color.","Style this text with a font and color.","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["u32",15]],[[["u32",15],["char",15]],["bool",15]],[[]],null,[[["bitmapfont",3],["binarycolor",4]],["styled",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["bitmapfont",3]]],"p":[[3,"BitmapFont"],[8,"WithFont"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[8,10,11,10,11,10,10,10,10,10,11,10,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,10,10,4,6,4,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ByteOrder","read_u16","read_u24","read_u32","read_u48","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","read_i16","read_i24","read_i32","read_i48","read_i64","read_i128","read_int","read_int128","read_f32","read_f64","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","write_f32","write_f64","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","read_f64_into_unchecked","write_u16_into","write_u32_into","write_u64_into","write_u128_into","write_i8_into","write_i16_into","write_i32_into","write_i64_into","write_i128_into","write_f32_into","write_f64_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_i128","from_slice_f32","from_slice_f64","BigEndian","BE","LittleEndian","LE","NetworkEndian","NativeEndian","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","read_u16","read_u32","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","read_u16","read_u32","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","fmt","fmt","eq","eq","cmp","cmp","partial_cmp","partial_cmp","hash","hash","clone","clone","default","default"],"q":["byteorder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["<code>ByteOrder</code> describes types that can serialize integers as …","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from <code>buf</code>.","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a IEEE754 single-precision (4 bytes) floating …","Writes a IEEE754 double-precision (8 bytes) floating …","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Converts the given slice of unsigned 16 bit integers to a …","Converts the given slice of unsigned 32 bit integers to a …","Converts the given slice of unsigned 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of IEEE754 single-precision (4 …","Converts the given slice of IEEE754 double-precision (8 …","Defines big-endian serialization.","A type alias for <code>BigEndian</code>.","Defines little-endian serialization.","A type alias for <code>LittleEndian</code>.","Defines network byte order serialization.","Defines system native-endian serialization.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3],"f":[null,[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[],["i16",15]],[[],["i32",15]],[[],["i32",15]],[[],["i64",15]],[[],["i64",15]],[[],["i128",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i128",15]],[[],["f32",15]],[[],["f64",15]],[[["i16",15]]],[[["i32",15]]],[[["i32",15]]],[[["i64",15]]],[[["i64",15]]],[[["i128",15]]],[[["i64",15],["usize",15]]],[[["usize",15],["i128",15]]],[[["f32",15]]],[[["f64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["bigendian",4]],["bool",15]],[[["littleendian",4]],["bool",15]],[[["bigendian",4]],["ordering",4]],[[["littleendian",4]],["ordering",4]],[[["bigendian",4]],[["ordering",4],["option",4]]],[[["littleendian",4]],[["ordering",4],["option",4]]],[[]],[[]],[[],["bigendian",4]],[[],["littleendian",4]],[[],["bigendian",4]],[[],["littleendian",4]]],"p":[[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"embedded_graphics":{"doc":"This crate aims to make drawing 2D graphics primitives …","t":[0,8,10,3,12,12,0,3,3,12,12,3,3,3,3,3,3,8,18,18,18,18,18,10,11,11,0,3,12,12,3,12,12,8,10,10,10,0,3,6,6,8,16,10,8,10,10,3,11,3,0,3,11,11,11,11,11,11,8,10,10,0,0,8,16,18,10,10,3,11,3,11,3,11,3,11,3,11,3,11,3,11,8,4,4,4,13,13,8,10,18,18,3,3,3,8,10,10,10,18,18,18,18,18,18,18,18,18,18,18,3,3,3,3,3,3,8,16,8,16,10,0,3,12,12,3,12,12,8,10,18,18,8,10,10,10,18,18,18,18,18,18,18,18,18,18,18,8,16,10,11,10,11,11,11,11,11,11,0,0,3,12,12,11,3,0,3,12,12,11,3,0,3,12,12,11,3,0,3,12,12,12,11,11,3,8,11,0,3,12,12,12,3,3,12,12,3,12,12,12,3,0,8,10,10,8,16,10,11,10,11,11,11,11,11,11,14,14,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,11,11,11,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["drawable","Drawable","draw","Pixel","0","1","fonts","StyledTextIterator","Text","text","position","Font12x16","Font24x32","Font6x12","Font6x6","Font6x8","Font8x16","Font","FONT_IMAGE","FONT_IMAGE_WIDTH","CHARACTER_SIZE","CHARACTER_SPACING","VARIABLE_WIDTH","char_offset","char_width","character_pixel","geometry","Point","x","y","Size","width","height","Dimensions","top_left","bottom_right","size","image","ImageRaw","ImageRawBE","ImageRawLE","IntoPixelIter","PixelIterator","pixel_iter","ImageDimensions","width","height","Image","new","ImageIterator","mock_display","MockDisplay","new","width","height","get_pixel","set_pixel","from_pattern","ColorMapping","char_to_color","color_to_char","pixelcolor","raw","RawData","Storage","BITS_PER_PIXEL","into_inner","from_u32","RawU1","new","RawU2","new","RawU4","new","RawU8","new","RawU16","new","RawU24","new","RawU32","new","ByteOrder","LittleEndian","BigEndian","BinaryColor","Off","On","GrayColor","luma","BLACK","WHITE","Gray2","Gray4","Gray8","RgbColor","r","g","b","MAX_R","MAX_G","MAX_B","BLACK","RED","GREEN","BLUE","YELLOW","MAGENTA","CYAN","WHITE","Rgb555","Bgr555","Rgb565","Bgr565","Rgb888","Bgr888","PixelColor","Raw","IntoStorage","Storage","into_storage","prelude","Point","x","y","Size","width","height","GrayColor","luma","BLACK","WHITE","RgbColor","r","g","b","MAX_R","MAX_G","MAX_B","BLACK","RED","GREEN","BLUE","YELLOW","MAGENTA","CYAN","WHITE","DrawTarget","Error","draw_pixel","draw_iter","size","clear","draw_line","draw_triangle","draw_rectangle","draw_circle","draw_image","primitives","circle","Circle","center","radius","new","StyledCircleIterator","line","Line","start","end","new","StyledLineIterator","rectangle","Rectangle","top_left","bottom_right","new","StyledRectangleIterator","triangle","Triangle","p1","p2","p3","new","from_points","StyledTriangleIterator","Primitive","into_styled","style","PrimitiveStyle","fill_color","stroke_color","stroke_width","PrimitiveStyleBuilder","Styled","primitive","style","TextStyle","text_color","background_color","font","TextStyleBuilder","transform","Transform","translate","translate_mut","DrawTarget","Error","draw_pixel","draw_iter","size","clear","draw_line","draw_triangle","draw_rectangle","draw_circle","draw_image","egtext","egcircle","egline","egrectangle","egtriangle","primitive_style","text_style","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","draw_pixel","size","draw","char_offset","char_offset","char_offset","char_offset","char_offset","char_offset","top_left","bottom_right","size","top_left","bottom_right","size","top_left","bottom_right","size","top_left","bottom_right","size","top_left","bottom_right","size","top_left","bottom_right","size","top_left","bottom_right","size","width","height","char_to_color","color_to_char","char_to_color","color_to_char","char_to_color","color_to_char","luma","luma","luma","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","r","g","b","r","g","b","r","g","b","r","g","b","r","g","b","r","g","b","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","div","div","sub","sub","sub","eq","ne","eq","eq","eq","eq","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","add","add","add","mul","mul","neg","add_assign","add_assign","add_assign","sub_assign","sub_assign","sub_assign","mul_assign","mul_assign","div_assign","div_assign","index","index","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","try_from","try_from","try_from","next","next","next","next","next","next","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","draw_iter","clear","draw_line","draw_triangle","draw_rectangle","draw_circle","draw_image","new","into_styled","new","zero","abs","new","zero","new","invert","is_on","is_off","BLACK","WHITE","new","new","new","MAX_R","MAX_G","MAX_B","BLACK","RED","GREEN","BLUE","YELLOW","MAGENTA","CYAN","WHITE","new","new","new","new","new","new","new","with_stroke","with_fill","new","fill_color","stroke_color","stroke_width","build","new","new","new","text_color","background_color","build"],"q":["embedded_graphics","embedded_graphics::drawable","","","","","embedded_graphics","embedded_graphics::fonts","","","","","","","","","","","","","","","","","","","embedded_graphics","embedded_graphics::geometry","","","","","","","","","","embedded_graphics","embedded_graphics::image","","","","","","","","","","","","embedded_graphics","embedded_graphics::mock_display","","","","","","","","","","embedded_graphics","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics","embedded_graphics::prelude","","","","","","","","embedded_graphics::pixelcolor","","embedded_graphics::prelude","","","","embedded_graphics::pixelcolor","","","","","","","","","","","embedded_graphics::prelude","","","","","","","","","","","embedded_graphics","embedded_graphics::primitives","embedded_graphics::primitives::circle","","","","","embedded_graphics::primitives","embedded_graphics::primitives::line","","","","","embedded_graphics::primitives","embedded_graphics::primitives::rectangle","","","","","embedded_graphics::primitives","embedded_graphics::primitives::triangle","","","","","","","embedded_graphics::primitives","","embedded_graphics","embedded_graphics::style","","","","","","","","","","","","","embedded_graphics","embedded_graphics::transform","","","embedded_graphics","","","embedded_graphics::prelude","embedded_graphics","embedded_graphics::prelude","","","","","","embedded_graphics","","","","","","","embedded_graphics::drawable","","","","","","","embedded_graphics::fonts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::geometry","","","","","","","","","","","","","","embedded_graphics::image","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mock_display","","","","","","","embedded_graphics::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::circle","","","","","","","","","","","","","","","embedded_graphics::primitives::line","","","","","","","","","","","","","","","embedded_graphics::primitives::rectangle","","","","","","","","","","","","","","","embedded_graphics::primitives::triangle","","","","","","","","","","","","","","","embedded_graphics::style","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mock_display","","embedded_graphics::drawable","embedded_graphics::fonts","","","","","","embedded_graphics::style","","","embedded_graphics::image","","","embedded_graphics::primitives::circle","","","embedded_graphics::primitives::line","","","embedded_graphics::primitives::rectangle","","","embedded_graphics::primitives::triangle","","","embedded_graphics::style","","","embedded_graphics::image","","embedded_graphics::pixelcolor","","","","","","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","","","","","","embedded_graphics::pixelcolor","","","","","","","","","","","","","","","","","","embedded_graphics::fonts","","embedded_graphics::image","","embedded_graphics::primitives::circle","","embedded_graphics::primitives::line","","embedded_graphics::primitives::rectangle","","embedded_graphics::primitives::triangle","","embedded_graphics::style","","embedded_graphics::drawable","embedded_graphics::fonts","","","","","","","","embedded_graphics::geometry","","embedded_graphics::image","","","embedded_graphics::mock_display","embedded_graphics::pixelcolor","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","embedded_graphics::pixelcolor","","","","","","embedded_graphics::primitives::circle","","embedded_graphics::primitives::line","","embedded_graphics::primitives::rectangle","","embedded_graphics::primitives::triangle","","embedded_graphics::style","","","","","embedded_graphics::geometry","","","","","embedded_graphics::drawable","","embedded_graphics::fonts","","","","","","","","","","embedded_graphics::geometry","","","","embedded_graphics::image","","embedded_graphics::mock_display","embedded_graphics::pixelcolor","","","","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","","","","","","","","embedded_graphics::pixelcolor","","","","","","","","","","","","embedded_graphics::primitives::circle","","","","embedded_graphics::primitives::line","","","","embedded_graphics::primitives::rectangle","","","","embedded_graphics::primitives::triangle","","","","embedded_graphics::style","","","","","","","","","","embedded_graphics::drawable","embedded_graphics::fonts","","","","","","","","embedded_graphics::geometry","","embedded_graphics::image","embedded_graphics::pixelcolor","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","embedded_graphics::pixelcolor","","","","","","embedded_graphics::primitives::circle","","embedded_graphics::primitives::line","","embedded_graphics::primitives::rectangle","","embedded_graphics::primitives::triangle","","embedded_graphics::style","","","","","embedded_graphics::drawable","embedded_graphics::fonts","","","","","","","","embedded_graphics::geometry","","embedded_graphics::image","embedded_graphics::pixelcolor","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","embedded_graphics::pixelcolor","","","","","","embedded_graphics::primitives::circle","","embedded_graphics::primitives::line","","embedded_graphics::primitives::rectangle","","embedded_graphics::primitives::triangle","","embedded_graphics::style","","","","","embedded_graphics::geometry","","","","","","","","","","","","","","","","","","embedded_graphics::drawable","embedded_graphics::fonts","","","","","","","","embedded_graphics::geometry","","embedded_graphics::image","embedded_graphics::pixelcolor","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","embedded_graphics::pixelcolor","","","","","","embedded_graphics::primitives::circle","","embedded_graphics::primitives::line","","embedded_graphics::primitives::rectangle","","embedded_graphics::primitives::triangle","","embedded_graphics::style","","","","","embedded_graphics::geometry","","","embedded_graphics::fonts","embedded_graphics::image","embedded_graphics::primitives::circle","embedded_graphics::primitives::line","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::triangle","embedded_graphics::geometry","","","","","","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","","","","","","","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::drawable","embedded_graphics::fonts","","","","","","","","embedded_graphics::geometry","","embedded_graphics::image","","embedded_graphics::mock_display","embedded_graphics::pixelcolor","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","embedded_graphics::pixelcolor","","","","","","embedded_graphics::primitives::circle","","embedded_graphics::primitives::line","","embedded_graphics::primitives::rectangle","","embedded_graphics::primitives::triangle","","embedded_graphics::style","","","","","embedded_graphics::drawable","embedded_graphics::fonts","","","","","","","embedded_graphics::geometry","","embedded_graphics::mock_display","embedded_graphics::pixelcolor","","","","embedded_graphics::pixelcolor::raw","","","","","","","embedded_graphics::pixelcolor","","","","","","embedded_graphics::primitives::circle","embedded_graphics::primitives::line","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::triangle","embedded_graphics::style","","","","","embedded_graphics::prelude","","","","","","","embedded_graphics::fonts","","embedded_graphics::geometry","","","","","embedded_graphics::image","embedded_graphics::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::style","","","","","","","","","","","","",""],"d":["<code>Drawable</code> trait and helpers","Marks an object as “drawable”. Must be implemented …","Draw the graphics object using the supplied DrawTarget.","A single pixel.","","","Monospaced bitmap fonts.","Pixel iterator for styled text.","A text object.","The string.","The position.","12x16 pixel monospace font.","24x32 pixel monospace font.","6x12 pixel monospace font.","6x6 pixel variable width font.","6x8 pixel monospace font.","8x16 pixel monospace font.","Monospaced bitmap font.","Raw image data containing the font.","The width of the raw image data.","Size of a single character in pixel.","Spacing between characters.","Whether characters have a variable width or not.","Returns the position a character in the font.","Returns the actual width of a character in the font.","Returns the value of a pixel in a character in the font.","Geometry module.","2D point.","The x coordinate.","The y coordinate.","2D size.","The width.","The height.","Adds the ability to get the dimensions/position of a …","Get the top left corner of the bounding box for an object","Get the bottom right corner of the bounding box for an …","Get the width and height for an object","Image support for embedded-graphics","An image constructed from a slice of raw pixel data.","Image with big endian data.","Image with little endian data.","Conversion into an iterator over the pixels of the image.","Iterator over pixels in the image","Get an iterator over the pixels of the image","A trait to get the dimensions of an image.","Get the width in pixels of an image","Get the height in pixels of an image","Image drawable.","Create a new <code>Image</code> with the given image pixel data.","Pixel iterator over <code>Image</code> objects","Mock display for use in tests.","Mock display struct","Creates a new empty mock display.","Returns the width of the display.","Returns the height of the display.","Returns the color of a pixel.","Changes the color of a pixel.","Creates a new mock display from a character pattern.","Mapping between <code>char</code>s and colors.","Converts a char into a color of type <code>C</code>.","Converts a color of type <code>C</code> into a char.","Pixel color types.","Raw color types.","Trait implemented by all <code>RawUx</code> types.","Storage type.","Bits per pixel.","Converts this raw data into the storage type.","Converts a <code>u32</code> into a <code>RawData</code> type.","1 bit per pixel raw data.","Creates a new color from the least significant","2 bits per pixel raw data.","Creates a new color from the least significant","4 bits per pixel raw data.","Creates a new color from the least significant","8 bits per pixel raw data.","Creates a new color from the least significant","16 bits per pixel raw data.","Creates a new color from the least significant","24 bits per pixel raw data.","Creates a new color from the least significant","32 bits per pixel raw data.","Creates a new color from the least significant","Raw data byte order.","Little endian byte order marker.","Big endian byte order marker.","Binary color.","Inactive pixel.","Active pixel.","Grayscale color.","Returns the luma channel value.","Black color (0% luma)","White color (100% luma)","2 bit grayscale color.","4 bit grayscale color.","8 bit grayscale color.","RGB color.","Returns the red channel value.","Returns the green channel value.","Returns the blue channel value.","The maximum value in the red channel.","The maximum value in the green channel.","The maximum value in the blue channel.","Black color (R: 0%, G: 0%, B: 0%)","Red color (R: 100%, G: 0%, B: 0%)","Green color (R: 0%, G: 100%, B: 0%)","Blue color (R: 0%, G: 0%, B: 100%)","Yellow color (R: 100%, G: 100%, B: 0%)","Magenta color (R: 100%, G: 0%, B: 100%)","Cyan color (R: 0%, G: 100%, B: 100%)","White color (R: 100%, G: 100%, B: 100%)","Rgb555 color.","Bgr555 color.","Rgb565 color.","Bgr565 color.","Rgb888 color.","Bgr888 color.","Pixel color trait.","Raw data type.","Convert a <code>PixelColor</code> into its underlying storage type","The underlying storage type for the pixel color","Convert the <code>PixelColor</code> into its raw storage form","Prelude","2D point.","The x coordinate.","The y coordinate.","2D size.","The width.","The height.","Grayscale color.","Returns the luma channel value.","Black color (0% luma)","White color (100% luma)","RGB color.","Returns the red channel value.","Returns the green channel value.","Returns the blue channel value.","The maximum value in the red channel.","The maximum value in the green channel.","The maximum value in the blue channel.","Black color (R: 0%, G: 0%, B: 0%)","Red color (R: 100%, G: 0%, B: 0%)","Green color (R: 0%, G: 100%, B: 0%)","Blue color (R: 0%, G: 0%, B: 100%)","Yellow color (R: 100%, G: 100%, B: 0%)","Magenta color (R: 100%, G: 0%, B: 100%)","Cyan color (R: 0%, G: 100%, B: 100%)","White color (R: 100%, G: 100%, B: 100%)","Defines a display that can be used to render <code>Drawable</code> …","Error type to return when a drawing operation fails.","Draws a pixel on the display.","Draws an object from an iterator over its pixels.","Returns the dimensions of the <code>DrawTarget</code> in pixels.","Clears the display with the supplied color.","Draws a styled line primitive.","Draws a styled triangle primitive.","Draws a styled rectangle primitive.","Draws a styled circle primitive.","Draws an image with known size","Graphics primitives","The circle primitive","Circle primitive","Center point of circle","Radius of the circle","Create a new circle centered around a given point with a …","Pixel iterator for each pixel in the circle border","The line primitive","Line primitive","Start point","End point","Create a new line","Pixel iterator for each pixel in the line","The rectangle primitive. Also good for drawing squares.","Rectangle primitive","Top left point of the rect","Bottom right point of the rect","Create a new rectangle from the top left point to the …","Pixel iterator for each pixel in the rect border","The triangle primitive.","Triangle primitive","First point of the triangle","Second point of the triangle","Third point of the triangle","Create a new triangle with a given style","Creates a new triangle from an array of points.","Pixel iterator for each pixel in the triangle border","Primitive trait","Converts this primitive into a <code>Styled</code>.","Styling struct to customize the look of objects.","Style properties for primitives.","Fill color of the primitive.","Stroke color of the primitive.","Stroke width in pixels.","Primitive style builder.","Styled.","Primitive.","Style.","Style properties for text.","Text color.","Background color.","Font.","Text style builder.","Transformations for graphics objects","Transform operations","Move the origin of an object by a given number of (x, y) …","Move the origin of an object by a given number of (x, y) …","Defines a display that can be used to render <code>Drawable</code> …","Error type to return when a drawing operation fails.","Draws a pixel on the display.","Draws an object from an iterator over its pixels.","Returns the dimensions of the <code>DrawTarget</code> in pixels.","Clears the display with the supplied color.","Draws a styled line primitive.","Draws a styled triangle primitive.","Draws a styled rectangle primitive.","Draws a styled circle primitive.","Draws an image with known size","Creates a styled text.","Create a <code>Circle</code> with optional styling using a convenient …","Create a <code>Line</code> with optional styling using a convenient …","Create a <code>Rectangle</code> with optional styling using a …","Create a <code>Triangle</code> with optional styling using a …","Create a <code>PrimitiveStyle</code>","Create a <code>TextStyle</codeeturns the size of the bounding box of a styled text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Translate the image by a given delta, returning a new …","Translate the image by a given delta, modifying the …","Translate the circle center from its current position to …","Translate the circle center from its current position to …","Translate the line from its current position to a new …","Translate the line from its current position to a new …","Translate the rect from its current position to a new …","Translate the rect from its current position to a new …","Translate the triangle from its current position to a new …","Translate the triangle from its current position to a new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Offsets a point by subtracting a sizeffsets a point by adding a size.","","","","","","Offsets a point by adding a size.","","","Offsets a point by subtracting a sizeraws an object from an iterator over its pixels.","Clears the display with the supplied color.","Draws a styled line primitive.","Draws a styled triangle primitive.","Draws a styled rectangle primitive.","Draws a styled circle primitive.","Draws an image with known size","Creates a text.","Attaches a text style to the text object.","Creates a point from  X and Y coordinates.","Creates a point with X and Y equal to zero.","Remove the sign from a coordinate","Creates a size from a width and a height.","Creates a size with width and height equal to zero.","Creates a new image.","Inverts the color.","Returns <code>true</code> if this color is <code>On</code>.","Returns <code>true</code> if this color is <code>Off</code>.","Black color (0% luma)","White color (100% luma)","Creates a new grayscale color.","Creates a new grayscale color.","Creates a new grayscale color.","The maximum value in the red channel.","The maximum value in the green channel.","The maximum value in the blue channel.","Black color (R: 0%, G: 0%, B: 0%)","Red color (R: 100%, G: 0%, B: 0%)","Green color (R: 0%, G: 100%, B: 0%)","Blue color (R: 0%, G: 0%, B: 100%)","Yellow color (R: 100%, G: 100%, B: 0%)","Magenta color (R: 100%, G: 0%, B: 100%)","Cyan color (R: 0%, G: 100%, B: 100%)","White color (R: 100%, G: 100%, B: 100%)","Creates a new Rgb555 color. Too large channel values will …","Creates a new Bgr555 color. Too large channel values will …","Creates a new Rgb565 color. Too large channel values will …","Creates a new Bgr565 color. Too large channel values will …","Creates a new Rgb888 color. Too large channel values will …","Creates a new Bgr888 color. Too large channel values will …","Creates a primitive style without fill and stroke.","Creates a stroke primitive style.","Creates a fill primitive style.","Creates a new primitive style builder.","Sets the fill color.","Sets the stroke color.","Sets the stroke width.","Builds the primitive style.","Creates a styled.","Creates a text style with transparent background.","Creates a new text style builder with a given font.","Sets the text color.","Sets the background color.","Builds the text style."],"i":[0,0,1,0,2,2,0,0,0,3,3,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,0,0,5,5,0,6,6,0,7,7,7,0,0,0,0,0,8,8,0,9,9,0,10,0,0,0,11,11,11,11,11,11,0,12,12,0,0,0,13,13,13,13,0,14,0,15,0,16,0,17,0,18,0,19,0,20,0,0,0,0,21,21,0,22,22,22,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,24,0,25,25,0,0,5,5,0,6,6,0,22,22,22,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,26,26,26,26,26,26,26,26,26,26,0,0,0,27,27,27,0,0,0,28,28,28,0,0,0,29,29,29,0,0,0,30,30,30,30,30,0,0,31,0,0,32,32,32,0,0,33,33,0,34,34,34,0,0,0,35,35,0,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,2,2,2,2,2,2,2,36,36,36,36,36,36,36,37,37,37,37,37,37,37,38,38,38,38,38,38,38,39,39,39,39,39,39,39,40,40,40,40,40,40,40,41,41,41,41,41,41,41,3,3,3,3,3,3,3,42,42,42,42,42,42,42,42,5,5,5,5,5,5,5,6,6,6,6,6,6,6,43,43,43,43,43,43,43,10,10,10,10,10,10,10,44,44,44,44,44,44,44,44,11,11,11,11,11,11,11,21,21,21,21,21,21,21,45,45,45,45,45,45,45,46,46,46,46,46,46,46,47,47,47,47,47,47,47,14,14,14,14,14,14,14,15,15,15,15,15,15,15,16,16,16,16,16,16,16,17,17,17,17,17,17,17,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,48,48,48,48,48,48,48,49,49,49,49,49,49,49,50,50,50,50,50,50,50,51,51,51,51,51,51,51,52,52,52,52,52,52,52,53,53,53,53,53,53,53,54,54,54,54,54,54,54,55,55,55,55,55,55,55,27,27,27,27,27,27,27,56,56,56,56,56,56,56,56,28,28,28,28,28,28,28,57,57,57,57,57,57,57,57,29,29,29,29,29,29,29,58,58,58,58,58,58,58,58,30,30,30,30,30,30,30,59,59,59,59,59,59,59,59,32,32,32,32,32,32,32,60,60,60,60,60,60,60,33,33,33,33,33,33,33,34,34,34,34,34,34,34,61,61,61,61,61,61,61,11,11,2,36,37,38,39,40,41,33,33,33,10,10,10,27,27,27,28,28,28,29,29,29,30,30,30,33,33,33,43,43,21,21,47,47,54,54,45,46,47,14,14,15,15,16,16,17,17,18,18,19,19,20,20,50,50,50,51,51,51,52,52,52,53,53,53,54,54,54,55,55,55,3,3,10,10,27,27,28,28,29,29,30,30,33,33,2,36,37,38,39,40,41,3,42,5,6,43,10,44,11,21,45,46,47,14,15,16,17,18,19,20,48,49,50,51,52,53,54,55,27,56,28,57,29,58,30,59,32,60,33,34,61,5,6,5,5,6,2,2,36,37,38,39,40,41,3,3,42,42,5,5,6,6,43,43,11,21,45,45,46,46,47,47,14,14,15,15,16,16,17,17,18,18,19,19,20,20,48,49,50,50,51,51,52,52,53,53,54,54,55,55,27,27,56,56,28,28,57,57,29,29,58,58,30,30,59,59,32,32,60,60,33,33,34,34,61,61,2,36,37,38,39,40,41,3,42,5,6,43,21,45,46,47,14,15,16,17,18,19,20,48,49,50,51,52,53,54,55,27,56,28,57,29,58,30,59,32,60,33,34,61,2,36,37,38,39,40,41,3,42,5,6,43,21,45,46,47,14,15,16,17,18,19,20,48,49,50,51,52,53,54,55,27,56,28,57,29,58,30,59,32,60,33,34,61,5,5,6,5,6,5,5,5,6,5,5,6,5,6,5,6,5,6,2,36,37,38,39,40,41,3,42,5,6,43,21,45,46,47,14,15,16,17,18,19,20,48,49,50,51,52,53,54,55,27,56,28,57,29,58,30,59,32,60,33,34,61,5,5,5,42,44,56,57,58,59,5,5,5,6,6,6,21,14,21,50,50,50,50,50,51,51,51,51,51,52,52,52,52,52,53,53,53,53,53,54,54,54,54,54,55,55,55,55,55,50,50,50,51,51,51,52,52,52,53,53,53,54,54,54,55,55,55,50,51,52,53,54,55,45,46,47,45,15,46,16,47,17,14,15,16,17,18,19,20,50,18,51,18,52,18,53,18,54,19,55,19,2,36,37,38,39,40,41,3,42,5,6,43,10,11,21,45,46,47,14,15,16,17,18,19,20,48,49,50,51,52,53,54,55,27,56,28,57,29,58,30,59,32,60,33,34,61,2,36,37,38,39,40,41,42,5,6,11,21,45,46,47,14,15,16,17,18,19,20,50,51,52,53,54,55,27,28,29,30,32,60,33,34,61,26,26,26,26,26,26,26,3,3,5,5,5,6,6,43,21,21,21,22,22,45,46,47,23,23,23,23,23,23,23,23,23,23,23,50,51,52,53,54,55,32,32,32,60,60,60,60,60,33,34,61,61,61,61],"f":[null,null,[[],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["char",15]],["u32",15]],[[["char",15]],["u32",15]],[[["u32",15],["char",15]],["bool",15]],null,null,null,null,null,null,null,null,[[],["point",3]],[[],["point",3]],[[],["size",3]],null,null,null,null,null,null,[[]],null,[[],["u32",15]],[[],["u32",15]],null,[[["point",3]]],null,null,null,[[]],[[],["usize",15]],[[],["usize",15]],[[["point",3]],["option",4]],[[["option",4],["point",3]]],[[],["mockdisplay",3]],null,[[["char",15]]],[[],["char",15]],null,null,null,null,null,[[]],[[["u32",15]]],null,[[["u8",15]]],null,[[["u8",15]]],null,[[["u8",15]]],null,[[["u8",15]]],null,[[["u16",15]]],null,[[["u32",15]]],null,[[["u32",15]]],null,null,null,null,null,null,null,[[],["u8",15]],null,null,null,null,null,null,[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,[[],["u8",15]],null,null,null,[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["pixel",3]],["result",4]],[[],["result",4]],[[],["size",3]],[[],["result",4]],[[["styled",3]],["result",4]],[[["styled",3]],["result",4]],[[["styled",3]],["result",4]],[[["styled",3]],["result",4]],[[["image",3]],["result",4]],null,null,null,null,null,[[["u32",15],["point",3]]],null,null,null,null,null,[[["point",3]]],null,null,null,null,null,[[["point",3]]],null,null,null,null,null,null,[[["point",3]]],[[]],null,null,[[["primitivestyle",3]],[["styled",3],["primitivestyle",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["point",3]]],[[["point",3]]],null,null,[[["pixel",3]],["result",4]],[[],["result",4]],[[],["size",3]],[[],["result",4]],[[["styled",3]],["result",4]],[[["styled",3]],["result",4]],[[["styled",3]],["result",4]],[[["styled",3]],["result",4]],[[["image",3]],["result",4]],null,null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["pixel",3]],["result",4]],[[],["size",3]],[[],["result",4]],[[["char",15]],["u32",15]],[[["char",15]],["u32",15]],[[["char",15]],["u32",15]],[[["char",15]],["u32",15]],[[["char",15]],["u32",15]],[[["char",15]],["u32",15]],[[],["point",3]],[[],["point",3]],[[],["size",3]],[[],["point",3]],[[],["point",3]],[[],["size",3]],[[],["point",3]],[[],["point",3]],[[],["size",3]],[[],["point",3]],[[],["point",3]],[[],["size",3]],[[],["point",3]],[[],["point",3]],[[],["size",3]],[[],["point",3]],[[],["point",3]],[[],["size",3]],[[],["point",3]],[[],["point",3]],[[],["size",3]],[[],["u32",15]],[[],["u32",15]],[[["char",15]]],[[["binarycolor",4]],["char",15]],[[["char",15]]],[[["gray8",3]],["char",15]],[[["char",15]]],[[["rgb888",3]],["char",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["i32",15]],["point",3]],[[["u32",15]],["size",3]],[[["point",3]],["point",3]],[[["size",3]],["point",3]],[[["size",3]],["size",3]],[[["pixel",3]],["bool",15]],[[["pixel",3]],["bool",15]],[[["font12x16",3]],["bool",15]],[[["font24x32",3]],["bool",15]],[[["font6x12",3]],["bool",15]],[[["font6x6",3]],["bool",15]],[[["font6x8",3]],["bool",15]],[[["font8x16",3]],["bool",15]],[[["text",3]],["bool",15]],[[["text",3]],["bool",15]],[[["styledtextiterator",3]],["bool",15]],[[["styledtextiterator",3]],["bool",15]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[["size",3]],["bool",15]],[[["size",3]],["bool",15]],[[["imageraw",3]],["bool",15]],[[["imageraw",3]],["bool",15]],[[["mockdisplay",3]],["bool",15]],[[["binarycolor",4]],["bool",15]],[[["gray2",3]],["bool",15]],[[["gray2",3]],["bool",15]],[[["gray4",3]],["bool",15]],[[["gray4",3]],["bool",15]],[[["gray8",3]],["bool",15]],[[["gray8",3]],["bool",15]],[[["rawu1",3]],["bool",15]],[[["rawu1",3]],["bool",15]],[[["rawu2",3]],["bool",15]],[[["rawu2",3]],["bool",15]],[[["rawu4",3]],["bool",15]],[[["rawu4",3]],["bool",15]],[[["rawu8",3]],["bool",15]],[[["rawu8",3]],["bool",15]],[[["rawu16",3]],["bool",15]],[[["rawu16",3]],["bool",15]],[[["rawu24",3]],["bool",15]],[[["rawu24",3]],["bool",15]],[[["rawu32",3]],["bool",15]],[[["rawu32",3]],["bool",15]],[[["littleendian",4]],["bool",15]],[[["bigendian",4]],["bool",15]],[[["rgb555",3]],["bool",15]],[[["rgb555",3]],["bool",15]],[[["bgr555",3]],["bool",15]],[[["bgr555",3]],["bool",15]],[[["rgb565",3]],["bool",15]],[[["rgb565",3]],["bool",15]],[[["bgr565",3]],["bool",15]],[[["bgr565",3]],["bool",15]],[[["rgb888",3]],["bool",15]],[[["rgb888",3]],["bool",15]],[[["bgr888",3]],["bool",15]],[[["bgr888",3]],["bool",15]],[[["circle",3]],["bool",15]],[[["circle",3]],["bool",15]],[[["styledcircleiterator",3]],["bool",15]],[[["styledcircleiterator",3]],["bool",15]],[[["line",3]],["bool",15]],[[["line",3]],["bool",15]],[[["styledlineiterator",3]],["bool",15]],[[["styledlineiterator",3]],["bool",15]],[[["rectangle",3]],["bool",15]],[[["rectangle",3]],["bool",15]],[[["styledrectangleiterator",3]],["bool",15]],[[["styledrectangleiterator",3]],["bool",15]],[[["triangle",3]],["bool",15]],[[["triangle",3]],["bool",15]],[[["styledtriangleiterator",3]],["bool",15]],[[["styledtriangleiterator",3]],["bool",15]],[[["primitivestyle",3]],["bool",15]],[[["primitivestyle",3]],["bool",15]],[[["primitivestylebuilder",3]],["bool",15]],[[["primitivestylebuilder",3]],["bool",15]],[[["styled",3]],["bool",15]],[[["styled",3]],["bool",15]],[[["textstyle",3]],["bool",15]],[[["textstyle",3]],["bool",15]],[[["textstylebuilder",3]],["bool",15]],[[["textstylebuilder",3]],["bool",15]],[[["pixel",3]],["ordering",4]],[[["font12x16",3]],["ordering",4]],[[["font24x32",3]],["ordering",4]],[[["font6x12",3]],["ordering",4]],[[["font6x6",3]],["ordering",4]],[[["font6x8",3]],["ordering",4]],[[["font8x16",3]],["ordering",4]],[[["text",3]],["ordering",4]],[[["styledtextiterator",3]],["ordering",4]],[[["point",3]],["ordering",4]],[[["size",3]],["ordering",4]],[[["imageraw",3]],["ordering",4]],[[["binarycolor",4]],["ordering",4]],[[["gray2",3]],["ordering",4]],[[["gray4",3]],["ordering",4]],[[["gray8",3]],["ordering",4]],[[["rawu1",3]],["ordering",4]],[[["rawu2",3]],["ordering",4]],[[["rawu4",3]],["ordering",4]],[[["rawu8",3]],["ordering",4]],[[["rawu16",3]],["ordering",4]],[[["rawu24",3]],["ordering",4]],[[["rawu32",3]],["ordering",4]],[[["littleendian",4]],["ordering",4]],[[["bigendian",4]],["ordering",4]],[[["rgb555",3]],["ordering",4]],[[["bgr555",3]],["ordering",4]],[[["rgb565",3]],["ordering",4]],[[["bgr565",3]],["ordering",4]],[[["rgb888",3]],["ordering",4]],[[["bgr888",3]],["ordering",4]],[[["circle",3]],["ordering",4]],[[["styledcircleiterator",3]],["ordering",4]],[[["line",3]],["ordering",4]],[[["styledlineiterator",3]],["ordering",4]],[[["rectangle",3]],["ordering",4]],[[["styledrectangleiterator",3]],["ordering",4]],[[["triangle",3]],["ordering",4]],[[["styledtriangleiterator",3]],["ordering",4]],[[["primitivestyle",3]],["ordering",4]],[[["primitivestylebuilder",3]],["ordering",4]],[[["styled",3]],["ordering",4]],[[["textstyle",3]],["ordering",4]],[[["textstylebuilder",3]],["ordering",4]],[[["pixel",3]],[["ordering",4],["option",4]]],[[["font12x16",3]],[["ordering",4],["option",4]]],[[["font24x32",3]],[["ordering",4],["option",4]]],[[["font6x12",3]],[["ordering",4],["option",4]]],[[["font6x6",3]],[["ordering",4],["option",4]]],[[["font6x8",3]],[["ordering",4],["option",4]]],[[["font8x16",3]],[["ordering",4],["option",4]]],[[["text",3]],[["ordering",4],["option",4]]],[[["styledtextiterator",3]],[["ordering",4],["option",4]]],[[["point",3]],[["ordering",4],["option",4]]],[[["size",3]],[["ordering",4],["option",4]]],[[["imageraw",3]],[["ordering",4],["option",4]]],[[["binarycolor",4]],[["ordering",4],["option",4]]],[[["gray2",3]],[["ordering",4],["option",4]]],[[["gray4",3]],[["ordering",4],["option",4]]],[[["gray8",3]],[["ordering",4],["option",4]]],[[["rawu1",3]],[["ordering",4],["option",4]]],[[["rawu2",3]],[["ordering",4],["option",4]]],[[["rawu4",3]],[["ordering",4],["option",4]]],[[["rawu8",3]],[["ordering",4],["option",4]]],[[["rawu16",3]],[["ordering",4],["option",4]]],[[["rawu24",3]],[["ordering",4],["option",4]]],[[["rawu32",3]],[["ordering",4],["option",4]]],[[["littleendian",4]],[["ordering",4],["option",4]]],[[["bigendian",4]],[["ordering",4],["option",4]]],[[["rgb555",3]],[["ordering",4],["option",4]]],[[["bgr555",3]],[["ordering",4],["option",4]]],[[["rgb565",3]],[["ordering",4],["option",4]]],[[["bgr565",3]],[["ordering",4],["option",4]]],[[["rgb888",3]],[["ordering",4],["option",4]]],[[["bgr888",3]],[["ordering",4],["option",4]]],[[["circle",3]],[["ordering",4],["option",4]]],[[["styledcircleiterator",3]],[["ordering",4],["option",4]]],[[["line",3]],[["ordering",4],["option",4]]],[[["styledlineiterator",3]],[["ordering",4],["option",4]]],[[["rectangle",3]],[["ordering",4],["option",4]]],[[["styledrectangleiterator",3]],[["ordering",4],["option",4]]],[[["triangle",3]],[["ordering",4],["option",4]]],[[["styledtriangleiterator",3]],[["ordering",4],["option",4]]],[[["primitivestyle",3]],[["ordering",4],["option",4]]],[[["primitivestylebuilder",3]],[["ordering",4],["option",4]]],[[["styled",3]],[["ordering",4],["option",4]]],[[["textstyle",3]],[["ordering",4],["option",4]]],[[["textstylebuilder",3]],[["ordering",4],["option",4]]],[[["point",3]],["point",3]],[[["size",3]],["point",3]],[[["size",3]],["size",3]],[[["i32",15]],["point",3]],[[["u32",15]],["size",3]],[[]],[[["point",3]]],[[["size",3]]],[[["size",3]]],[[["point",3]]],[[["size",3]]],[[["size",3]]],[[["i32",15]]],[[["u32",15]]],[[["i32",15]]],[[["u32",15]]],[[["usize",15]],["i32",15]],[[["usize",15]],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rawu1",3]]],[[["binarycolor",4]]],[[["bool",15]]],[[["bgr555",3]]],[[["rgb565",3]]],[[["bgr565",3]]],[[["rgb888",3]]],[[["bgr888",3]]],[[["rgb555",3]]],[[["rgb565",3]]],[[["bgr565",3]]],[[["rgb888",3]]],[[["bgr888",3]]],[[["rgb555",3]]],[[["bgr555",3]]],[[["bgr565",3]]],[[["rgb888",3]]],[[["bgr888",3]]],[[["rgb555",3]]],[[["bgr555",3]]],[[["rgb565",3]]],[[["rgb888",3]]],[[["bgr888",3]]],[[["rgb555",3]]],[[["bgr555",3]]],[[["rgb565",3]]],[[["bgr565",3]]],[[["bgr888",3]]],[[["rgb555",3]]],[[["bgr555",3]]],[[["rgb565",3]]],[[["bgr565",3]]],[[["rgb888",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["rawu2",3]]],[[["gray2",3]]],[[["rawu4",3]]],[[["gray4",3]]],[[["rawu8",3]]],[[["gray8",3]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u16",15]]],[[["u32",15]]],[[["u32",15]]],[[["rawu16",3]]],[[["rgb555",3]]],[[["rawu16",3]]],[[["bgr555",3]]],[[["rawu16",3]]],[[["rgb565",3]]],[[["rawu16",3]]],[[["bgr565",3]]],[[["rawu24",3]]],[[["rgb888",3]]],[[["rawu24",3]]],[[["bgr888",3]]],[[],["pixel",3]],[[],["font12x16",3]],[[],["font24x32",3]],[[],["font6x12",3]],[[],["font6x6",3]],[[],["font6x8",3]],[[],["font8x16",3]],[[],["text",3]],[[],["styledtextiterator",3]],[[],["point",3]],[[],["size",3]],[[],["imageraw",3]],[[],["image",3]],[[],["mockdisplay",3]],[[],["binarycolor",4]],[[],["gray2",3]],[[],["gray4",3]],[[],["gray8",3]],[[],["rawu1",3]],[[],["rawu2",3]],[[],["rawu4",3]],[[],["rawu8",3]],[[],["rawu16",3]],[[],["rawu24",3]],[[],["rawu32",3]],[[],["littleendian",4]],[[],["bigendian",4]],[[],["rgb555",3]],[[],["bgr555",3]],[[],["rgb565",3]],[[],["bgr565",3]],[[],["rgb888",3]],[[],["bgr888",3]],[[],["circle",3]],[[],["styledcircleiterator",3]],[[],["line",3]],[[],["styledlineiterator",3]],[[],["rectangle",3]],[[],["styledrectangleiterator",3]],[[],["triangle",3]],[[],["styledtriangleiterator",3]],[[],["primitivestyle",3]],[[],["primitivestylebuilder",3]],[[],["styled",3]],[[],["textstyle",3]],[[],["textstylebuilder",3]],[[],["pixel",3]],[[],["font12x16",3]],[[],["font24x32",3]],[[],["font6x12",3]],[[],["font6x6",3]],[[],["font6x8",3]],[[],["font8x16",3]],[[],["styledtextiterator",3]],[[],["point",3]],[[],["size",3]],[[]],[[]],[[],["gray2",3]],[[],["gray4",3]],[[],["gray8",3]],[[],["rawu1",3]],[[],["rawu2",3]],[[],["rawu4",3]],[[],["rawu8",3]],[[],["rawu16",3]],[[],["rawu24",3]],[[],["rawu32",3]],[[],["rgb555",3]],[[],["bgr555",3]],[[],["rgb565",3]],[[],["bgr565",3]],[[],["rgb888",3]],[[],["bgr888",3]],[[],["circle",3]],[[],["line",3]],[[],["rectangle",3]],[[],["triangle",3]],[[]],[[],["primitivestylebuilder",3]],[[],["styled",3]],[[],["textstyle",3]],[[],["textstylebuilder",3]],[[],["result",4]],[[],["result",4]],[[["styled",3]],["result",4]],[[["styled",3]],["result",4]],[[["styled",3]],["result",4]],[[["styled",3]],["result",4]],[[["image",3]],["result",4]],[[["point",3],["str",15]]],[[["textstyle",3]],[["styled",3],["textstyle",3]]],[[["i32",15]]],[[]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[],["primitivestyle",3]],[[]],[[]],[[]],[[]],[[]],[[],["textstyle",3]]],"p":[[8,"Drawable"],[3,"Pixel"],[3,"Text"],[8,"Font"],[3,"Point"],[3,"Size"],[8,"Dimensions"],[8,"IntoPixelIter"],[8,"ImageDimensions"],[3,"Image"],[3,"MockDisplay"],[8,"ColorMapping"],[8,"RawData"],[3,"RawU1"],[3,"RawU2"],[3,"RawU4"],[3,"RawU8"],[3,"RawU16"],[3,"RawU24"],[3,"RawU32"],[4,"BinaryColor"],[8,"GrayColor"],[8,"RgbColor"],[8,"PixelColor"],[8,"IntoStorage"],[8,"DrawTarget"],[3,"Circle"],[3,"Line"],[3,"Rectangle"],[3,"Triangle"],[8,"Primitive"],[3,"PrimitiveStyle"],[3,"Styled"],[3,"TextStyle"],[8,"Transform"],[3,"Font12x16"],[3,"Font24x32"],[3,"Font6x12"],[3,"Font6x6"],[3,"Font6x8"],[3,"Font8x16"],[3,"StyledTextIterator"],[3,"ImageRaw"],[3,"ImageIterator"],[3,"Gray2"],[3,"Gray4"],[3,"Gray8"],[4,"LittleEndian"],[4,"BigEndian"],[3,"Rgb555"],[3,"Bgr555"],[3,"Rgb565"],[3,"Bgr565"],[3,"Rgb888"],[3,"Bgr888"],[3,"StyledCircleIterator"],[3,"StyledLineIterator"],[3,"StyledRectangleIterator"],[3,"StyledTriangleIterator"],[3,"PrimitiveStyleBuilder"],[3,"TextStyleBuilder"]]}\
}');
initSearch(searchIndex);