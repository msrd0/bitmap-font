var searchIndex = JSON.parse('{\
"az":{"doc":"Numeric casts","t":[8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,5,5,5,5,5,5,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Cast","cast","CheckedCast","checked_cast","SaturatingCast","saturating_cast","WrappingCast","wrapping_cast","OverflowingCast","overflowing_cast","UnwrappedCast","unwrapped_cast","Az","az","CheckedAs","checked_as","SaturatingAs","saturating_as","WrappingAs","wrapping_as","OverflowingAs","overflowing_as","UnwrappedAs","unwrapped_as","cast","checked_cast","saturating_cast","wrapping_cast","overflowing_cast","unwrapped_cast","Round","0","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","checked_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","saturating_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","wrapping_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","overflowing_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","unwrapped_cast","fmt","fmt","fmt","fmt","eq","ne","partial_cmp","clone","default"],"q":["azd":["Used to cast values.","Casts the value.","Used for checked casts.","Casts the value.","Used to cast into the destination type, saturating if the …","Casts the value.","Wrapping cast.","Casts the value.","Used for overflowing casts.","Casts the value.","Used to cast values, panicking if the value does not fit.","Casts the value.","Used to cast values.","Casts the value.","Used for checked casts.","Casts the value.","Used to cast into the destination type, saturating if the …","Casts the value.","Wrapping cast.","Casts the value.","Used for overflowing casts.","Casts the value.","Used to cast values, panicking if the value does not fit.","Casts the value.","Casts the value.","Casts the value, returning <code>None</code> if the value does not fit.","Casts the value, saturating if the value does not fit.","Casts the value, wrapping on overflow.","Overflowing cast.","Casts the value, panicking if the value does not fit.","Used to convert floating-point numbers to integers with …i":[0,1,0,2,0,3,0,4,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,12,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13],"f":[null,[[]],null,[[],["option",4]],null,[[]],null,[[]],null,[[]],null,[[]],null,[[]],null,[[],["option",4]],null,[[]],null,[[]],null,[[]],null,[[]],[[["cast",8]]],[[["checkedcast",8]],["option",4]],[[["saturatingcast",8]]],[[["wrappingcast",8]]],[[["overflowingcast",8]]],[[["unwrappedcast",8]]],null,null,[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["i8",15]],[[],[["wrapping",3],["i8",15]]],[[],["i16",15]],[[],[["i16",15],["wrapping",3]]],[[],["i32",15]],[[],[["i32",15],["wrapping",3]]],[[],["i64",15]],[[],[["i64",15],["wrapping",3]]],[[],["i128",15]],[[],[["wrapping",3],["i128",15]]],[[],["isize",15]],[[],[["isize",15],["wrapping",3]]],[[],["u8",15]],[[],[["wrapping",3],["u8",15]]],[[],["u16",15]],[[],[["wrapping",3],["u16",15]]],[[],["u32",15]],[[],[["wrapping",3],["u32",15]]],[[],["u64",15]],[[],[["u64",15],["wrapping",3]]],[[],["u128",15]],[[],[["wrapping",3],["u128",15]]],[[],["usize",15]],[[],[["usize",15],["wrapping",3]]],[[],["i8",15]],[[],[["wrapping",3],["i8",15]]],[[],["i16",15]],[[],[["i16",15],["wrapping",3]]],[[],["i32",15]],[[],[["i32",15],["wrapping",3]]],[[],["i64",15]],[[],[["i64",15],["wrapping",3]]],[[],["i128",15]],[[],[["wrapping",3],["i128",15]]],[[],["isize",15]],[[],[["isize",15],["wrapping",3]]],[[],["u8",15]],[[],[["wrapping",3],["u8",15]]],[[],["u16",15]],[[],[["wrapping",3],["u16",15]]],[[],["u32",15]],[[],[["wrapping",3],["u32",15]]],[[],["u64",15]],[[],[["u64",15],["wrapping",3]]],[[],["u128",15]],[[],[["wrapping",3],["u128",15]]],[[],["usize",15]],[[],[["usize",15],["wrapping",3]]],[[],[["option",4],["i8",15]]],[[],[["wrapping",3],["option",4]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["i32",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["wrapping",3]]],[[],[["option",4],["isize",15]]],[[],[["option",4],["wrapping",3]]],[[],[["u8",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["u16",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["wrapping",3]]],[[],[["u128",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["usize",15],["option",4]]],[[],[["wrapping",3],["option",4]]],[[],[["option",4],["i8",15]]],[[],[["wrapping",3],["option",4]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["i32",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["wrapping",3]]],[[],[["option",4],["isize",15]]],[[],[["option",4],["wrapping",3]]],[[],[["u8",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["u16",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["wrapping",3]]],[[],[["u128",15],["option",4]]],[[],[["option",4],["wrapping",3]]],[[],[["usize",15],["option",4]]],[[],[["wrapping",3],["option",4]]],[[],["i8",15]],[[],["i16",15]],[[],["i32",15]],[[],["i64",15]],[[],["i128",15]],[[],["isize",15]],[[],["u8",15]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[],["usize",15]],[[],["i8",15]],[[],["i16",15]],[[],["i32",15]],[[],["i64",15]],[[],["i128",15]],[[],["isize",15]],[[],["u8",15]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[],["usize",15]],[[],["i8",15]],[[],["i16",15]],[[],["i32",15]],[[],["i64",15]],[[],["i128",15]],[[],["isize",15]],[[],["u8",15]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[],["usize",15]],[[],["i8",15]],[[],["i16",15]],[[],["i32",15]],[[],["i64",15]],[[],["i128",15]],[[],["isize",15]],[[],["u8",15]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i8",15]],[[],[["wrapping",3],["i8",15]]],[[],["i16",15]],[[],[["i16",15],["wrapping",3]]],[[],["i32",15]],[[],[["i32",15],["wrapping",3]]],[[],["i64",15]],[[],[["i64",15],["wrapping",3]]],[[],["i128",15]],[[],[["wrapping",3],["i128",15]]],[[],["isize",15]],[[],[["isize",15],["wrapping",3]]],[[],["u8",15]],[[],[["wrapping",3],["u8",15]]],[[],["u16",15]],[[],[["wrapping",3],["u16",15]]],[[],["u32",15]],[[],[["wrapping",3],["u32",15]]],[[],["u64",15]],[[],[["u64",15],["wrapping",3]]],[[],["u128",15]],[[],[["wrapping",3],["u128",15]]],[[],["usize",15]],[[],[["usize",15],["wrapping",3]]],[[],["i8",15]],[[],[["wrapping",3],["i8",15]]],[[],["i16",15]],[[],[["i16",15],["wrapping",3]]],[[],["i32",15]],[[],[["i32",15],["wrapping",3]]],[[],["i64",15]],[[],[["i64",15],["wrapping",3]]],[[],["i128",15]],[[],[["wrapping",3],["i128",15]]],[[],["isize",15]],[[],[["isize",15],["wrapping",3]]],[[],["u8",15]],[[],[["wrapping",3],["u8",15]]],[[],["u16",15]],[[],[["wrapping",3],["u16",15]]],[[],["u32",15]],[[],[["wrapping",3],["u32",15]]],[[],["u64",15]],[[],[["u64",15],["wrapping",3]]],[[],["u128",15]],[[],[["wrapping",3],["u128",15]]],[[],["usize",15]],[[],[["usize",15],["wrapping",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["fmtresult",6]],[[["formatter",3]],["fmtresult",6]],[[["round",3]],["bool",15]],[[["round",3]],["bool",15]],[[["round",3]],[["ordering",4],["option",4]]],[[],["round",3]],[[],["round",3]]],"p":[[8,"Cast"],[8,"CheckedCast"],[8,"SaturatingCast"],[8,"WrappingCast"],[8,"OverflowingCast"],[8,"UnwrappedCast"],[8,"Az"],[8,"CheckedAs"],[8,"SaturatingAs"],[8,"WrappingAs"],[8,"OverflowingAs"],[8,"UnwrappedAs"],[3,"Round"]]},\
"bitmap_font":{"doc":"<strong>This version is for embedded-graphics 0.7. The latest …","t":[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,11,11,11,11,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FONT_5x9","FONT_5x9_BOLD","FONT_6x12","FONT_6x12_BOLD","FONT_7x13","FONT_7x13_BOLD","FONT_7x14","FONT_7x14_BOLD","FONT_8x15","FONT_8x15_BOLD","FONT_8x16","FONT_8x16_BOLD","FONT_10x20","FONT_10x20_BOLD","FONT_10x18","FONT_10x18_BOLD","FONT_12x24","FONT_12x24_BOLD","FONT_14x26","FONT_14x26_BOLD","FONT_14x28","FONT_14x28_BOLD","FONT_16x30","FONT_16x30_BOLD","FONT_16x32","FONT_16x32_BOLD","FONT_20x40","FONT_20x40_BOLD","BitmapFont","width","height","draw_glyph","pixel_double","TextStyle","font","color","new","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","clone","clone","draw_string","draw_whitespace","measure_string","line_height"],"q":["bitmap_font","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Tamzen 5x9 Font.","Tamzen 5x9 Bold Font.","Tamzen 6x12 Font.","Tamzen 6x12 Bold Font.","Tamzen 7x13 Font.","Tamzen 7x13 Bold Font.","Tamzen 7x14 Font.","Tamzen 7x14 Bold Font.","Tamzen 8x15 Font.","Tamzen 8x15 Bold Font.","Tamzen 8x16 Font.","Tamzen 8x16 Bold Font.","Tamzen 10x20 Font.","Tamzen 10x20 Bold Font.","Pixel-double version of [<code>FONT_5x9</code>].","Pixel-double version of [<code>FONT_5x9_BOLD</code>].","Pixel-double version of [<code>FONT_6x12</code>].","Pixel-double version of [<code>FONT_6x12_BOLD</code>].","Pixel-double version of [<code>FONT_7x13</code>].","Pixel-double version of [<code>FONT_7x13_BOLD</code>].","Pixel-double version of [<code>FONT_7x14</code>].","Pixel-double version of [<code>FONT_7x14_BOLD</code>].","Pixel-double version of [<code>FONT_8x15</code>].","Pixel-double version of [<code>FONT_8x15_BOLD</code>].","Pixel-double version of [<code>FONT_8x16</code>].","Pixel-double version of [<code>FONT_8x16_BOLD</code>].","Pixel-double version of [<code>FONT_10x20</code>].","Pixel-double version of [<code>FONT_10x20_BOLD</code>].","Stores the font bitmap and some additional info for each …","Return the width of each character.","Return the height of each character.","Draw a glyph to the <code>target</code> with <code>color</code> at position <code>pos</code>.","Returns a pixel-double version of this font.","The equivalent of [<code>MonoTextStyle</code>][…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["u32",15]],[[["u32",15],["binarycolor",4],["point",3]],["result",4]],[[]],null,null,null,[[["binarycolor",4],["bitmapfont",3]]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["bitmapfont",3]],[[],["textstyle",3]],[[["baseline",4],["point",3],["str",15]],[["result",4],["point",3]]],[[["u32",15],["baseline",4],["point",3]],[["result",4],["point",3]]],[[["baseline",4],["point",3],["str",15]],["textmetrics",3]],[[],["u32",15]]],"p":[[3,"BitmapFont"],[3,"TextStyle"]]},\
"byteorder":{"doc":"This crate provides convenience methods for encoding and …","t":[8,10,11,10,11,10,10,10,10,10,11,10,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,10,10,4,6,4,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ByteOrder","read_u16","read_u24","read_u32","read_u48","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u24","write_u32","write_u48","write_u64","write_u128","write_uint","write_uint128","read_i16","read_i24","read_i32","read_i48","read_i64","read_i128","read_int","read_int128","read_f32","read_f64","write_i16","write_i24","write_i32","write_i48","write_i64","write_i128","write_int","write_int128","write_f32","write_f64","read_u16_into","read_u32_into","read_u64_into","read_u128_into","read_i16_into","read_i32_into","read_i64_into","read_i128_into","read_f32_into","read_f32_into_unchecked","read_f64_into","read_f64_into_unchecked","write_u16_into","write_u32_into","write_u64_into","write_u128_into","write_i8_into","write_i16_into","write_i32_into","write_i64_into","write_i128_into","write_f32_into","write_f64_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_i16","from_slice_i32","from_slice_i64","from_slice_i128","from_slice_f32","from_slice_f64","BigEndian","BE","LittleEndian","LE","NetworkEndian","NativeEndian","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","read_u16","read_u32","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","read_u16","read_u32","read_u64","read_u128","read_uint","read_uint128","write_u16","write_u32","write_u64","write_u128","write_uint","write_uint128","read_u16_into","read_u32_into","read_u64_into","read_u128_into","write_u16_into","write_u32_into","write_u64_into","write_u128_into","from_slice_u16","from_slice_u32","from_slice_u64","from_slice_u128","from_slice_f32","from_slice_f64","fmt","fmt","eq","eq","cmp","cmp","partial_cmp","partial_cmp","hash","hash","clone","clone","default","default"],"q":["byteorder","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["<code>ByteOrder</code> describes types that can serialize integers as …","Reads an unsigned 16 bit integer from <code>buf</code>.","Reads an unsigned 24 bit integer from <code>buf</code>, stored in u32.","Reads an unsigned 32 bit integer from <code>buf</code>.","Reads an unsigned 48 bit integer from <code>buf</code>, stored in u64.","Reads an unsigned 64 bit integer from <code>buf</code>.","Reads an unsigned 128 bit integer from <code>buf</code>.","Reads an unsigned n-bytes integer from <code>buf</code>.","Reads an unsigned n-bytes integer from <code>buf</code>.","Writes an unsigned 16 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 24 bit integer <code>n</code> to <code>buf</code>, stored in u32.","Writes an unsigned 32 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 48 bit integer <code>n</code> to <code>buf</code>, stored in u64.","Writes an unsigned 64 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned 128 bit integer <code>n</code> to <code>buf</code>.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes an unsigned integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Reads a signed 16 bit integer from <code>buf</code>.","Reads a signed 24 bit integer from <code>buf</code>, stored in i32.","Reads a signed 32 bit integer from <code>buf</code>.","Reads a signed 48 bit integer from <code>buf</code>, stored in i64.","Reads a signed 64 bit integer from <code>buf</code>.","Reads a signed 128 bit integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a signed n-bytes integer from <code>buf</code>.","Reads a IEEE754 single-precision (4 bytes) floating point …","Reads a IEEE754 double-precision (8 bytes) floating point …","Writes a signed 16 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 24 bit integer <code>n</code> to <code>buf</code>, stored in i32.","Writes a signed 32 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 48 bit integer <code>n</code> to <code>buf</code>, stored in i64.","Writes a signed 64 bit integer <code>n</code> to <code>buf</code>.","Writes a signed 128 bit integer <code>n</code> to <code>buf</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a signed integer <code>n</code> to <code>buf</code> using only <code>nbytes</code>.","Writes a IEEE754 single-precision (4 bytes) floating …","Writes a IEEE754 double-precision (8 bytes) floating …","Reads unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Reads unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 16 bit integers from <code>src</code> to <code>dst</code>.","Reads signed 32 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 64 bit integers from <code>src</code> into <code>dst</code>.","Reads signed 128 bit integers from <code>src</code> into <code>dst</code>.","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Reads IEEE754 single-precision (4 bytes) floating point …","<strong>DEPRECATED</strong>.","Writes unsigned 16 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 32 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 64 bit integers from <code>src</code> into <code>dst</code>.","Writes unsigned 128 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 8 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 16 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 32 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 64 bit integers from <code>src</code> into <code>dst</code>.","Writes signed 128 bit integers from <code>src</code> into <code>dst</code>.","Writes IEEE754 single-precision (4 bytes) floating point …","Writes IEEE754 double-precision (8 bytes) floating point …","Converts the given slice of unsigned 16 bit integers to a …","Converts the given slice of unsigned 32 bit integers to a …","Converts the given slice of unsigned 64 bit integers to a …","Converts the given slice of unsigned 128 bit integers to …","Converts the given slice of signed 16 bit integers to a …","Converts the given slice of signed 32 bit integers to a …","Converts the given slice of signed 64 bit integers to a …","Converts the given slice of signed 128 bit integers to a …","Converts the given slice of IEEE754 single-precision (4 …","Converts the given slice of IEEE754 double-precision (8 …","Defines big-endian serialization.","A type alias for <code>BigEndian</code>.","Defines little-endian serialization.","A type alias for <code>LittleEndian</code>.","Defines network byte order serialization.","Defines system native-endian serialization.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,2,2,2,2,2,2,2,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3],"f":[null,[[],["u16",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u32",15]]],[[["u64",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[],["i16",15]],[[],["i32",15]],[[],["i32",15]],[[],["i64",15]],[[],["i64",15]],[[],["i128",15]],[[["usize",15]],["i64",15]],[[["usize",15]],["i128",15]],[[],["f32",15]],[[],["f64",15]],[[["i16",15]]],[[["i32",15]]],[[["i32",15]]],[[["i64",15]]],[[["i64",15]]],[[["i128",15]]],[[["i64",15],["usize",15]]],[[["usize",15],["i128",15]]],[[["f32",15]]],[[["f64",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u16",15]],[[],["u32",15]],[[],["u64",15]],[[],["u128",15]],[[["usize",15]],["u64",15]],[[["usize",15]],["u128",15]],[[["u16",15]]],[[["u32",15]]],[[["u64",15]]],[[["u128",15]]],[[["usize",15],["u64",15]]],[[["usize",15],["u128",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["bigendian",4]],["bool",15]],[[["littleendian",4]],["bool",15]],[[["bigendian",4]],["ordering",4]],[[["littleendian",4]],["ordering",4]],[[["bigendian",4]],[["ordering",4],["option",4]]],[[["littleendian",4]],[["ordering",4],["option",4]]],[[]],[[]],[[],["bigendian",4]],[[],["littleendian",4]],[[],["bigendian",4]],[[],["littleendian",4]]],"p":[[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]},\
"embedded_graphics":{"doc":"Embedded-graphics is a 2D graphics library that is …","t":[0,3,3,3,3,8,16,16,10,11,11,11,8,10,10,10,10,0,0,3,8,10,10,4,13,13,13,13,13,13,13,13,13,8,10,8,10,3,12,12,3,12,12,0,8,16,10,10,8,10,3,6,6,3,3,11,0,0,3,0,3,0,3,11,3,3,3,8,10,8,10,10,0,8,18,10,10,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,8,10,3,11,11,11,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,17,17,17,17,17,17,3,12,12,12,12,12,3,3,12,12,12,12,12,12,12,3,12,12,11,11,11,0,0,0,3,3,3,12,12,12,12,11,11,11,11,11,0,3,3,3,12,12,11,11,11,0,3,3,3,12,12,11,11,11,0,3,3,3,12,12,11,11,11,0,3,3,3,12,12,11,0,3,3,12,12,3,0,3,12,12,12,12,3,3,3,3,12,12,11,11,11,0,3,3,3,12,12,12,12,11,11,11,11,11,0,3,3,3,12,11,11,3,12,12,12,12,3,4,13,13,13,3,12,12,12,12,3,8,16,10,3,12,12,8,10,8,16,16,10,8,11,8,10,8,10,0,0,8,16,11,11,11,11,8,16,10,10,10,10,3,12,12,3,12,12,12,12,3,12,12,12,3,4,13,13,13,13,4,13,13,13,4,13,13,13,11,11,11,4,13,13,11,0,8,10,10,0,0,8,16,18,10,10,3,3,3,3,3,3,3,8,4,4,8,16,10,10,10,8,16,8,16,10,8,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,3,3,3,3,8,10,10,10,18,18,18,18,18,18,18,18,18,18,18,8,10,18,18,4,13,13,3,3,3,8,16,16,10,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["draw_target","Clipped","ColorConverted","Cropped","Translated","DrawTarget","Color","Error","draw_iter","fill_contiguous","fill_solid","clear","DrawTargetExt","translated","cropped","clipped","color_converted","examples","geometry","Angle","AngleUnit","deg","rad","AnchorPoint","TopLeft","TopCenter","TopRight","CenterLeft","Center","CenterRight","BottomLeft","BottomCenter","BottomRight","Dimensions","bounding_box","OriginDimensions","size","Point","x","y","Size","width","height","image","ImageDrawable","Color","draw","draw_sub_image","ImageDrawableExt","sub_image","ImageRaw","ImageRawBE","ImageRawLE","SubImage","Image","new","iterator","contiguous","IntoPixels","pixel","Translated","raw","RawDataSlice","new","BitsIterator","ByteIterator","BytesIterator","ContiguousIteratorExt","into_pixels","PixelIteratorExt","draw","translated","mock_display","ColorMapping","NONE_COLOR","char_to_color","color_to_char","MockDisplay","new","from_points","set_allow_out_of_bounds_drawing","set_allow_overdraw","get_pixel","set_pixel","set_pixels","affected_area","draw_pixel","swap_xy","map","diff","from_pattern","assert_eq","assert_eq_with_message","assert_pattern","assert_pattern_with_message","mono_font","mapping","GlyphMapping","index","StrGlyphMapping","new","ranges","chars","contains","Mapping","Ascii","Iso8859_1","Iso8859_2","Iso8859_3","Iso8859_4","Iso8859_5","Iso8859_7","Iso8859_9","Iso8859_10","Iso8859_13","Iso8859_14","Iso8859_15","Iso8859_16","JisX0201","iter","mime","glyph_mapping","ASCII","ISO_8859_1","ISO_8859_2","ISO_8859_3","ISO_8859_4","ISO_8859_5","ISO_8859_7","ISO_8859_9","ISO_8859_10","ISO_8859_13","ISO_8859_14","ISO_8859_15","ISO_8859_16","JIS_X0201","ascii","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_1","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_10","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_13","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_14","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_15","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_16","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_2","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_3","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_4","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_5","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_7","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","iso_8859_9","FONT_4X6","FONT_5X7","FONT_5X8","FONT_6X9","FONT_6X10","FONT_6X12","FONT_6X13","FONT_6X13_BOLD","FONT_6X13_ITALIC","FONT_7X13","FONT_7X13_BOLD","FONT_7X13_ITALIC","FONT_7X14","FONT_7X14_BOLD","FONT_8X13","FONT_8X13_BOLD","FONT_8X13_ITALIC","FONT_9X15","FONT_9X15_BOLD","FONT_9X18","FONT_9X18_BOLD","FONT_10X20","jis_x0201","FONT_6X13","FONT_7X14","FONT_8X13","FONT_9X15","FONT_9X18","FONT_10X20","MonoTextStyle","text_color","background_color","underline_color","strikethrough_color","font","MonoTextStyleBuilder","MonoFont","image","character_size","character_spacing","baseline","strikethrough","underline","glyph_mapping","DecorationDimensions","offset","height","new","default_strikethrough","default_underline","prelude","primitives","arc","Points","StyledPixelsIterator","Arc","top_left","diameter","angle_start","angle_sweep","new","with_center","from_circle","to_circle","center","circle","Points","StyledPixelsIterator","Circle","top_left","diameter","new","with_center","center","ellipse","Points","StyledPixelsIterator","Ellipse","top_left","size","new","with_center","center","line","Points","StyledPixelsIterator","Line","start","end","new","midpoint","delta","polyline","Points","StyledPixelsIterator","Polyline","translate","vertices","new","rectangle","Points","Rectangle","top_left","size","StyledPixelsIterator","rounded_rectangle","CornerRadii","top_left","top_right","bottom_right","bottom_left","CornerRadiiBuilder","Points","StyledPixelsIterator","RoundedRectangle","rectangle","corners","new","with_equal_corners","confine_radii","sector","Points","StyledPixelsIterator","Sector","top_left","diameter","angle_start","angle_sweep","new","with_center","from_circle","to_circle","center","triangle","Points","StyledPixelsIterator","Triangle","vertices","new","from_slice","PrimitiveStyle","fill_color","stroke_color","stroke_width","stroke_alignment","PrimitiveStyleBuilder","StrokeAlignment","Inside","Center","Outside","CornerRadii","top_left","top_right","bottom_right","bottom_left","CornerRadiiBuilder","PointsIter","Iter","points","Styled","primitive","style","StyledDimensions","styled_bounding_box","StyledDrawable","Color","Output","draw_styled","Primitive","into_styled","ContainsPoint","contains","OffsetOutline","offset","text","renderer","CharacterStyle","Color","set_text_color","set_background_color","set_underline_color","set_strikethrough_color","TextRenderer","Color","draw_string","draw_whitespace","measure_string","line_height","TextMetrics","bounding_box","next_position","Text","text","position","character_style","text_style","TextStyle","alignment","baseline","line_height","TextStyleBuilder","Baseline","Top","Bottom","Middle","Alphabetic","Alignment","Left","Center","Right","DecorationColor","None","TextColor","Custom","is_none","is_text_color","is_custom","LineHeight","Pixels","Percent","to_absolute","transform","Transform","translate","translate_mut","pixelcolor","raw","RawData","Storage","BITS_PER_PIXEL","into_inner","from_u32","RawU1","RawU2","RawU4","RawU8","RawU16","RawU24","RawU32","ByteOrder","LittleEndian","BigEndian","ToBytes","Bytes","to_be_bytes","to_le_bytes","to_ne_bytes","PixelColor","Raw","IntoStorage","Storage","into_storage","WebColors","CSS_ALICE_BLUE","CSS_ANTIQUE_WHITE","CSS_AQUA","CSS_AQUAMARINE","CSS_AZURE","CSS_BEIGE","CSS_BISQUE","CSS_BLACK","CSS_BLANCHED_ALMOND","CSS_BLUE","CSS_BLUE_VIOLET","CSS_BROWN","CSS_BURLY_WOOD","CSS_CADET_BLUE","CSS_CHARTREUSE","CSS_CHOCOLATE","CSS_CORAL","CSS_CORNFLOWER_BLUE","CSS_CORNSILK","CSS_CRIMSON","CSS_CYAN","CSS_DARK_BLUE","CSS_DARK_CYAN","CSS_DARK_GOLDENROD","CSS_DARK_GRAY","CSS_DARK_GREEN","CSS_DARK_KHAKI","CSS_DARK_MAGENTA","CSS_DARK_OLIVE_GREEN","CSS_DARK_ORANGE","CSS_DARK_ORCHID","CSS_DARK_RED","CSS_DARK_SALMON","CSS_DARK_SEA_GREEN","CSS_DARK_SLATE_BLUE","CSS_DARK_SLATE_GRAY","CSS_DARK_TURQUOISE","CSS_DARK_VIOLET","CSS_DEEP_PINK","CSS_DEEP_SKY_BLUE","CSS_DIM_GRAY","CSS_DODGER_BLUE","CSS_FIRE_BRICK","CSS_FLORAL_WHITE","CSS_FOREST_GREEN","CSS_FUCHSIA","CSS_GAINSBORO","CSS_GHOST_WHITE","CSS_GOLD","CSS_GOLDENROD","CSS_GRAY","CSS_GREEN","CSS_GREEN_YELLOW","CSS_HONEYDEW","CSS_HOT_PINK","CSS_INDIAN_RED","CSS_INDIGO","CSS_IVORY","CSS_KHAKI","CSS_LAVENDER","CSS_LAVENDER_BLUSH","CSS_LAWN_GREEN","CSS_LEMON_CHIFFON","CSS_LIGHT_BLUE","CSS_LIGHT_CORAL","CSS_LIGHT_CYAN","CSS_LIGHT_GOLDENROD_YELLOW","CSS_LIGHT_GRAY","CSS_LIGHT_GREEN","CSS_LIGHT_PINK","CSS_LIGHT_SALMON","CSS_LIGHT_SEA_GREEN","CSS_LIGHT_SKY_BLUE","CSS_LIGHT_SLATE_GRAY","CSS_LIGHT_STEEL_BLUE","CSS_LIGHT_YELLOW","CSS_LIME","CSS_LIME_GREEN","CSS_LINEN","CSS_MAGENTA","CSS_MAROON","CSS_MEDIUM_AQUAMARINE","CSS_MEDIUM_BLUE","CSS_MEDIUM_ORCHID","CSS_MEDIUM_PURPLE","CSS_MEDIUM_SEA_GREEN","CSS_MEDIUM_SLATE_BLUE","CSS_MEDIUM_SPRING_GREEN","CSS_MEDIUM_TURQUOISE","CSS_MEDIUM_VIOLET_RED","CSS_MIDNIGHT_BLUE","CSS_MINT_CREAM","CSS_MISTY_ROSE","CSS_MOCCASIN","CSS_NAVAJO_WHITE","CSS_NAVY","CSS_OLD_LACE","CSS_OLIVE","CSS_OLIVE_DRAB","CSS_ORANGE","CSS_ORANGE_RED","CSS_ORCHID","CSS_PALE_GOLDENROD","CSS_PALE_GREEN","CSS_PALE_TURQUOISE","CSS_PALE_VIOLET_RED","CSS_PAPAYA_WHIP","CSS_PEACH_PUFF","CSS_PERU","CSS_PINK","CSS_PLUM","CSS_POWDER_BLUE","CSS_PURPLE","CSS_REBECCAPURPLE","CSS_RED","CSS_ROSY_BROWN","CSS_ROYAL_BLUE","CSS_SADDLE_BROWN","CSS_SALMON","CSS_SANDY_BROWN","CSS_SEA_GREEN","CSS_SEASHELL","CSS_SIENNA","CSS_SILVER","CSS_SKY_BLUE","CSS_SLATE_BLUE","CSS_SLATE_GRAY","CSS_SNOW","CSS_SPRING_GREEN","CSS_STEEL_BLUE","CSS_TAN","CSS_TEAL","CSS_THISTLE","CSS_TOMATO","CSS_TURQUOISE","CSS_VIOLET","CSS_WHEAT","CSS_WHITE","CSS_WHITE_SMOKE","CSS_YELLOW","CSS_YELLOW_GREEN","Bgr555","Bgr565","Bgr888","Rgb555","Rgb565","Rgb888","RgbColor","r","g","b","MAX_R","MAX_G","MAX_B","BLACK","RED","GREEN","BLUE","YELLOW","MAGENTA","CYAN","WHITE","GrayColor","luma","BLACK","WHITE","BinaryColor","Off","On","Gray2","Gray4","Gray8","Drawable","Color","Output","draw","Pixel","0","1","translated","cropped","clipped","color_converted","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","translated","cropped","clipped","color_converted","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","translated","cropped","clipped","color_converted","borrow","borrow_mut","try_from","from","into","try_into","type_id","bounding_box","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","translated","cropped","clipped","color_converted","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","bounding_box","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","bounding_box","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","translated","cropped","clipped","color_converted","borrow","borrow_mut","try_from","from","into","try_into","type_id","bounding_box","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","draw","translated","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","to_le_bytes","to_be_bytes","to_ne_bytes","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","saturating_as","az","checked_as","wrapping_as","overflowing_as","unwrapped_as","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","fmt","fmt","draw","points","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","r","g","b","r","g","b","r","g","b","r","g","b","r","g","b","r","g","b","next","index","index","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","div","div","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","add","add","add","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","mul_assign","mul_assign","neg","try_from","try_from","try_from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","add_assign","add_assign","add_assign","luma","luma","luma","mul","mul","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","bounding_box","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","sub","sub","sub","div_assign","div_assign","sub_assign","sub_assign","sub_assign","char_to_color","color_to_char","char_to_color","color_to_char","char_to_color","color_to_char","char_to_color","color_to_char","char_to_color","color_to_char","char_to_color","color_to_char","char_to_color","color_to_char","char_to_color","color_to_char","char_to_color","color_to_char","char_to_color","color_to_char","index","draw_styled","draw_styled","draw_styled","draw_styled","draw_styled","draw_styled","draw_styled","draw_styled","draw_styled","styled_bounding_box","styled_bounding_box","styled_bounding_box","styled_bounding_box","styled_bounding_box","styled_bounding_box","styled_bounding_box","styled_bounding_box","styled_bounding_box","contains","contains","contains","contains","contains","contains","offset","offset","offset","offset","offset","set_text_color","set_background_color","set_underline_color","set_strikethrough_color","draw_string","draw_whitespace","measure_string","line_height","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","translate","translate_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","add","neg","add_assign","sub_assign","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","next","next","next","nth","size_hint","next","nth","size_hint","next","nth","size_hint","next","nth","size_hint","next","nth","size_hint","next","nth","size_hint","next","nth","size_hint","next","nth","size_hint","next","nth","size_hint","next","nth","size_hint","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","next","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","draw_iter","fill_contiguous","fill_solid","draw_iter","fill_contiguous","fill_solid","clear","draw_iter","fill_contiguous","fill_solid","draw_iter","fill_contiguous","fill_solid","clear","draw_iter","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","bounding_box","points","points","points","points","points","points","points","points","draw","draw","draw","size","size","size","size","draw","draw_sub_image","draw","draw_sub_image","from_degrees","from_radians","zero","abs","normalize","to_degrees","to_radians","new","new_equal","zero","x_axis","y_axis","abs","component_min","component_max","component_mul","component_div","new","new_equal","zero","x_axis","y_axis","saturating_add","saturating_sub","component_min","component_max","component_mul","component_div","new","new_binary","NONE_COLOR","new","is_transparent","new","font","underline","strikethrough","reset_text_color","reset_background_color","reset_underline","reset_strikethrough","text_color","background_color","underline_with_color","strikethrough_with_color","build","new","with_stroke","with_fill","is_transparent","new","fill_color","reset_fill_color","stroke_color","reset_stroke_color","stroke_width","stroke_alignment","build","empty","new","with_corners","with_center","zero","center","bottom_right","contains","intersection","resized","offset","anchor_point","rows","columns","is_zero_sized","new","new","all","top","right","bottom","left","top_left","top_right","bottom_right","bottom_left","build","new","fill_area","stroke_area","pixels","set_text_color","set_background_color","set_underline_color","set_strikethrough_color","new","with_text_style","with_baseline","with_alignment","with_baseline","with_alignment","new","alignment","baseline","line_height","build","new","new","new","new","new","new","new","new","new","new","new","new","new","invert","is_on","is_off","new","new","new"],"q":["embedded_graphics","embedded_graphics::draw_target","","","","","","","","","","","","","","","","embedded_graphics","","embedded_graphics::geometry","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics","embedded_graphics::image","","","","","","","","","","","","embedded_graphics","embedded_graphics::iterator","embedded_graphics::iterator::contiguous","embedded_graphics::iterator","embedded_graphics::iterator::pixel","embedded_graphics::iterator","embedded_graphics::iterator::raw","","","","","embedded_graphics::iterator","","","","","embedded_graphics","embedded_graphics::mock_display","","","","","","","","","","","","","","","","","","","","","","embedded_graphics","embedded_graphics::mono_font","embedded_graphics::mono_font::mapping","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::ascii","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_1","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_10","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_13","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_14","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_15","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_16","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_2","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_3","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_4","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_5","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_7","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::iso_8859_9","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::mono_font::jis_x0201","","","","","","embedded_graphics::mono_font","","","","","","","","","","","","","","","","","","","","","embedded_graphics","","embedded_graphics::primitives","embedded_graphics::primitives::arc","","","","","","","","","","","","embedded_graphics::primitives","embedded_graphics::primitives::circle","","","","","","","","embedded_graphics::primitives","embedded_graphics::primitives::ellipse","","","","","","","","embedded_graphics::primitives","embedded_graphics::primitives::line","","","","","","","","embedded_graphics::primitives","embedded_graphics::primitives::polyline","","","","","","embedded_graphics::primitives","embedded_graphics::primitives::rectangle","","","","","embedded_graphics::primitives","embedded_graphics::primitives::rounded_rectangle","","","","","","","","","","","","","","embedded_graphics::primitives","embedded_graphics::primitives::sector","","","","","","","","","","","","embedded_graphics::primitives","embedded_graphics::primitives::triangle","","","","","","embedded_graphics::primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics","embedded_graphics::text","embedded_graphics::text::renderer","","","","","","","","","","","","","","","embedded_graphics::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics","embedded_graphics::transform","","","embedded_graphics","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","embedded_graphics::pixelcolorembedded_graphics","","","","","","","embedded_graphics::draw_target","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::image","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::iterator::contiguous","","","","","","","","","","","","","","","","embedded_graphics::iterator::pixel","","","","","","","","","","","","","","","","embedded_graphics::iterator::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mock_display","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::mapping","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::arc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::circle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::ellipse","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::line","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::polyline","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::rounded_rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::sector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives","","","","","","","","","","","","","embedded_graphics::primitives::triangle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::text::renderer","","","","","","","","","","","","","embedded_graphics::text","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics","","","","","","","","","","","","","embedded_graphics::pixelcolor::raw","","","","","","","","","","","","","","embedded_graphics::geometry","","embedded_graphics","embedded_graphics::primitives::rectangle","embedded_graphics::pixelcolor::raw","","embedded_graphics::primitives::rectangle","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","embedded_graphics::geometry","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","embedded_graphics::geometry","embedded_graphics::primitives::rectangle","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics","embedded_graphics::geometry","embedded_graphics::pixelcolor","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::rectangle","embedded_graphics::geometry","","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","","","","embedded_graphics","","embedded_graphics::geometry","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","","embedded_graphics::geometry","","embedded_graphics::pixelcolor","","","","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","","","","","","","embedded_graphics::pixelcolor::raw","","embedded_graphics::geometry","","embedded_graphics::pixelcolor::raw","embedded_graphics::primitives::rectangle","","","","embedded_graphics::geometry","","","","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::geometry","embedded_graphics","embedded_graphics::pixelcolor::raw","embedded_graphics::primitives::rectangle","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","embedded_graphics::geometry","","","embedded_graphics::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","","embedded_graphics::pixelcolor","embedded_graphics::primitives::rectangle","embedded_graphics","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::geometry","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","","embedded_graphics::geometry","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::geometry","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","embedded_graphics::pixelcolor::raw","embedded_graphics::primitives::rectangle","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","","","embedded_graphics","embedded_graphics::geometry","embedded_graphics::pixelcolor","embedded_graphics::primitives::rectangle","embedded_graphics::pixelcolor::raw","embedded_graphics::geometry","","","","","","","embedded_graphics::pixelcolor","","","","","","","","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","embedded_graphics::geometry","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","","","","","","","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","","","","embedded_graphics::geometry","","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","","","","","","","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::geometry","embedded_graphics::pixelcolor","","","","","","","","","","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","","","","","","","","embedded_graphics::geometry","embedded_graphics::pixelcolor","","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::geometry","embedded_graphics::pixelcolor","","","","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","","","embedded_graphics::geometry","","","embedded_graphics::pixelcolor","","","embedded_graphics::geometry","","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","","","embedded_graphics::geometry","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","embedded_graphics","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::geometry","embedded_graphics::primitives::rectangle","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::geometry","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::primitives::rectangle","","embedded_graphics::pixelcolor","embedded_graphics::geometry","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","embedded_graphics::primitives::rectangle","embedded_graphics","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","embedded_graphics::pixelcolor","embedded_graphics::pixelcolor::raw","","","","embedded_graphics::pixelcolor","embedded_graphics::geometry","embedded_graphics::pixelcolor","embedded_graphics::geometry","embedded_graphics::pixelcolor","","embedded_graphics::pixelcolor::raw","","embedded_graphics::pixelcolor","embedded_graphics::geometry","","","","","","","","embedded_graphics::pixelcolor","","","","","","","","","","","","","","","","","","","","embedded_graphics::mono_font::mapping","embedded_graphics::primitives::arc","embedded_graphics::primitives::circle","embedded_graphics::primitives::ellipse","embedded_graphics::primitives::line","embedded_graphics::primitives::polyline","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::rounded_rectangle","embedded_graphics::primitives::sector","embedded_graphics::primitives::triangle","embedded_graphics::primitives::arc","embedded_graphics::primitives::circle","embedded_graphics::primitives::ellipse","embedded_graphics::primitives::line","embedded_graphics::primitives::polyline","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::rounded_rectangle","embedded_graphics::primitives::sector","embedded_graphics::primitives::triangle","embedded_graphics::primitives::circle","embedded_graphics::primitives::ellipse","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::rounded_rectangle","embedded_graphics::primitives::sector","embedded_graphics::primitives::triangle","embedded_graphics::primitives::circle","embedded_graphics::primitives::ellipse","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::rounded_rectangle","embedded_graphics::primitives::sector","embedded_graphics::mono_font","","","","","","","","embedded_graphics::image","","embedded_graphics::primitives::arc","","embedded_graphics::primitives::circle","","embedded_graphics::primitives::ellipse","","embedded_graphics::primitives::line","","embedded_graphics::primitives::polyline","","embedded_graphics::primitives::rectangle","","embedded_graphics::primitives::rounded_rectangle","","embedded_graphics::primitives::sector","","embedded_graphics::primitives","","embedded_graphics::primitives::triangle","","embedded_graphics::text","","embedded_graphics::draw_target","","","","embedded_graphics::geometry","embedded_graphics::image","","","embedded_graphics::iterator::contiguous","embedded_graphics::iterator::pixel","embedded_graphics::iterator::raw","","","","embedded_graphics::mock_display","embedded_graphics::mono_font::mapping","","embedded_graphics::mono_font","","","","embedded_graphics::primitives::arc","","","embedded_graphics::primitives::circle","","","embedded_graphics::primitives::ellipse","","","embedded_graphics::primitives::line","","","embedded_graphics::primitives::polyline","","","embedded_graphics::primitives","","","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::rounded_rectangle","","","","","embedded_graphics::primitives::sector","","","embedded_graphics::primitives","embedded_graphics::primitives::triangle","","","embedded_graphics::text::renderer","embedded_graphics::text","","","","","","","embedded_graphics::geometry","","","embedded_graphics::image","","embedded_graphics::iterator::pixel","","embedded_graphics::iterator::raw","","embedded_graphics::mock_display","embedded_graphics::mono_font::mapping","","","embedded_graphics::mono_font","","","","","embedded_graphics::primitives::arc","","","","","","embedded_graphics::primitives::circle","","","","","","embedded_graphics::primitives::ellipse","","","","","","embedded_graphics::primitives::line","","","","embedded_graphics::primitives::polyline","","","","embedded_graphics::primitives","","","","","embedded_graphics::primitives::rectangle","","embedded_graphics::primitives::rounded_rectangle","","","","","","","","","","embedded_graphics::primitives::sector","","","","","","embedded_graphics::primitives","","embedded_graphics::primitives::triangle","","","","","","embedded_graphics::text::renderer","","embedded_graphics::text","","","","","","","","","","","","embedded_graphics::image","embedded_graphics::iterator::raw","embedded_graphics::mono_font::mapping","","embedded_graphics::mono_font","embedded_graphics::primitives::circle","embedded_graphics::primitives::ellipse","embedded_graphics::primitives::line","","embedded_graphics::primitives::polyline","","embedded_graphics::primitives","","","embedded_graphics::primitives::rounded_rectangle","","","embedded_graphics::primitives","embedded_graphics::primitives::triangle","embedded_graphics::text::renderer","embedded_graphics::text","","","","","","embedded_graphics::geometry","embedded_graphics::image","embedded_graphics::iterator::raw","embedded_graphics::mono_font::mapping","","embedded_graphics::mono_font","embedded_graphics::primitives::arc","embedded_graphics::primitives::circle","embedded_graphics::primitives::ellipse","embedded_graphics::primitives::line","","embedded_graphics::primitives::polyline","","embedded_graphics::primitives","","","embedded_graphics::primitives::rounded_rectangle","","","embedded_graphics::primitives::sector","embedded_graphics::primitives","embedded_graphics::primitives::triangle","embedded_graphics::text::renderer","embedded_graphics::text","","","","","","","embedded_graphics::geometry","","","","embedded_graphics::image","embedded_graphics::iterator::raw","embedded_graphics::mono_font::mapping","","embedded_graphics::mono_font","embedded_graphics::primitives::circle","","","embedded_graphics::primitives::ellipse","","","embedded_graphics::primitives::line","","embedded_graphics::primitives::polyline","","embedded_graphics::primitives","","","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::rounded_rectangle","","","","","embedded_graphics::primitives","embedded_graphics::primitives::triangle","","","embedded_graphics::text::renderer","embedded_graphics::text","","","","","","embedded_graphics::iterator::contiguous","embedded_graphics::iterator::pixel","embedded_graphics::iterator::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::primitives::arc","","embedded_graphics::primitives::circle","","embedded_graphics::primitives::ellipse","","embedded_graphics::primitives::line","","embedded_graphics::primitives::polyline","","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::rounded_rectangle","","embedded_graphics::primitives::sector","","embedded_graphics::primitives::triangle","","embedded_graphics::iterator::raw","","","","","","","","","","embedded_graphics::mono_font","embedded_graphics::primitives","embedded_graphics::primitives::rounded_rectangle","embedded_graphics::text","embedded_graphics::geometry","embedded_graphics::image","","embedded_graphics::iterator::raw","embedded_graphics::mock_display","embedded_graphics::mono_font::mapping","","embedded_graphics::mono_font","","","","embedded_graphics::primitives::arc","","","embedded_graphics::primitives::circle","","","embedded_graphics::primitives::ellipse","","","embedded_graphics::primitives::line","","","embedded_graphics::primitives::polyline","","","embedded_graphics::primitives","","","embedded_graphics::primitives::rectangle","embedded_graphics::primitives::rounded_rectangle","","","","","embedded_graphics::primitives::sector","","","embedded_graphics::primitives","embedded_graphics::primitives::triangle","","","embedded_graphics::text::renderer","embedded_graphics::text","","","","","","","embedded_graphics::mock_display","embedded_graphics::mono_font","embedded_graphics::primitives::circle","embedded_graphics::primitives::ellipse","embedded_graphics::primitives::line","embedded_graphics::primitives::polyline","embedded_graphics::primitives","","","embedded_graphics::primitives::rounded_rectangle","","embedded_graphics::primitives","embedded_graphics::primitives::triangle","embedded_graphics::text","","embedded_graphics::draw_target","","","","","","","","","","","","","","embedded_graphics::mock_display","embedded_graphics::draw_target","","","embedded_graphics::image","embedded_graphics::primitives::arc","embedded_graphics::primitives::circle","embedded_graphics::primitives::ellipse","embedded_graphics::primitives::line","embedded_graphics::primitives::polyline","embedded_graphics::primitives::rounded_rectangle","embedded_graphics::primitives::sector","embedded_graphics::primitives","embedded_graphics::primitives::triangle","embedded_graphics::text","embedded_graphics::primitives::arc","embedded_graphics::primitives::circle","embedded_graphics::primitives::ellipse","embedded_graphics::primitives::line","embedded_graphics::primitives::polyline","embedded_graphics::primitives::rounded_rectangle","embedded_graphics::primitives::sector","embedded_graphics::primitives::triangle","embedded_graphics::image","embedded_graphics::primitives","embedded_graphics::text","embedded_graphics::draw_target","embedded_graphics::image","","embedded_graphics::mock_display","embedded_graphics::image","","","","embedded_graphics::geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics::image","","embedded_graphics::mock_display","embedded_graphics::mono_font","","","","","","","","","","","","","","","embedded_graphics::primitives","","","","","","","","","","","","embedded_graphics::primitives::rectangle","","","","","","","","","","","","","","","embedded_graphics::primitives::rounded_rectangle","","","","","","","","","","","","embedded_graphics::primitives","","","","embedded_graphics::text::renderer","","","","embedded_graphics::text","","","","","","","","","","","embedded_graphics::pixelcolor::raw","","","","","","","embedded_graphics::pixelcolor","","","","","","","","","","",""],"d":["A target for embedded-graphics drawing operations.","Clipped draw target.","Color conversion draw target.","Cropped draw target.","Translated draw target.","A target for embedded-graphics drawing operations.","The pixel color type the targetted display supports.","Error type to return when a drawing operation fails.","Draw individual pixels to the display without a defined …","Fill a given area with an iterator providing a contiguous …","Fill a given area with a solid color.","Fill the entire display with a solid color.","Extension trait for <code>DrawTarget</code>s.","Creates a translated draw target based on this draw …","Creates a cropped draw target based on this draw target.","Creates a clipped draw target based on this draw target.","Creates a color conversion draw target.","Drawing examples","Geometry module.","Angle.","AngleUnit trait.","Convert a number (interpreted as degrees) to an <code>Angle</code>.","Convert a number (interpreted as radians) to an <code>Angle</code>.","Anchor point.","Top left.","Top center.","Top right.","Center left.","Center.","Center right.","Bottom left.","Bottom center.","Bottom right.","Adds the ability to get the bounding box of an item.","Returns the bounding box.","Dimensions with <code>top_left</code> of the bounding box at <code>(0, 0)</code>.","Returns the size of the bounding box.","2D point.","The x coordinate.","The y coordinate.","2D size.","The width.","The height.","Image support for embedded-graphics","Image drawable.","The color type.","Draws the entire image to the target.","Draws a part of the image to the target.","Extension trait for image drawables.","Returns a sub image of this image drawable.","An image constructed from a slice of raw pixel data.","Image with big endian data.","Image with little endian data.","Sub image.","Image object.","Creates a new <code>Image</code>.","Iterators.","Contiguous iterator.","Converts a contiguous iterator into a pixel iterator.","Pixel iterator.","Translated pixel iterator.","Raw data iterator.","Raw data slice.","Creates a new raw data slice.","Iterator for raw data slices with less than 8 BPP.","Iterator for raw data slices with 8 BPP.","Iterator for raw data slices more than 8 BPP.","Extension trait for contiguous iterators.","Converts a contiguous iterator into a pixel iterator.","Extension trait for pixel iterators.","Draws the pixel iterator to a draw target.","Returns a translated version of the iterator.","Mock display for use in tests.","Mapping between <code>char</code>s and colors.","Color used to display <code>None</code> values when <code>EG_FANCY_PANIC</code> is …","Converts a char into a color of type <code>C</code>.","Converts a color of type <code>C</code> into a char.","Mock display struct","Creates a new empty mock display.","Create a mock display from an iterator of <code>Point</code>s.","Sets if out of bounds drawing is allowed.","Sets if overdrawing is allowed.","Returns the color of a pixel.","Changes the value of a pixel without bounds checking.","Sets the points in an iterator to the given color.","Returns the area that was affected by drawing operations.","Changes the color of a pixel.","Returns a copy of with the content mirrored by swapping x …","Maps a <code>MockDisplay<C>\' to a </code>MockDisplay` by applying a …","Compares the display to another display.","Creates a new mock display from a character pattern.","Checks if the displays are equal.","Checks if the displays are equal.","Checks if the display is equal to the given pattern.","Checks if the display is equal to the given pattern.","Monospaced bitmap fonts.","Glyph mapping.","Mapping from characters to glyph indices.","Maps a character to a glyph index.","Glyph mapping stored as a UTF-8 string.","Creates a new glyph mapping.","Returns an iterator over the character ranges.","Returns an iterator over the characters in this mapping.","Returns if the mapping contains the given char.","Mapping.","ASCII.","ISO/IEC 8859 Part 1: Latin-1, Western European.","ISO/IEC 8859 Part 2: Latin-2, Central European.","ISO/IEC 8859 Part 3: Latin-3, South European.","ISO/IEC 8859 Part 4: Latin-4, North European.","ISO/IEC 8859 Part 5: Latin/Cyrillic.","ISO/IEC 8859 Part 7: Latin/Greek.","ISO/IEC 8859 Part 9: Latin-5, Turkish.","ISO/IEC 8859 Part 10: Latin-6, Nordic.","ISO/IEC 8859 Part 13: Latin-7, Baltic Rim.","ISO/IEC 8859 Part 14: Latin-8, Celtic.","ISO/IEC 8859 Part 15: Latin-9 (revised Latin-1).","ISO/IEC 8859 Part 16: Latin-10: South-East European.","JIS X 0201: Japanese katakana (halfwidth).","Returns an iterator over all mappings.","Returns the MIME identifier for this mapping.","Returns a glyph mapping for this mapping.","ASCII.","ISO/IEC 8859 Part 1: Latin-1, Western European.","ISO/IEC 8859 Part 2: Latin-2, Central European.","ISO/IEC 8859 Part 3: Latin-3, South European.","ISO/IEC 8859 Part 4: Latin-4, North European.","ISO/IEC 8859 Part 5: Latin/Cyrillic.","ISO/IEC 8859 Part 7: Latin/Greek.","ISO/IEC 8859 Part 9: Latin-5, Turkish.","ISO/IEC 8859 Part 10: Latin-6, Nordic.","ISO/IEC 8859 Part 13: Latin-7, Baltic Rim.","ISO/IEC 8859 Part 14: Latin-8, Celtic.","ISO/IEC 8859 Part 15: Latin-9 (revised Latin-1).","ISO/IEC 8859 Part 16: Latin-10: South-East European.","JIS X 0201: Japanese katakana (halfwidth).","ASCII glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_1 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_10 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_13 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_14 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_15 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_16 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_2 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_3 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_4 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_5 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_7 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","ISO_8859_9 glyph subset.","4x6 pixel monospace font.","5x7 pixel monospace font.","5x8 pixel monospace font.","6x9 pixel monospace font.","6x10 pixel monospace font.","6x12 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","6x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x13 pixel monospace font.","7x14 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","JIS_X0201 glyph subset.","6x13 pixel monospace font.","7x14 pixel monospace font.","8x13 pixel monospace font.","9x15 pixel monospace font.","9x18 pixel monospace font.","10x20 pixel monospace font.","Style properties for text using a monospaced font.","Text color.","Background color.","Underline color.","Strikethrough color.","Font.","Text style builder for monospaced fonts.","Monospaced bitmap font.","Raw image data containing the font.","Size of a single character in pixel.","Spacing between characters.","The baseline.","Strikethrough decoration dimensions.","Underline decoration dimensions.","Glyph mapping.","Decoration dimensions.","Offset from the top of the character to the top of the …","Height of the decoration.","Creates new decoration dimensions.","Creates a new default strikethrough decoration for the …","Creates a new default underline decoration for the given …","Prelude","Graphics primitives","The arc primitive","Iterator over all points on the arc line.","Pixel iterator for each pixel in the arc border","Arc primitive","Top-left point of the bounding-box of the circle …","Diameter of the circle supporting the arc","Angle at which the arc starts","Angle defining the arc sweep starting at angle_start","Create a new arc delimited with a top-left point with a …","Create a new arc centered around a given point with a …","Creates an arc based on a circle.","Returns a circle with the same <code>top_left</code> and <code>diameter</code> as …","Return the center point of the arc.","The circle primitive","Iterator over all points inside the circle.","Pixel iterator for each pixel in the circle border","Circle primitive","Top-left point of circle’s bounding box","Diameter of the circle","Create a new circle delimited with a top-left point with …","Create a new circle centered around a given point with a …","Return the center point of the circle","The ellipse primitive","Iterator over all points inside the ellipse","Pixel iterator for each pixel in the ellipse border","Ellipse primitive","Top-left point of ellipse’s bounding box","Size of the ellipse","Create a new ellipse delimited with a top-left point with …","Create a new ellipse centered around a given point with a …","Return the center point of the ellipse","The line primitive","Iterator over all points on the line.","Styled line iterator.","Line primitive","Start point","End point","Create a new line","Compute the midpoint of the line.","Compute the delta (<code>end - start</code>) of the line.","The polyline primitive","An iterator over all pixel positions on the polyline","Pixel iterator for each pixel in the line","Polyline primitive","An offset to apply to the polyline as a whole","All vertices in the line","Create a new polyline from a list of vertices","The rectangle primitive. Also good for drawing squares.","Iterator over all points inside the rectangle.","Rectangle primitive","Top left point of the rectangle.","Size of the rectangle.","Pixel iterator for each pixel in the rect border","The rounded rectangle primitive.","The definition of each corner radius for a rounded …","Top left corner radius","Top right corner radius","Bottom right corner radius","Bottom left corner radius","<code>CornerRadii</code> builder.","Iterator over all points inside the rounded rectangle.","Pixel iterator for each pixel in the rect border","Rounded rectangle primitive.","The base rectangle","The radius of each corner","Creates a new rounded rectangle with the given corner …","Creates a new rounded rectangle with equal corner radius …","Return the rounded rectangle with confined corner radii.","The sector primitive","Iterator over all points inside the sector.","Pixel iterator for each pixel in the sector border","Sector primitive","Top-left point of the bounding-box of the circle …","Diameter of the circle supporting the sector","Angle at which the sector starts","Angle defining the sector sweep starting at angle_start","Create a new sector delimited with a top-left point with …","Create a new sector centered around a given point with a …","Creates an arc based on a circle.","Returns a circle with the same <code>top_left</code> and <code>diameter</code> as …","Return the center point of the sector","The triangle primitive.","Iterator over all points inside the triangle.","Pixel iterator for each pixel in the triangle border","Triangle primitive","The vertices of the triangle.","Create a new triangle with the given vertices.","Creates a new triangle from a <code>Point</code> slice.","Style properties for primitives.","Fill color of the primitive.","Stroke color of the primitive.","Stroke width in pixels.","Stroke alignment.","Primitive style builder.","Stroke alignment.","Inside.","Center.","Outside.","The definition of each corner radius for a rounded …","Top left corner radius","Top right corner radius","Bottom right corner radius","Bottom left corner radius","<code>CornerRadii</code> builder.","Create an iterator over all points in the primitive.","Iterator over all points inside the primitive.","Returns an iterator over all points inside the primitive.","Styled.","Primitive.","Style.","Styled dimensions.","Returns the bounding box using the given style.","Styled drawable.","Color type.","Output type.","Draws the primitive using the given style.","Primitive trait","Converts this primitive into a <code>Styled</code>.","Trait to check if a point is inside a closed shape.","Returns <code>true</code> if the given point is inside the shape.","Offset outline trait.","Offsets the outline of the shape.","Text drawing.","Text renderer.","Character style.","The color type.","Sets the text color.","Sets the background color.","Sets the underline color.","Sets the strikethrough color.","Text renderer.","Color type.","Draws a string.","Draws whitespace of the given width.","Returns the text metrics for a string.","Returns the default line height.","Text metrics.","Bounding box.","The position of the next text.","Text drawable.","The string.","The position.","The character style.","The text style.","Text style.","Horizontal text alignment.","Text baseline.","Line height.","Builder for text styles.","Text baseline.","Top.","Bottom.","Middle.","Alphabetic baseline.","Horizontal text alignment.","Left.","Center.","Right.","Text decoration color.","No text decoration.","Text decoration with the same color as the text.","Text decoration with a custom color.","Returns <code>true</code> if the decoration_color is <code>None</code>.","Returns <code>true</code> if the decoration_color is <code>TextColor</code>.","Returns <code>true</code> if the decoration_color is <code>Custom</code>.","Text line height.","Absolute line height in pixels.","Relative line height in percent of the default line …","Converts the line height to an absolute pixel distance.","Transformations for graphics objects","Transform operations","Move the origin of an object by a given number of (x, y) …","Move the origin of an object by a given number of (x, y) …","Pixel color types.","Raw color types.","Trait implemented by all <code>RawUx</code> types.","Storage type.","Bits per pixel.","Converts this raw data into the storage type.","Converts a <code>u32</code> into a <code>RawData</code> type.","1 bit per pixel raw data.","2 bits per pixel raw data.","4 bits per pixel raw data.","8 bits per pixel raw data.","16 bits per pixel raw data.","24 bits per pixel raw data.","32 bits per pixel raw data.","Raw data byte order.","Little endian byte order marker.","Big endian byte order marker.","Trait to convert colors into a byte array.","Return type of methods in this trait.","Converts a color into a byte array with big endian byte …","Converts a color into a byte array with little endian …","Converts a color into a byte array with native byte order.","Pixel color trait.","Raw data type.","Convert a <code>PixelColor</code> into its underlying storage type","The underlying storage type for the pixel color","Convert the <code>PixelColor</code> into its raw storage form","Named colors as defined in the CSS specification."," Alice Blue"," Antique White"," Aqua"," Aquamarine"," Azure"," Beige"," Bisque"," Black"," Blanched Almond"," Blue"," Blue Violet"," Brown"," Burly Wood"," Cadet Blue"," Chartreuse"," Chocolate"," Coral"," Cornflower Blue"," Cornsilk"," Crimson"," Cyan"," Dark Blue"," Dark Cyan"," Dark Goldenrod"," Dark Gray"," Dark Green"," Dark Khaki"," Dark Magenta"," Dark Olive Green"," Dark Orange"," Dark Orchid"," Dark Red"," Dark Salmon"," Dark Sea Green"," Dark Slate Blue"," Dark Slate Gray"," Dark Turquoise"," Dark Violet"," Deep Pink"," Deep Sky Blue"," Dim Gray"," Dodger Blue"," Fire Brick"," Floral White"," Forest Green"," Fuchsia"," Gainsboro"," Ghost White"," Gold"," Goldenrod"," Gray"," Green"," Green Yellow"," Honeydew"," Hot Pink"," Indian Red"," Indigo"," Ivory"," Khaki"," Lavender"," Lavender Blush"," Lawn Green"," Lemon Chiffon"," Light Blue"," Light Coral"," Light Cyan"," Light Goldenrod Yellow"," Light Gray"," Light Green"," Light Pink"," Light Salmon"," Light Sea Green"," Light Sky Blue"," Light Slate Gray"," Light Steel Blue"," Light Yellow"," Lime"," Lime Green"," Linen"," Magenta"," Maroon"," Medium Aquamarine"," Medium Blue"," Medium Orchid"," Medium Purple"," Medium Sea Green"," Medium Slate Blue"," Medium Spring Green"," Medium Turquoise"," Medium Violet Red"," Midnight Blue"," Mint Cream"," Misty Rose"," Moccasin"," Navajo White"," Navy"," Old Lace"," Olive"," Olive Drab"," Orange"," Orange Red"," Orchid"," Pale Goldenrod"," Pale Green"," Pale Turquoise"," Pale Violet Red"," Papaya Whip"," Peach Puff"," Peru"," Pink"," Plum"," Powder Blue"," Purple"," Rebeccapurple"," Red"," Rosy Brown"," Royal Blue"," Saddle Brown"," Salmon"," Sandy Brown"," Sea Green"," Seashell"," Sienna"," Silver"," Sky Blue"," Slate Blue"," Slate Gray"," Snow"," Spring Green"," Steel Blue"," Tan"," Teal"," Thistle"," Tomato"," Turquoise"," Violet"," Wheat"," White"," White Smoke"," Yellow"," Yellow Green","Bgr555 color.","Bgr565 color.","Bgr888 color.","Rgb555 color.","Rgb565 color.","Rgb888 color.","RGB color.","Returns the red channel value.","Returns the green channel value.","Returns the blue channel value.","The maximum value in the red channel.","The maximum value in the green channel.","The maximum value in the blue channel.","Black color (R: 0%, G: 0%, B: 0%)","Red color (R: 100%, G: 0%, B: 0%)","Green color (R: 0%, G: 100%, B: 0%)","Blue color (R: 0%, G: 0%, B: 100%)","Yellow color (R: 100%, G: 100%, B: 0%)","Magenta color (R: 100%, G: 0%, B: 100%)","Cyan color (R: 0%, G: 100%, B: 100%)","White color (R: 100%, G: 100%, B: 100%)","Grayscale color.","Returns the luma channel value.","Black color (0% luma).","White color (100% luma).","Binary color.","Inactive pixel.","Active pixel.","2 bit grayscale color.","4 bit grayscale color.","8 bit grayscale color.","Marks an object as “drawable”. Must be implemented …","The pixel color type.","The return type of the <code>draw</code> method.","Draw the graphics object using the supplied DrawTarget.","A single pixelffsets a point by adding a sizeffsets a point by adding a size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Offsets a point by subtracting a size.","","","","Offsets a point by subtracting a size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Translate the image by a given delta, returning a new …","Translate the image by a given delta, modifying the …","Translate the arc from its current position to a new …","Translate the arc from its current position to a new …","Translate the circle from its current position to a new …","Translate the circle from its current position to a new …","Translate the ellipse from its current position to a new …","Translate the ellipse from its current position to a new …","Translate the line from its current position to a new …","Translate the line from its current position to a new …","Translate the polyline from its current position to a new …","Translate the polyline from its current position to a new …","Translate the rect from its current position to a new …","Translate the rect from its current position to a new …","Translate the rounded rectangle from its current position …","Translate the rounded rectangle from its current position …","Translate the sector from its current position to a new …","Translate the sector from its current position to a new …","","","Translate the triangle from its current position to a new …","Translate the triangle from its current position to a new …reates an angle defined in degrees.","Creates an angle defined in radians.","Creates a zero degree angle.","Compute the absolute value of the angle.","Normalize the angle to less than one full rotation (ie. …","Return numerical value of the angle in degree","Return numerical value of the angle in radian","Creates a point from  X and Y coordinates.","Creates a point with X and Y values set to an equal value.","Creates a point with X and Y equal to zero.","Returns a point with equal <code>x</code> value and <code>y</code> set to <code>0</code>.","Returns a point with equal <code>y</code> value and <code>x</code> set to <code>0</code>.","Remove the sign from a coordinate","Returns the componentwise minimum of two <code>Point</code>s","Returns the componentwise maximum of two <code>Point</code>s","Returns the componentwise multiplication of two <code>Point</code>s.","Returns the componentwise division of two <code>Points</code>s.","Creates a size from a width and a height.","Creates a size with width and height set to an equal …","Creates a size with width and height equal to zero.","Returns a size with equal <code>width</code> value and <code>height</code> set to <code>0</code>.","Returns a size with equal <code>height</code> value and <code>width</code> set to <code>0</code>.","Saturating addition.","Saturating subtraction.","Returns the componentwise minimum of two <code>Size</code>s.","Returns the componentwise maximum of two <code>Size</code>s.","Returns the componentwise multiplication of two <code>Size</code>s.","Returns the componentwise division of two <code>Size</code>s.","Creates a new image.","Creates a new binary image.","Color used to display <code>None</code> values when <code>EG_FANCY_PANIC</code> is …","Creates a text style with transparent background.","Returns <code>true</code> if the style is transparent.","Creates a new text style builder.","Sets the font.","Enables underline using the text color.","Enables strikethrough using the text color.","Resets the text color to transparent.","Resets the background color to transparent.","Removes the underline decoration.","Removes the strikethrough decoration.","Sets the text color.","Sets the background color.","Enables underline with a custom color.","Enables strikethrough with a custom color.","Builds the text style.","Creates a primitive style without fill and stroke.","Creates a stroke primitive style.","Creates a fill primitive style.","Returns if a primitive drawn with this style is …","Creates a new primitive style builder.","Sets the fill color.","Resets the fill color to transparent.","Sets the stroke color.","Resets the stroke color to transparent.","Sets the stroke width.","Sets the stroke alignment.","Builds the primitive style.","Create a points iterator that returns no items.","Creates a new rectangle from the top left point and the …","Creates a new rectangle from two corners.","Creates a new rectangle from the center point and the …","Returns a zero sized rectangle.","Returns the center of this rectangle.","Returns the bottom right corner of this rectangle.","Return whether the rectangle contains a given point.","Returns a new <code>Rectangle</code> containing the intersection of …","Returns a resized copy of this rectangle.","Offset the rectangle by a given value.","Returns an anchor point.","Returns the range of Y coordinates in this rectangle.","Returns the range of X coordinates in this rectangle.","Returns <code>true</code> is the rectangle is zero sized.","Create a new set of corner radii with all corners having …","Create a new corner radii builder.","Set all corner radii to the same value.","Set the top left and top right corner radii to the same …","Set the top right and bottom right corner radii to the …","Set the bottom left and bottom right corner radii to the …","Set the top left and bottom left corner radii to the same …","Set the top left corner radius.","Set the top right corner radius.","Set the bottom right corner radius.","Set the bottom left corner radius.","Consume the builder and produce a [<code>CornerRadii</code>] …","Creates a styled.","Returns the fill area.","Returns the stroke area.","Returns an iterator over the pixels in this styled …","Sets the text color.","Sets the background color.","Sets the underline color.","Sets the strikethrough color.","Creates a text drawable with the default text style.","Creates a text drawable with the given text style.","Creates a text drawable with the given baseline.","Creates a text drawable with the given alignment.","Creates a new text style with the given baseline.","Creates a new text style with the given alignment.","Creates a new text style builder.","Sets the horizontal text alignment.","Sets the text baseline.","Sets the line height.","Builds the text style.","Creates a new color from the least significant","Creates a new color from the least significant","Creates a new color from the least significant","Creates a new color from the least significant","Creates a new color from the least significant","Creates a new color from the least significant","Creates a new color from the least significant","Creates a new Bgr555 color. Too large channel values will …","Creates a new Bgr565 color. Too large channel values will …","Creates a new Bgr888 color. Too large channel values will …","Creates a new Rgb555 color. Too large channel values will …","Creates a new Rgb565 color. Too large channel values will …","Creates a new Rgb888 color. Too large channel values will …","Inverts the color.","Returns <code>true</code> if this color is <code>On</code>.","Returns <code>true</code> if this color is <code>Off</code>.","Creates a new grayscale color.","Creates a new grayscale color.","Creates a new grayscale color."],"i":[0,0,0,0,0,0,1,1,1,1,1,1,0,2,2,2,2,0,0,0,0,3,3,0,4,4,4,4,4,4,4,4,4,0,5,0,6,0,7,7,0,8,8,0,0,9,9,9,0,10,0,0,0,0,0,11,0,0,0,0,0,0,0,12,0,0,0,0,13,0,14,14,0,0,15,15,15,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,17,0,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,20,20,20,20,0,0,21,21,21,21,21,21,21,0,22,22,22,22,22,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,0,0,0,0,24,24,24,24,24,0,0,0,0,25,25,25,25,25,0,0,0,0,26,26,26,26,26,0,0,0,0,27,27,27,0,0,0,28,28,0,0,0,29,29,29,29,0,0,0,0,30,30,30,30,30,0,0,0,0,31,31,31,31,31,31,31,31,31,0,0,0,0,32,32,32,0,33,33,33,33,0,0,34,34,34,0,29,29,29,29,0,0,35,35,0,36,36,0,37,0,38,38,38,0,39,0,40,0,41,0,0,0,42,42,42,42,42,0,43,43,43,43,43,0,44,44,0,45,45,45,45,0,46,46,46,0,0,47,47,47,47,0,48,48,48,0,49,49,49,49,49,49,0,50,50,50,0,0,51,51,0,0,0,52,52,52,52,0,0,0,0,0,0,0,0,0,0,0,53,53,53,53,0,54,0,55,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,0,0,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,58,58,58,0,59,59,0,0,0,0,60,60,60,0,61,61,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,66,66,66,66,66,66,66,66,66,66,66,66,66,4,4,4,4,4,4,4,4,4,4,4,4,4,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,67,67,67,67,67,67,67,67,67,67,67,67,67,67,68,68,68,68,68,68,68,68,68,68,68,68,68,68,11,11,11,11,11,11,11,11,11,11,11,11,11,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,12,12,12,12,12,12,12,12,12,12,12,12,12,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,72,72,72,72,72,72,72,72,72,72,72,72,72,72,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,18,18,18,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,74,74,74,74,74,74,74,74,74,74,74,74,74,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,75,75,75,75,75,75,75,75,75,75,75,75,75,75,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,23,23,23,23,23,23,23,23,23,23,23,23,23,77,77,77,77,77,77,77,77,77,77,77,77,77,77,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,24,24,24,24,24,24,24,24,24,24,24,24,24,79,79,79,79,79,79,79,79,79,79,79,79,79,79,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,25,25,25,25,25,25,25,25,25,25,25,25,25,81,81,81,81,81,81,81,81,81,81,81,81,81,81,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,26,26,26,26,26,26,26,26,26,26,26,26,26,83,83,83,83,83,83,83,83,83,83,83,83,83,83,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,27,27,27,27,27,27,27,27,27,27,27,27,27,33,33,33,33,33,33,33,33,33,33,33,33,33,85,85,85,85,85,85,85,85,85,85,85,85,85,34,34,34,34,34,34,34,34,34,34,34,34,34,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,87,87,87,87,87,87,87,87,87,87,87,87,87,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,88,88,88,88,88,88,88,88,88,88,88,88,88,89,89,89,89,89,89,89,89,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,30,30,30,30,30,30,30,30,30,30,30,30,30,91,91,91,91,91,91,91,91,91,91,91,91,91,91,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,31,31,31,31,31,31,31,31,31,31,31,31,31,36,36,36,36,36,36,36,36,36,36,36,36,36,93,93,93,93,93,93,93,93,93,93,93,93,93,93,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,32,32,32,32,32,32,32,32,32,32,32,32,32,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,46,46,46,95,95,95,95,95,95,95,95,95,95,95,95,95,47,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,96,96,96,96,96,96,96,96,96,96,96,96,96,97,97,97,97,97,97,97,97,97,97,97,97,97,98,98,98,98,98,98,98,98,98,98,98,98,98,99,99,99,99,99,99,99,99,99,99,99,99,99,100,100,100,100,100,100,100,100,100,100,100,100,100,101,101,101,101,101,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,102,102,102,102,102,103,103,103,103,103,103,103,103,103,103,103,103,103,104,104,104,104,104,104,104,104,104,104,104,104,104,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,61,61,61,61,61,61,61,61,61,61,61,61,61,101,101,97,97,99,99,102,102,96,96,98,98,100,100,8,7,61,28,98,99,87,100,105,104,97,4,112,108,103,106,59,8,28,111,96,110,109,102,107,101,113,61,7,108,108,108,110,110,110,109,109,109,106,106,106,105,105,105,107,107,107,87,7,8,98,98,109,109,100,100,101,101,61,61,4,110,110,97,97,108,108,103,107,107,102,102,8,8,113,113,111,111,96,96,106,106,112,112,105,105,59,99,99,7,7,104,87,87,28,28,8,7,7,4,113,99,109,103,111,8,61,104,28,101,112,107,110,98,96,105,97,100,108,102,106,59,8,7,7,96,96,96,97,97,97,98,98,98,100,100,100,99,99,99,102,102,102,101,101,101,112,28,61,100,109,8,101,107,102,99,106,97,98,111,113,7,105,110,96,59,108,113,106,96,107,8,111,59,101,110,112,109,97,87,100,105,99,103,102,104,61,7,108,28,98,4,8,7,7,7,7,7,59,59,107,105,107,111,59,108,106,113,59,102,111,101,112,113,99,7,110,100,110,108,106,105,101,113,105,108,59,111,106,105,108,106,112,111,106,100,107,105,109,98,110,113,111,59,109,111,7,7,107,99,100,112,111,97,107,96,113,107,109,112,108,105,106,112,108,112,110,59,97,59,8,106,59,107,112,112,111,111,112,109,110,108,109,113,100,109,108,106,110,106,107,96,110,109,105,105,109,113,113,108,112,109,8,105,109,59,110,106,101,8,110,105,110,107,113,100,111,98,108,107,113,59,8,7,7,111,112,113,7,8,97,112,111,100,98,110,105,106,7,109,108,104,61,103,59,4,28,102,107,8,99,96,113,101,28,87,109,7,110,103,102,108,28,61,112,99,111,98,96,100,104,113,8,107,4,105,59,97,101,106,7,8,7,7,8,7,7,8,59,59,111,111,112,112,113,113,108,108,105,105,109,109,106,106,110,110,107,107,18,23,24,25,26,27,28,30,31,32,23,24,25,26,27,28,30,31,32,24,25,28,30,31,32,24,25,28,30,31,20,20,20,20,20,20,20,20,11,11,23,23,24,24,25,25,26,26,27,27,28,28,30,30,31,31,36,36,32,32,45,45,62,63,64,65,66,67,68,11,69,70,12,71,72,73,16,18,19,20,74,21,22,75,76,23,77,78,24,79,80,25,81,82,26,83,84,27,33,85,34,86,29,88,89,90,30,91,92,31,36,93,94,32,44,45,46,95,47,48,49,50,66,66,66,67,67,70,70,12,12,16,18,18,19,20,20,21,22,22,75,75,76,76,23,23,77,77,78,78,24,24,79,79,80,80,25,25,81,81,26,26,83,83,27,27,33,33,85,85,34,86,86,29,29,88,88,89,89,90,90,30,30,91,91,92,92,31,31,36,36,93,93,94,94,32,32,44,44,45,45,46,46,95,95,47,48,49,49,50,50,67,12,18,19,22,24,25,81,26,83,27,33,85,34,29,88,30,36,32,44,45,46,47,48,49,50,66,67,12,18,19,22,23,24,25,81,26,83,27,33,85,34,29,88,30,31,36,32,44,45,46,95,47,48,49,50,66,66,66,66,67,12,18,19,22,77,78,24,79,80,25,81,26,83,27,33,85,34,86,29,88,89,90,30,36,93,94,32,44,45,46,47,48,49,50,69,70,71,71,71,71,71,71,71,71,71,72,72,72,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,75,76,77,78,79,80,81,82,83,84,86,89,90,91,92,93,94,12,12,12,12,12,12,12,12,12,12,74,85,88,95,66,67,11,12,16,18,19,20,74,21,22,75,76,23,77,78,24,79,80,25,81,82,26,83,84,27,33,85,34,86,29,88,89,90,30,91,92,31,36,93,94,32,44,45,46,95,47,48,49,50,16,22,24,25,26,27,33,85,34,29,88,36,32,46,50,62,62,62,63,63,63,63,64,64,64,65,65,65,65,16,62,63,65,11,23,24,25,26,27,30,31,36,32,45,23,24,25,26,27,30,31,32,11,36,45,64,67,68,16,67,67,68,68,66,66,66,66,66,66,66,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,67,67,15,20,20,74,74,74,74,74,74,74,74,74,74,74,74,74,33,33,33,33,85,85,85,85,85,85,85,85,87,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,88,88,88,88,88,88,88,88,88,88,88,36,36,36,36,42,42,42,42,45,45,45,45,46,46,95,95,95,95,95,96,97,98,99,100,101,102,105,106,107,108,109,110,59,59,59,111,112,113],"f":[null,null,null,null,null,null,null,null,[[],["result",4]],[[["rectangle",3]],["result",4]],[[["rectangle",3]],["result",4]],[[],["result",4]],null,[[["point",3]],["translated",3]],[[["rectangle",3]],["cropped",3]],[[["rectangle",3]],["clipped",3]],[[],["colorconverted",3]],null,null,null,null,[[],["angle",3]],[[],["angle",3]],null,null,null,null,null,null,null,null,null,null,null,[[],["rectangle",3]],null,[[],["size",3]],null,null,null,null,null,null,null,null,null,[[],["result",4]],[[["rectangle",3]],["result",4]],null,[[["rectangle",3]],["subimage",3]],null,null,null,null,null,[[["point",3]]],null,null,null,null,null,null,null,[[]],null,null,null,null,[[["rectangle",3]],["intopixels",3]],null,[[],["result",4]],[[["point",3]],["translated",3]],null,null,null,[[["char",15]]],[[],["char",15]],null,[[]],[[]],[[["bool",15]]],[[["bool",15]]],[[["point",3]],["option",4]],[[["option",4],["point",3]]],[[["option",4]]],[[],["rectangle",3]],[[["point",3]]],[[],["mockdisplay",3]],[[],["mockdisplay",3]],[[["mockdisplay",3]],[["mockdisplay",3],["rgb888",3]]],[[],["mockdisplay",3]],[[["mockdisplay",3]]],[[["mockdisplay",3]]],[[]],[[]],null,null,null,[[["char",15]],["usize",15]],null,[[["usize",15],["str",15]]],[[]],[[]],[[["char",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[],["str",15]],[[],["strglyphmapping",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,[[["u32",15],["angle",3],["point",3]]],[[["u32",15],["angle",3],["point",3]]],[[["angle",3],["circle",3]]],[[],["circle",3]],[[],["point",3]],null,null,null,null,null,null,[[["u32",15],["point",3]]],[[["u32",15],["point",3]]],[[],["point",3]],null,null,null,null,null,null,[[["size",3],["point",3]]],[[["size",3],["point",3]]],[[],["point",3]],null,null,null,null,null,null,[[["point",3]]],[[],["point",3]],[[],["point",3]],null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["cornerradii",3],["rectangle",3]]],[[["size",3],["rectangle",3]]],[[]],null,null,null,null,null,null,null,null,[[["u32",15],["angle",3],["point",3]]],[[["u32",15],["angle",3],["point",3]]],[[["angle",3],["circle",3]]],[[],["circle",3]],[[],["point",3]],null,null,null,null,null,[[["point",3]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,[[],["rectangle",3]],null,null,null,[[],["result",4]],null,[[],["styled",3]],null,[[["point",3]],["bool",15]],null,[[["i32",15]]],null,null,null,null,[[["option",4]]],[[["option",4]]],[[["decorationcolor",4]]],[[["decorationcolor",4]]],null,null,[[["point",3],["baseline",4],["str",15]],[["result",4],["point",3]]],[[["u32",15],["baseline",4],["point",3]],[["result",4],["point",3]]],[[["point",3],["baseline",4],["str",15]],["textmetrics",3]],[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,[[["u32",15]],["u32",15]],null,null,[[["point",3]]],[[["point",3]]],null,null,null,null,null,[[]],[[["u32",15]]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],null,null,null,null,[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],null,null,null,[[["point",3]],["translated",3]],[[["rectangle",3]],["cropped",3]],[[["rectangle",3]],["clipped",3]],[[],["colorconverted",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[["point",3]],["translated",3]],[[["rectangle",3]],["cropped",3]],[[["rectangle",3]],["clipped",3]],[[],["colorconverted",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[["point",3]],["translated",3]],[[["rectangle",3]],["cropped",3]],[[["rectangle",3]],["clipped",3]],[[],["colorconverted",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["rectangle",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[["point",3]],["translated",3]],[[["rectangle",3]],["cropped",3]],[[["rectangle",3]],["clipped",3]],[[],["colorconverted",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["rectangle",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["rectangle",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[["point",3]],["translated",3]],[[["rectangle",3]],["cropped",3]],[[["rectangle",3]],["clipped",3]],[[],["colorconverted",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[],["rectangle",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[],["result",4]],[[["point",3]],["translated",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[["u32",15]],["rawu24",3]],[[]],[[["u32",15]],["rawu2",3]],[[]],[[["u32",15]],["rawu8",3]],[[]],[[["u32",15]],["rawu32",3]],[[]],[[["u32",15]],["rawu1",3]],[[]],[[["u32",15]],["rawu4",3]],[[]],[[["u32",15]],["rawu16",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["result",4]],[[]],[[],["rawu4",3]],[[],["rawu8",3]],[[],["points",3]],[[],["rawu16",3]],[[],["bgr555",3]],[[],["bigendian",4]],[[],["rawu2",3]],[[],["anchorpoint",4]],[[],["gray4",3]],[[],["rgb555",3]],[[],["littleendian",4]],[[],["bgr565",3]],[[],["binarycolor",4]],[[],["size",3]],[[],["rectangle",3]],[[],["gray2",3]],[[],["rawu1",3]],[[],["rgb888",3]],[[],["rgb565",3]],[[],["rawu32",3]],[[],["bgr888",3]],[[],["rawu24",3]],[[],["gray8",3]],[[],["pixel",3]],[[],["point",3]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["option",4]],[[["usize",15]],["i32",15]],[[["usize",15]],["u32",15]],[[["rawu4",3]],["bool",15]],[[["rawu4",3]],["bool",15]],[[["rgb565",3]],["bool",15]],[[["rgb565",3]],["bool",15]],[[["rawu16",3]],["bool",15]],[[["rawu16",3]],["bool",15]],[[["rawu24",3]],["bool",15]],[[["rawu24",3]],["bool",15]],[[["pixel",3]],["bool",15]],[[["pixel",3]],["bool",15]],[[["anchorpoint",4]],["bool",15]],[[["rgb888",3]],["bool",15]],[[["rgb888",3]],["bool",15]],[[["rawu2",3]],["bool",15]],[[["rawu2",3]],["bool",15]],[[["rgb555",3]],["bool",15]],[[["rgb555",3]],["bool",15]],[[["littleendian",4]],["bool",15]],[[["bgr888",3]],["bool",15]],[[["bgr888",3]],["bool",15]],[[["rawu32",3]],["bool",15]],[[["rawu32",3]],["bool",15]],[[["size",3]],["bool",15]],[[["size",3]],["bool",15]],[[["gray8",3]],["bool",15]],[[["gray8",3]],["bool",15]],[[["gray2",3]],["bool",15]],[[["gray2",3]],["bool",15]],[[["rawu1",3]],["bool",15]],[[["rawu1",3]],["bool",15]],[[["bgr565",3]],["bool",15]],[[["bgr565",3]],["bool",15]],[[["gray4",3]],["bool",15]],[[["gray4",3]],["bool",15]],[[["bgr555",3]],["bool",15]],[[["bgr555",3]],["bool",15]],[[["binarycolor",4]],["bool",15]],[[["rawu8",3]],["bool",15]],[[["rawu8",3]],["bool",15]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[["bigendian",4]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["rectangle",3]],["bool",15]],[[["rectangle",3]],["bool",15]],[[["u32",15]],["size",3]],[[["i32",15]],["point",3]],[[["point",3]],[["option",4],["ordering",4]]],[[["anchorpoint",4]],[["option",4],["ordering",4]]],[[["gray8",3]],[["option",4],["ordering",4]]],[[["rawu8",3]],[["option",4],["ordering",4]]],[[["rgb565",3]],[["option",4],["ordering",4]]],[[["littleendian",4]],[["option",4],["ordering",4]]],[[["gray2",3]],[["option",4],["ordering",4]]],[[["size",3]],[["option",4],["ordering",4]]],[[["pixel",3]],[["option",4],["ordering",4]]],[[["bigendian",4]],[["option",4],["ordering",4]]],[[["rectangle",3]],[["option",4],["ordering",4]]],[[["rawu24",3]],[["option",4],["ordering",4]]],[[["gray4",3]],[["option",4],["ordering",4]]],[[["bgr888",3]],[["option",4],["ordering",4]]],[[["rgb888",3]],[["option",4],["ordering",4]]],[[["rawu4",3]],[["option",4],["ordering",4]]],[[["rawu1",3]],[["option",4],["ordering",4]]],[[["bgr555",3]],[["option",4],["ordering",4]]],[[["rawu2",3]],[["option",4],["ordering",4]]],[[["rawu16",3]],[["option",4],["ordering",4]]],[[["rgb555",3]],[["option",4],["ordering",4]]],[[["rawu32",3]],[["option",4],["ordering",4]]],[[["bgr565",3]],[["option",4],["ordering",4]]],[[["binarycolor",4]],[["option",4],["ordering",4]]],[[["size",3]],["size",3]],[[["size",3]],["point",3]],[[["point",3]],["point",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["gray4",3]],[[],["rectangle",3]],[[],["pixel",3]],[[],["rawu16",3]],[[],["rgb565",3]],[[],["size",3]],[[],["rawu24",3]],[[],["bgr888",3]],[[],["rawu32",3]],[[],["rawu8",3]],[[],["bgr565",3]],[[],["rawu2",3]],[[],["rawu4",3]],[[],["gray2",3]],[[],["gray8",3]],[[],["point",3]],[[],["bgr555",3]],[[],["rgb888",3]],[[],["rawu1",3]],[[],["binarycolor",4]],[[],["rgb555",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["u32",15]]],[[["i32",15]]],[[]],[[],[["point",3],["result",4]]],[[],[["result",4],["point",3]]],[[],[["point",3],["result",4]]],[[["gray8",3]],["binarycolor",4]],[[["bgr888",3]],["binarycolor",4]],[[["rgb888",3]],["bgr888",3]],[[["rgb565",3]],["bgr555",3]],[[["gray2",3]],["bgr888",3]],[[["rgb555",3]],["gray2",3]],[[["gray4",3]],["binarycolor",4]],[[["bgr555",3]],["rgb555",3]],[[["gray2",3]],["bgr565",3]],[[["rgb888",3]],["gray8",3]],[[["bgr565",3]],["binarycolor",4]],[[["u32",15]],["rawu32",3]],[[["rgb565",3]],["gray2",3]],[[["rgb888",3]],["rawu24",3]],[[["bgr565",3]],["gray4",3]],[[["gray2",3]],["gray8",3]],[[["gray8",3]],["rawu8",3]],[[],["point",3]],[[["bgr555",3]],["rgb888",3]],[[["u16",15]],["rawu16",3]],[[["gray4",3]],["rgb888",3]],[[["bgr888",3]],["rgb555",3]],[[["bgr555",3]],["bgr565",3]],[[["binarycolor",4]],["bgr555",3]],[[["bgr888",3]],["rawu24",3]],[[["rawu8",3]],["gray8",3]],[[["gray8",3]],["bgr555",3]],[[["gray2",3]],["rgb555",3]],[[["gray2",3]],["binarycolor",4]],[[["bgr888",3]],["gray2",3]],[[["rawu16",3]],["bgr565",3]],[[["rgb888",3]],["bgr555",3]],[[["gray4",3]],["rgb555",3]],[[["rgb555",3]],["bgr565",3]],[[["bgr555",3]],["gray4",3]],[[["rgb888",3]],["gray2",3]],[[["binarycolor",4]],["bgr565",3]],[[["rgb555",3]],["rawu16",3]],[[["bgr555",3]],["bgr888",3]],[[["gray4",3]],["bgr555",3]],[[["bgr888",3]],["rgb565",3]],[[["gray4",3]],["rawu4",3]],[[["rgb555",3]],["rgb888",3]],[[["rgb565",3]],["gray8",3]],[[["gray4",3]],["gray2",3]],[[["rgb888",3]],["binarycolor",4]],[[["bgr555",3]],["rgb565",3]],[[["rawu2",3]],["gray2",3]],[[],["point",3]],[[],["point",3]],[[["rgb565",3]],["bgr888",3]],[[["u8",15]],["rawu8",3]],[[["bgr555",3]],["rawu16",3]],[[["rgb888",3]],["gray4",3]],[[["binarycolor",4]],["gray2",3]],[[["gray2",3]],["rawu2",3]],[[["gray4",3]],["bgr888",3]],[[["binarycolor",4]],["rawu1",3]],[[["gray4",3]],["gray8",3]],[[["binarycolor",4]],["bgr888",3]],[[["bgr565",3]],["rgb565",3]],[[["gray2",3]],["gray4",3]],[[["binarycolor",4]],["rgb555",3]],[[["rawu16",3]],["bgr555",3]],[[["rgb888",3]],["bgr565",3]],[[["gray8",3]],["gray4",3]],[[["rgb565",3]],["rgb555",3]],[[["binarycolor",4]],["gray4",3]],[[["gray2",3]],["rgb888",3]],[[["bgr555",3]],["binarycolor",4]],[[["u8",15]],["rawu2",3]],[[["rgb555",3]],["binarycolor",4]],[[],["size",3]],[[["gray4",3]],["bgr565",3]],[[["rawu1",3]],["binarycolor",4]],[[["rgb555",3]],["bgr888",3]],[[["bgr888",3]],["gray4",3]],[[["rgb555",3]],["gray4",3]],[[["bgr565",3]],["gray2",3]],[[["gray8",3]],["gray2",3]],[[["rgb565",3]],["gray4",3]],[[["gray8",3]],["rgb565",3]],[[["binarycolor",4]],["rgb888",3]],[[["bgr565",3]],["rgb555",3]],[[["rgb555",3]],["rgb565",3]],[[["binarycolor",4]],["gray8",3]],[[["rgb565",3]],["rawu16",3]],[[["gray2",3]],["rgb565",3]],[[["rgb888",3]],["rgb555",3]],[[["rgb565",3]],["bgr565",3]],[[["bgr565",3]],["rgb888",3]],[[["bgr888",3]],["bgr565",3]],[[["bgr565",3]],["bgr888",3]],[[["u8",15]],["rawu1",3]],[[["rawu24",3]],["rgb888",3]],[[["rawu16",3]],["rgb565",3]],[[["rgb555",3]],["bgr555",3]],[[["gray2",3]],["bgr555",3]],[[["rgb888",3]],["rgb565",3]],[[["bgr888",3]],["gray8",3]],[[["rgb555",3]],["gray8",3]],[[["rawu16",3]],["rgb555",3]],[[["rawu4",3]],["gray4",3]],[[["binarycolor",4]],["rgb565",3]],[[],["size",3]],[[["bgr565",3]],["bgr555",3]],[[["gray4",3]],["rgb565",3]],[[["rgb565",3]],["binarycolor",4]],[[["rgb565",3]],["rgb888",3]],[[["gray8",3]],["bgr565",3]],[[["u32",15]],["rawu24",3]],[[],["size",3]],[[["bgr888",3]],["rgb888",3]],[[["bgr888",3]],["bgr555",3]],[[["gray8",3]],["rgb888",3]],[[["gray8",3]],["bgr888",3]],[[["bgr565",3]],["gray8",3]],[[["bgr565",3]],["rawu16",3]],[[["bgr555",3]],["gray2",3]],[[["u8",15]],["rawu4",3]],[[["gray8",3]],["rgb555",3]],[[["rawu24",3]],["bgr888",3]],[[["bgr555",3]],["gray8",3]],[[["bool",15]],["binarycolor",4]],[[["size",3]]],[[["size",3]]],[[["point",3]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[["i32",15]],["point",3]],[[["u32",15]],["size",3]],[[["rawu2",3]],["ordering",4]],[[["gray4",3]],["ordering",4]],[[["gray2",3]],["ordering",4]],[[["rawu16",3]],["ordering",4]],[[["rawu4",3]],["ordering",4]],[[["rgb888",3]],["ordering",4]],[[["bgr555",3]],["ordering",4]],[[["bgr565",3]],["ordering",4]],[[["point",3]],["ordering",4]],[[["rgb565",3]],["ordering",4]],[[["rgb555",3]],["ordering",4]],[[["bigendian",4]],["ordering",4]],[[["pixel",3]],["ordering",4]],[[["littleendian",4]],["ordering",4]],[[["binarycolor",4]],["ordering",4]],[[["anchorpoint",4]],["ordering",4]],[[["rectangle",3]],["ordering",4]],[[["rawu32",3]],["ordering",4]],[[["bgr888",3]],["ordering",4]],[[["size",3]],["ordering",4]],[[["rawu8",3]],["ordering",4]],[[["rawu1",3]],["ordering",4]],[[["gray8",3]],["ordering",4]],[[["rawu24",3]],["ordering",4]],[[],["rectangle",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["point",3]],["point",3]],[[["size",3]],["size",3]],[[["size",3]],["point",3]],[[["i32",15]]],[[["u32",15]]],[[["point",3]]],[[["size",3]]],[[["size",3]]],[[["char",15]]],[[],["char",15]],[[["char",15]]],[[],["char",15]],[[["char",15]]],[[],["char",15]],[[["char",15]]],[[],["char",15]],[[["char",15]]],[[],["char",15]],[[["char",15]]],[[],["char",15]],[[["char",15]]],[[],["char",15]],[[["char",15]]],[[],["char",15]],[[["char",15]]],[[],["char",15]],[[["char",15]]],[[],["char",15]],[[["char",15]],["usize",15]],[[["primitivestyle",3]],["result",4]],[[["primitivestyle",3]],["result",4]],[[["primitivestyle",3]],["result",4]],[[["primitivestyle",3]],["result",4]],[[["primitivestyle",3]],["result",4]],[[["primitivestyle",3]],["result",4]],[[["primitivestyle",3]],["result",4]],[[["primitivestyle",3]],["result",4]],[[["primitivestyle",3]],["result",4]],[[["primitivestyle",3]],["rectangle",3]],[[["primitivestyle",3]],["rectangle",3]],[[["primitivestyle",3]],["rectangle",3]],[[["primitivestyle",3]],["rectangle",3]],[[["primitivestyle",3]],["rectangle",3]],[[["primitivestyle",3]],["rectangle",3]],[[["primitivestyle",3]],["rectangle",3]],[[["primitivestyle",3]],["rectangle",3]],[[["primitivestyle",3]],["rectangle",3]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["i32",15]]],[[["option",4]]],[[["option",4]]],[[["decorationcolor",4]]],[[["decorationcolor",4]]],[[["point",3],["baseline",4],["str",15]],[["result",4],["point",3]]],[[["u32",15],["baseline",4],["point",3]],[["result",4],["point",3]]],[[["point",3],["baseline",4],["str",15]],["textmetrics",3]],[[],["u32",15]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["point",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["angle",3]],["angle",3]],[[["angle",3]],["bool",15]],[[["angle",3]],["bool",15]],[[["imageraw",3]],["bool",15]],[[["imageraw",3]],["bool",15]],[[["translated",3]],["bool",15]],[[["translated",3]],["bool",15]],[[["rawdataslice",3]],["bool",15]],[[["rawdataslice",3]],["bool",15]],[[],["bool",15]],[[["strglyphmapping",3]],["bool",15]],[[["strglyphmapping",3]],["bool",15]],[[["mapping",4]],["bool",15]],[[["monotextstyle",3]],["bool",15]],[[["monotextstyle",3]],["bool",15]],[[],["bool",15]],[[["decorationdimensions",3]],["bool",15]],[[["decorationdimensions",3]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["arc",3]],["bool",15]],[[["arc",3]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["circle",3]],["bool",15]],[[["circle",3]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["ellipse",3]],["bool",15]],[[["ellipse",3]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["line",3]],["bool",15]],[[["line",3]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["polyline",3]],["bool",15]],[[["polyline",3]],["bool",15]],[[["primitivestyle",3]],["bool",15]],[[["primitivestyle",3]],["bool",15]],[[["primitivestylebuilder",3]],["bool",15]],[[["primitivestylebuilder",3]],["bool",15]],[[["strokealignment",4]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["cornerradii",3]],["bool",15]],[[["cornerradii",3]],["bool",15]],[[["cornerradiibuilder",3]],["bool",15]],[[["cornerradiibuilder",3]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["roundedrectangle",3]],["bool",15]],[[["roundedrectangle",3]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["sector",3]],["bool",15]],[[["sector",3]],["bool",15]],[[["styled",3]],["bool",15]],[[["styled",3]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["styledpixelsiterator",3]],["bool",15]],[[["triangle",3]],["bool",15]],[[["triangle",3]],["bool",15]],[[["textmetrics",3]],["bool",15]],[[["textmetrics",3]],["bool",15]],[[["text",3]],["bool",15]],[[["text",3]],["bool",15]],[[["textstyle",3]],["bool",15]],[[["textstyle",3]],["bool",15]],[[["textstylebuilder",3]],["bool",15]],[[["textstylebuilder",3]],["bool",15]],[[["baseline",4]],["bool",15]],[[["alignment",4]],["bool",15]],[[["decorationcolor",4]],["bool",15]],[[["decorationcolor",4]],["bool",15]],[[["lineheight",4]],["bool",15]],[[["lineheight",4]],["bool",15]],[[["imageraw",3]],["ordering",4]],[[["rawdataslice",3]],["ordering",4]],[[["strglyphmapping",3]],["ordering",4]],[[["mapping",4]],["ordering",4]],[[["decorationdimensions",3]],["ordering",4]],[[["circle",3]],["ordering",4]],[[["ellipse",3]],["ordering",4]],[[["points",3]],["ordering",4]],[[["line",3]],["ordering",4]],[[["points",3]],["ordering",4]],[[["polyline",3]],["ordering",4]],[[["primitivestyle",3]],["ordering",4]],[[["primitivestylebuilder",3]],["ordering",4]],[[["strokealignment",4]],["ordering",4]],[[["cornerradii",3]],["ordering",4]],[[["cornerradiibuilder",3]],["ordering",4]],[[["roundedrectangle",3]],["ordering",4]],[[["styled",3]],["ordering",4]],[[["triangle",3]],["ordering",4]],[[["textmetrics",3]],["ordering",4]],[[["text",3]],["ordering",4]],[[["textstyle",3]],["ordering",4]],[[["baseline",4]],["ordering",4]],[[["alignment",4]],["ordering",4]],[[["decorationcolor",4]],["ordering",4]],[[["lineheight",4]],["ordering",4]],[[["angle",3]],[["ordering",4],["option",4]]],[[["imageraw",3]],[["ordering",4],["option",4]]],[[["rawdataslice",3]],[["ordering",4],["option",4]]],[[["strglyphmapping",3]],[["ordering",4],["option",4]]],[[["mapping",4]],[["ordering",4],["option",4]]],[[["decorationdimensions",3]],[["ordering",4],["option",4]]],[[["arc",3]],[["ordering",4],["option",4]]],[[["circle",3]],[["ordering",4],["option",4]]],[[["ellipse",3]],[["ordering",4],["option",4]]],[[["points",3]],[["ordering",4],["option",4]]],[[["line",3]],[["ordering",4],["option",4]]],[[["points",3]],[["ordering",4],["option",4]]],[[["polyline",3]],[["ordering",4],["option",4]]],[[["primitivestyle",3]],[["ordering",4],["option",4]]],[[["primitivestylebuilder",3]],[["ordering",4],["option",4]]],[[["strokealignment",4]],[["ordering",4],["option",4]]],[[["cornerradii",3]],[["ordering",4],["option",4]]],[[["cornerradiibuilder",3]],[["ordering",4],["option",4]]],[[["roundedrectangle",3]],[["ordering",4],["option",4]]],[[["sector",3]],[["ordering",4],["option",4]]],[[["styled",3]],[["ordering",4],["option",4]]],[[["triangle",3]],[["ordering",4],["option",4]]],[[["textmetrics",3]],[["ordering",4],["option",4]]],[[["text",3]],[["ordering",4],["option",4]]],[[["textstyle",3]],[["ordering",4],["option",4]]],[[["textstylebuilder",3]],[["ordering",4],["option",4]]],[[["baseline",4]],[["ordering",4],["option",4]]],[[["alignment",4]],[["ordering",4],["option",4]]],[[["decorationcolor",4]],[["ordering",4],["option",4]]],[[["lineheight",4]],[["ordering",4],["option",4]]],[[["angle",3]],["angle",3]],[[],["angle",3]],[[["angle",3]]],[[["angle",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[["usize",15]],["option",4]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["monotextstyle",3]]],[[["primitivestyle",3]]],[[["cornerradii",3]]],[[["textstyle",3]]],[[],["angle",3]],[[],["imageraw",3]],[[],["image",3]],[[],["rawdataslice",3]],[[],["mockdisplay",3]],[[],["strglyphmapping",3]],[[],["mapping",4]],[[],["monotextstyle",3]],[[],["monotextstylebuilder",3]],[[],["monofont",3]],[[],["decorationdimensions",3]],[[],["points",3]],[[],["styledpixelsiterator",3]],[[],["arc",3]],[[],["points",3]],[[],["styledpixelsiterator",3]],[[],["circle",3]],[[],["points",3]],[[],["styledpixelsiterator",3]],[[],["ellipse",3]],[[],["points",3]],[[],["styledpixelsiterator",3]],[[],["line",3]],[[],["points",3]],[[],["styledpixelsiterator",3]],[[],["polyline",3]],[[],["primitivestyle",3]],[[],["primitivestylebuilder",3]],[[],["strokealignment",4]],[[],["styledpixelsiterator",3]],[[],["cornerradii",3]],[[],["cornerradiibuilder",3]],[[],["points",3]],[[],["styledpixelsiterator",3]],[[],["roundedrectangle",3]],[[],["points",3]],[[],["styledpixelsiterator",3]],[[],["sector",3]],[[],["styled",3]],[[],["points",3]],[[],["styledpixelsiterator",3]],[[],["triangle",3]],[[],["textmetrics",3]],[[],["text",3]],[[],["textstyle",3]],[[],["textstylebuilder",3]],[[],["baseline",4]],[[],["alignment",4]],[[],["decorationcolor",4]],[[],["lineheight",4]],[[]],[[],["decorationdimensions",3]],[[],["circle",3]],[[],["ellipse",3]],[[],["line",3]],[[],["polyline",3]],[[]],[[],["primitivestylebuilder",3]],[[]],[[],["cornerradii",3]],[[],["cornerradiibuilder",3]],[[],["styled",3]],[[],["triangle",3]],[[]],[[]],[[],["result",4]],[[["rectangle",3]],["result",4]],[[["rectangle",3]],["result",4]],[[],["result",4]],[[["rectangle",3]],["result",4]],[[["rectangle",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[["rectangle",3]],["result",4]],[[["rectangle",3]],["result",4]],[[],["result",4]],[[["rectangle",3]],["result",4]],[[["rectangle",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[],["rectangle",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],[["result",4],["point",3]]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],["result",4]],[[["rectangle",3]],["result",4]],[[],["result",4]],[[["rectangle",3]],["result",4]],[[["f32",15]]],[[["f32",15]]],[[]],[[]],[[]],[[],["f32",15]],[[],["f32",15]],[[["i32",15]],["point",3]],[[["i32",15]],["point",3]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[["point",3]],["point",3]],[[["point",3]],["point",3]],[[["point",3]],["point",3]],[[["point",3]],["point",3]],[[["u32",15]],["size",3]],[[["u32",15]],["size",3]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[["size",3]],["size",3]],[[["size",3]],["size",3]],[[["size",3]],["size",3]],[[["size",3]],["size",3]],[[["size",3]],["size",3]],[[["size",3]],["size",3]],[[["u32",15]]],[[["u32",15]]],null,[[["monofont",3]]],[[],["bool",15]],[[]],[[["monofont",3]],["monotextstylebuilder",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["monotextstyle",3]],[[]],[[["u32",15]]],[[]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[["strokealignment",4]]],[[],["primitivestyle",3]],[[],["points",3]],[[["size",3],["point",3]],["rectangle",3]],[[["point",3]],["rectangle",3]],[[["size",3],["point",3]],["rectangle",3]],[[],["rectangle",3]],[[],["point",3]],[[],[["point",3],["option",4]]],[[["point",3]],["bool",15]],[[["rectangle",3]],["rectangle",3]],[[["size",3],["anchorpoint",4]],["rectangle",3]],[[["i32",15]],["rectangle",3]],[[["anchorpoint",4]],["point",3]],[[],[["range",3],["i32",15]]],[[],[["range",3],["i32",15]]],[[],["bool",15]],[[["size",3]]],[[]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[["size",3]]],[[],["cornerradii",3]],[[]],[[]],[[]],[[]],[[["option",4]]],[[["option",4]]],[[["decorationcolor",4]]],[[["decorationcolor",4]]],[[["point",3],["str",15]]],[[["point",3],["textstyle",3],["str",15]]],[[["point",3],["baseline",4],["str",15]]],[[["point",3],["alignment",4],["str",15]]],[[["baseline",4]]],[[["alignment",4]]],[[]],[[["alignment",4]]],[[["baseline",4]]],[[["lineheight",4]]],[[],["textstyle",3]],[[["u8",15]],["rawu1",3]],[[["u8",15]],["rawu2",3]],[[["u8",15]],["rawu4",3]],[[["u8",15]],["rawu8",3]],[[["u16",15]],["rawu16",3]],[[["u32",15]],["rawu24",3]],[[["u32",15]],["rawu32",3]],[[["u8",15]],["bgr555",3]],[[["u8",15]],["bgr565",3]],[[["u8",15]],["bgr888",3]],[[["u8",15]],["rgb555",3]],[[["u8",15]],["rgb565",3]],[[["u8",15]],["rgb888",3]],[[],["binarycolor",4]],[[],["bool",15]],[[],["bool",15]],[[["u8",15]],["gray2",3]],[[["u8",15]],["gray4",3]],[[["u8",15]],["gray8",3]]],"p":[[8,"DrawTarget"],[8,"DrawTargetExt"],[8,"AngleUnit"],[4,"AnchorPoint"],[8,"Dimensions"],[8,"OriginDimensions"],[3,"Point"],[3,"Size"],[8,"ImageDrawable"],[8,"ImageDrawableExt"],[3,"Image"],[3,"RawDataSlice"],[8,"ContiguousIteratorExt"],[8,"PixelIteratorExt"],[8,"ColorMapping"],[3,"MockDisplay"],[8,"GlyphMapping"],[3,"StrGlyphMapping"],[4,"Mapping"],[3,"MonoTextStyle"],[3,"MonoFont"],[3,"DecorationDimensions"],[3,"Arc"],[3,"Circle"],[3,"Ellipse"],[3,"Line"],[3,"Polyline"],[3,"Rectangle"],[3,"CornerRadii"],[3,"RoundedRectangle"],[3,"Sector"],[3,"Triangle"],[3,"PrimitiveStyle"],[4,"StrokeAlignment"],[8,"PointsIter"],[3,"Styled"],[8,"StyledDimensions"],[8,"StyledDrawable"],[8,"Primitive"],[8,"ContainsPoint"],[8,"OffsetOutline"],[8,"CharacterStyle"],[8,"TextRenderer"],[3,"TextMetrics"],[3,"Text"],[3,"TextStyle"],[4,"Baseline"],[4,"Alignment"],[4,"DecorationColor"],[4,"LineHeight"],[8,"Transform"],[8,"RawData"],[8,"ToBytes"],[8,"PixelColor"],[8,"IntoStorage"],[8,"WebColors"],[8,"RgbColor"],[8,"GrayColor"],[4,"BinaryColor"],[8,"Drawable"],[3,"Pixel"],[3,"Clipped"],[3,"ColorConverted"],[3,"Cropped"],[3,"Translated"],[3,"Angle"],[3,"ImageRaw"],[3,"SubImage"],[3,"IntoPixels"],[3,"Translated"],[3,"BitsIterator"],[3,"ByteIterator"],[3,"BytesIterator"],[3,"MonoTextStyleBuilder"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"PrimitiveStyleBuilder"],[3,"StyledPixelsIterator"],[3,"Points"],[3,"CornerRadiiBuilder"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"Points"],[3,"StyledPixelsIterator"],[3,"TextStyleBuilder"],[3,"RawU1"],[3,"RawU2"],[3,"RawU4"],[3,"RawU8"],[3,"RawU16"],[3,"RawU24"],[3,"RawU32"],[4,"LittleEndian"],[4,"BigEndian"],[3,"Bgr555"],[3,"Bgr565"],[3,"Bgr888"],[3,"Rgb555"],[3,"Rgb565"],[3,"Rgb888"],[3,"Gray2"],[3,"Gray4"],[3,"Gray8"]]},\
"embedded_graphics_core":{"doc":"embedded-graphics-core contains the core components of …","t":[0,8,16,16,10,11,11,11,0,3,12,12,3,12,12,8,10,8,10,4,13,13,13,13,13,13,13,13,13,0,8,16,10,10,0,0,8,16,10,10,10,8,16,18,10,10,3,11,3,11,3,11,3,11,3,11,3,11,3,11,8,4,4,4,13,13,8,10,18,18,3,3,3,8,10,10,10,18,18,18,18,18,18,18,18,18,18,18,3,3,3,3,3,3,8,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,8,16,8,16,10,0,0,0,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,16,10,8,16,16,10,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,11,11,11,18,18,18,18,18,18,18,18,18,18,18,11,11,11,11,11,11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,11],"n":["draw_target","DrawTarget","Color","Error","draw_iter","fill_contiguous","fill_solid","clear","geometry","Point","x","y","Size","width","height","Dimensions","bounding_box","OriginDimensions","size","AnchorPoint","TopLeft","TopCenter","TopRight","CenterLeft","Center","CenterRight","BottomLeft","BottomCenter","BottomRight","image","ImageDrawable","Color","draw","draw_sub_image","pixelcolor","raw","ToBytes","Bytes","to_be_bytes","to_le_bytes","to_ne_bytes","RawData","Storage","BITS_PER_PIXEL","into_inner","from_u32","RawU1","new","RawU2","new","RawU4","new","RawU8","new","RawU16","new","RawU24","new","RawU32","new","ByteOrder","LittleEndian","BigEndian","BinaryColor","Off","On","GrayColor","luma","BLACK","WHITE","Gray2","Gray4","Gray8","RgbColor","r","g","b","MAX_R","MAX_G","MAX_B","BLACK","RED","GREEN","BLUE","YELLOW","MAGENTA","CYAN","WHITE","Rgb555","Bgr555","Rgb565","Bgr565","Rgb888","Bgr888","WebColors","CSS_ALICE_BLUE","CSS_ANTIQUE_WHITE","CSS_AQUA","CSS_AQUAMARINE","CSS_AZURE","CSS_BEIGE","CSS_BISQUE","CSS_BLACK","CSS_BLANCHED_ALMOND","CSS_BLUE","CSS_BLUE_VIOLET","CSS_BROWN","CSS_BURLY_WOOD","CSS_CADET_BLUE","CSS_CHARTREUSE","CSS_CHOCOLATE","CSS_CORAL","CSS_CORNFLOWER_BLUE","CSS_CORNSILK","CSS_CRIMSON","CSS_CYAN","CSS_DARK_BLUE","CSS_DARK_CYAN","CSS_DARK_GOLDENROD","CSS_DARK_GRAY","CSS_DARK_GREEN","CSS_DARK_KHAKI","CSS_DARK_MAGENTA","CSS_DARK_OLIVE_GREEN","CSS_DARK_ORANGE","CSS_DARK_ORCHID","CSS_DARK_RED","CSS_DARK_SALMON","CSS_DARK_SEA_GREEN","CSS_DARK_SLATE_BLUE","CSS_DARK_SLATE_GRAY","CSS_DARK_TURQUOISE","CSS_DARK_VIOLET","CSS_DEEP_PINK","CSS_DEEP_SKY_BLUE","CSS_DIM_GRAY","CSS_DODGER_BLUE","CSS_FIRE_BRICK","CSS_FLORAL_WHITE","CSS_FOREST_GREEN","CSS_FUCHSIA","CSS_GAINSBORO","CSS_GHOST_WHITE","CSS_GOLD","CSS_GOLDENROD","CSS_GRAY","CSS_GREEN","CSS_GREEN_YELLOW","CSS_HONEYDEW","CSS_HOT_PINK","CSS_INDIAN_RED","CSS_INDIGO","CSS_IVORY","CSS_KHAKI","CSS_LAVENDER","CSS_LAVENDER_BLUSH","CSS_LAWN_GREEN","CSS_LEMON_CHIFFON","CSS_LIGHT_BLUE","CSS_LIGHT_CORAL","CSS_LIGHT_CYAN","CSS_LIGHT_GOLDENROD_YELLOW","CSS_LIGHT_GRAY","CSS_LIGHT_GREEN","CSS_LIGHT_PINK","CSS_LIGHT_SALMON","CSS_LIGHT_SEA_GREEN","CSS_LIGHT_SKY_BLUE","CSS_LIGHT_SLATE_GRAY","CSS_LIGHT_STEEL_BLUE","CSS_LIGHT_YELLOW","CSS_LIME","CSS_LIME_GREEN","CSS_LINEN","CSS_MAGENTA","CSS_MAROON","CSS_MEDIUM_AQUAMARINE","CSS_MEDIUM_BLUE","CSS_MEDIUM_ORCHID","CSS_MEDIUM_PURPLE","CSS_MEDIUM_SEA_GREEN","CSS_MEDIUM_SLATE_BLUE","CSS_MEDIUM_SPRING_GREEN","CSS_MEDIUM_TURQUOISE","CSS_MEDIUM_VIOLET_RED","CSS_MIDNIGHT_BLUE","CSS_MINT_CREAM","CSS_MISTY_ROSE","CSS_MOCCASIN","CSS_NAVAJO_WHITE","CSS_NAVY","CSS_OLD_LACE","CSS_OLIVE","CSS_OLIVE_DRAB","CSS_ORANGE","CSS_ORANGE_RED","CSS_ORCHID","CSS_PALE_GOLDENROD","CSS_PALE_GREEN","CSS_PALE_TURQUOISE","CSS_PALE_VIOLET_RED","CSS_PAPAYA_WHIP","CSS_PEACH_PUFF","CSS_PERU","CSS_PINK","CSS_PLUM","CSS_POWDER_BLUE","CSS_PURPLE","CSS_REBECCAPURPLE","CSS_RED","CSS_ROSY_BROWN","CSS_ROYAL_BLUE","CSS_SADDLE_BROWN","CSS_SALMON","CSS_SANDY_BROWN","CSS_SEA_GREEN","CSS_SEASHELL","CSS_SIENNA","CSS_SILVER","CSS_SKY_BLUE","CSS_SLATE_BLUE","CSS_SLATE_GRAY","CSS_SNOW","CSS_SPRING_GREEN","CSS_STEEL_BLUE","CSS_TAN","CSS_TEAL","CSS_THISTLE","CSS_TOMATO","CSS_TURQUOISE","CSS_VIOLET","CSS_WHEAT","CSS_WHITE","CSS_WHITE_SMOKE","CSS_YELLOW","CSS_YELLOW_GREEN","PixelColor","Raw","IntoStorage","Storage","into_storage","prelude","primitives","rectangle","Points","Rectangle","top_left","size","new","with_corners","with_center","zero","center","bottom_right","contains","intersection","resized","offset","anchor_point","rows","columns","is_zero_sized","PointsIter","Iter","points","Drawable","Color","Output","draw","Pixel","0","1","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","into_iter","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","borrow","borrow_mut","try_from","from","into","try_into","type_id","az","checked_as","saturating_as","wrapping_as","overflowing_as","unwrapped_as","draw","bounding_box","luma","luma","luma","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","into_inner","from_u32","r","g","b","r","g","b","r","g","b","r","g","b","r","g","b","r","g","b","points","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","div","div","sub","sub","sub","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","eq","ne","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","add","add","add","mul","mul","neg","add_assign","add_assign","add_assign","sub_assign","sub_assign","sub_assign","mul_assign","mul_assign","div_assign","div_assign","index","index","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","try_from","try_from","try_from","next","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","new","new_equal","zero","x_axis","y_axis","abs","component_min","component_max","component_mul","component_div","new","new_equal","zero","x_axis","y_axis","saturating_add","saturating_sub","component_min","component_max","component_mul","component_div","invert","is_on","is_off","BLACK","WHITE","new","new","new","MAX_R","MAX_G","MAX_B","BLACK","RED","GREEN","BLUE","YELLOW","MAGENTA","CYAN","WHITE","new","new","new","new","new","new","CSS_ALICE_BLUE","CSS_ANTIQUE_WHITE","CSS_AQUA","CSS_AQUAMARINE","CSS_AZURE","CSS_BEIGE","CSS_BISQUE","CSS_BLACK","CSS_BLANCHED_ALMOND","CSS_BLUE","CSS_BLUE_VIOLET","CSS_BROWN","CSS_BURLY_WOOD","CSS_CADET_BLUE","CSS_CHARTREUSE","CSS_CHOCOLATE","CSS_CORAL","CSS_CORNFLOWER_BLUE","CSS_CORNSILK","CSS_CRIMSON","CSS_CYAN","CSS_DARK_BLUE","CSS_DARK_CYAN","CSS_DARK_GOLDENROD","CSS_DARK_GRAY","CSS_DARK_GREEN","CSS_DARK_KHAKI","CSS_DARK_MAGENTA","CSS_DARK_OLIVE_GREEN","CSS_DARK_ORANGE","CSS_DARK_ORCHID","CSS_DARK_RED","CSS_DARK_SALMON","CSS_DARK_SEA_GREEN","CSS_DARK_SLATE_BLUE","CSS_DARK_SLATE_GRAY","CSS_DARK_TURQUOISE","CSS_DARK_VIOLET","CSS_DEEP_PINK","CSS_DEEP_SKY_BLUE","CSS_DIM_GRAY","CSS_DODGER_BLUE","CSS_FIRE_BRICK","CSS_FLORAL_WHITE","CSS_FOREST_GREEN","CSS_FUCHSIA","CSS_GAINSBORO","CSS_GHOST_WHITE","CSS_GOLD","CSS_GOLDENROD","CSS_GRAY","CSS_GREEN","CSS_GREEN_YELLOW","CSS_HONEYDEW","CSS_HOT_PINK","CSS_INDIAN_RED","CSS_INDIGO","CSS_IVORY","CSS_KHAKI","CSS_LAVENDER","CSS_LAVENDER_BLUSH","CSS_LAWN_GREEN","CSS_LEMON_CHIFFON","CSS_LIGHT_BLUE","CSS_LIGHT_CORAL","CSS_LIGHT_CYAN","CSS_LIGHT_GOLDENROD_YELLOW","CSS_LIGHT_GRAY","CSS_LIGHT_GREEN","CSS_LIGHT_PINK","CSS_LIGHT_SALMON","CSS_LIGHT_SEA_GREEN","CSS_LIGHT_SKY_BLUE","CSS_LIGHT_SLATE_GRAY","CSS_LIGHT_STEEL_BLUE","CSS_LIGHT_YELLOW","CSS_LIME","CSS_LIME_GREEN","CSS_LINEN","CSS_MAGENTA","CSS_MAROON","CSS_MEDIUM_AQUAMARINE","CSS_MEDIUM_BLUE","CSS_MEDIUM_ORCHID","CSS_MEDIUM_PURPLE","CSS_MEDIUM_SEA_GREEN","CSS_MEDIUM_SLATE_BLUE","CSS_MEDIUM_SPRING_GREEN","CSS_MEDIUM_TURQUOISE","CSS_MEDIUM_VIOLET_RED","CSS_MIDNIGHT_BLUE","CSS_MINT_CREAM","CSS_MISTY_ROSE","CSS_MOCCASIN","CSS_NAVAJO_WHITE","CSS_NAVY","CSS_OLD_LACE","CSS_OLIVE","CSS_OLIVE_DRAB","CSS_ORANGE","CSS_ORANGE_RED","CSS_ORCHID","CSS_PALE_GOLDENROD","CSS_PALE_GREEN","CSS_PALE_TURQUOISE","CSS_PALE_VIOLET_RED","CSS_PAPAYA_WHIP","CSS_PEACH_PUFF","CSS_PERU","CSS_PINK","CSS_PLUM","CSS_POWDER_BLUE","CSS_PURPLE","CSS_REBECCAPURPLE","CSS_RED","CSS_ROSY_BROWN","CSS_ROYAL_BLUE","CSS_SADDLE_BROWN","CSS_SALMON","CSS_SANDY_BROWN","CSS_SEA_GREEN","CSS_SEASHELL","CSS_SIENNA","CSS_SILVER","CSS_SKY_BLUE","CSS_SLATE_BLUE","CSS_SLATE_GRAY","CSS_SNOW","CSS_SPRING_GREEN","CSS_STEEL_BLUE","CSS_TAN","CSS_TEAL","CSS_THISTLE","CSS_TOMATO","CSS_TURQUOISE","CSS_VIOLET","CSS_WHEAT","CSS_WHITE","CSS_WHITE_SMOKE","CSS_YELLOW","CSS_YELLOW_GREEN","empty"],"q":["embedded_graphics_core","embedded_graphics_core::draw_target","","","","","","","embedded_graphics_core","embedded_graphics_core::geometry","","","","","","","","","","","","","","","","","","","","embedded_graphics_core","embedded_graphics_core::image","","","","embedded_graphics_core","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::pixelcolorembedded_graphics_core","","embedded_graphics_core::primitives","embedded_graphics_core::primitives::rectangle","","","","","","","","","","","","","","","","","","embedded_graphics_core::primitives","","","embedded_graphics_core","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::geometry","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::primitives::rectangle","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core","embedded_graphics_core::primitives::rectangle","embedded_graphics_core::pixelcolor","","","embedded_graphics_core::pixelcolor::raw","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","","","","","","","","","","","","","embedded_graphics_core::primitives::rectangle","embedded_graphics_core","embedded_graphics_core::geometry","","","embedded_graphics_core::pixelcolor","","","","embedded_graphics_core::pixelcolor::raw","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","embedded_graphics_core::primitives::rectangle","","embedded_graphics_core::geometry","","","","","","","embedded_graphics_core","","embedded_graphics_core::geometry","","","","","embedded_graphics_core::pixelcolor","","","","","","","embedded_graphics_core::pixelcolor::raw","","","","","","","","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","","","","","","","embedded_graphics_core::primitives::rectangle","","","","embedded_graphics_core","embedded_graphics_core::geometry","","","embedded_graphics_core::pixelcolor","","","","embedded_graphics_core::pixelcolor::raw","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","embedded_graphics_core::primitives::rectangle","embedded_graphics_core","embedded_graphics_core::geometry","","","embedded_graphics_core::pixelcolor","","","","embedded_graphics_core::pixelcolor::raw","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","embedded_graphics_core::primitives::rectangle","embedded_graphics_core::geometry","","","","","","","","","","","","","","","","","","embedded_graphics_core","embedded_graphics_core::geometry","","","embedded_graphics_core::pixelcolor","","","","embedded_graphics_core::pixelcolor::raw","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","embedded_graphics_core::primitives::rectangle","","embedded_graphics_core::geometry","","","embedded_graphics_core::primitives::rectangle","embedded_graphics_core::geometry","","","","","","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","embedded_graphics_core::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::pixelcolor::raw","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","","","","","","","","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","embedded_graphics_core::pixelcolor","embedded_graphics_core::pixelcolor::raw","embedded_graphics_core","embedded_graphics_core::geometry","","","embedded_graphics_core::pixelcolor","","","","embedded_graphics_core::pixelcolor::raw","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","embedded_graphics_core::primitives::rectangle","","embedded_graphics_core","embedded_graphics_core::geometry","","embedded_graphics_core::pixelcolor","","","","embedded_graphics_core::pixelcolor::raw","","","","","","","embedded_graphics_core::pixelcolor","","","","","","embedded_graphics_core::primitives::rectangle","embedded_graphics_core::geometry","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::pixelcolor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","embedded_graphics_core::primitives::rectangle"],"d":["A target for embedded-graphics drawing operations.","A target for embedded-graphics drawing operations.","The pixel color type the targetted display supports.","Error type to return when a drawing operation fails.","Draw individual pixels to the display without a defined …","Fill a given area with an iterator providing a contiguous …","Fill a given area with a solid color.","Fill the entire display with a solid color.","Geometry module.","2D point.","The x coordinate.","The y coordinate.","2D size.","The width.","The height.","Adds the ability to get the bounding box of an item.","Returns the bounding box.","Dimensions with <code>top_left</code> of the bounding box at <code>(0, 0)</code>.","Returns the size of the bounding box.","Anchor point.","Top left.","Top center.","Top right.","Center left.","Center.","Center right.","Bottom left.","Bottom center.","Bottom right.","Image drawable trait.","Image drawable.","The color type.","Draws the entire image to the target.","Draws a part of the image to the target.","Pixel color types.","Raw color types.","Trait to convert colors into a byte array.","Return type of methods in this trait.","Converts a color into a byte array with big endian byte …","Converts a color into a byte array with little endian …","Converts a color into a byte array with native byte order.","Trait implemented by all <code>RawUx</code> types.","Storage type.","Bits per pixel.","Converts this raw data into the storage type.","Converts a <code>u32</code> into a <code>RawData</code> type.","1 bit per pixel raw data.","Creates a new color from the least significant","2 bits per pixel raw data.","Creates a new color from the least significant","4 bits per pixel raw data.","Creates a new color from the least significant","8 bits per pixel raw data.","Creates a new color from the least significant","16 bits per pixel raw data.","Creates a new color from the least significant","24 bits per pixel raw data.","Creates a new color from the least significant","32 bits per pixel raw data.","Creates a new color from the least significant","Raw data byte order.","Little endian byte order marker.","Big endian byte order marker.","Binary color.","Inactive pixel.","Active pixel.","Grayscale color.","Returns the luma channel value.","Black color (0% luma).","White color (100% luma).","2 bit grayscale color.","4 bit grayscale color.","8 bit grayscale color.","RGB color.","Returns the red channel value.","Returns the green channel value.","Returns the blue channel value.","The maximum value in the red channel.","The maximum value in the green channel.","The maximum value in the blue channel.","Black color (R: 0%, G: 0%, B: 0%)","Red color (R: 100%, G: 0%, B: 0%)","Green color (R: 0%, G: 100%, B: 0%)","Blue color (R: 0%, G: 0%, B: 100%)","Yellow color (R: 100%, G: 100%, B: 0%)","Magenta color (R: 100%, G: 0%, B: 100%)","Cyan color (R: 0%, G: 100%, B: 100%)","White color (R: 100%, G: 100%, B: 100%)","Rgb555 color.","Bgr555 color.","Rgb565 color.","Bgr565 color.","Rgb888 color.","Bgr888 color.","Named colors as defined in the CSS specification."," Alice Blue"," Antique White"," Aqua"," Aquamarine"," Azure"," Beige"," Bisque"," Black"," Blanched Almond"," Blue"," Blue Violet"," Brown"," Burly Wood"," Cadet Blue"," Chartreuse"," Chocolate"," Coral"," Cornflower Blue"," Cornsilk"," Crimson"," Cyan"," Dark Blue"," Dark Cyan"," Dark Goldenrod"," Dark Gray"," Dark Green"," Dark Khaki"," Dark Magenta"," Dark Olive Green"," Dark Orange"," Dark Orchid"," Dark Red"," Dark Salmon"," Dark Sea Green"," Dark Slate Blue"," Dark Slate Gray"," Dark Turquoise"," Dark Violet"," Deep Pink"," Deep Sky Blue"," Dim Gray"," Dodger Blue"," Fire Brick"," Floral White"," Forest Green"," Fuchsia"," Gainsboro"," Ghost White"," Gold"," Goldenrod"," Gray"," Green"," Green Yellow"," Honeydew"," Hot Pink"," Indian Red"," Indigo"," Ivory"," Khaki"," Lavender"," Lavender Blush"," Lawn Green"," Lemon Chiffon"," Light Blue"," Light Coral"," Light Cyan"," Light Goldenrod Yellow"," Light Gray"," Light Green"," Light Pink"," Light Salmon"," Light Sea Green"," Light Sky Blue"," Light Slate Gray"," Light Steel Blue"," Light Yellow"," Lime"," Lime Green"," Linen"," Magenta"," Maroon"," Medium Aquamarine"," Medium Blue"," Medium Orchid"," Medium Purple"," Medium Sea Green"," Medium Slate Blue"," Medium Spring Green"," Medium Turquoise"," Medium Violet Red"," Midnight Blue"," Mint Cream"," Misty Rose"," Moccasin"," Navajo White"," Navy"," Old Lace"," Olive"," Olive Drab"," Orange"," Orange Red"," Orchid"," Pale Goldenrod"," Pale Green"," Pale Turquoise"," Pale Violet Red"," Papaya Whip"," Peach Puff"," Peru"," Pink"," Plum"," Powder Blue"," Purple"," Rebeccapurple"," Red"," Rosy Brown"," Royal Blue"," Saddle Brown"," Salmon"," Sandy Brown"," Sea Green"," Seashell"," Sienna"," Silver"," Sky Blue"," Slate Blue"," Slate Gray"," Snow"," Spring Green"," Steel Blue"," Tan"," Teal"," Thistle"," Tomato"," Turquoise"," Violet"," Wheat"," White"," White Smoke"," Yellow"," Yellow Green","Pixel color trait.","Raw data type.","Convert a <code>PixelColor</code> into its underlying storage type","The underlying storage type for the pixel color","Convert the <code>PixelColor</code> into its raw storage form","Prelude","Core primitives.","The rectangle primitive.","Iterator over all points inside the rectangle.","Rectangle primitive","Top left point of the rectangle.","Size of the rectangle.","Creates a new rectangle from the top left point and the …","Creates a new rectangle from two corners.","Creates a new rectangle from the center point and the …","Returns a zero sized rectangle.","Returns the center of this rectangle.","Returns the bottom right corner of this rectangle.","Return whether the rectangle contains a given point.","Returns a new <code>Rectangle</code> containing the intersection of …","Returns a resized copy of this rectangle.","Offset the rectangle by a given value.","Returns an anchor point.","Returns the range of Y coordinates in this rectangle.","Returns the range of X coordinates in this rectangle.","Returns <code>true</code> is the rectangle is zero sized.","Create an iterator over all points in the primitive.","Iterator over all points inside the primitive.","Returns an iterator over all points inside the primitive.","Marks an object as “drawable”. Must be implemented …","The pixel color type.","The return type of the <code>draw</code> method.","Draw the graphics object using the supplied DrawTarget.","A single pixelffsets a point by subtracting a size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Offsets a point by adding a size.","","","","","","Offsets a point by adding a size.","","","Offsets a point by subtracting a sizereates a point from  X and Y coordinates.","Creates a point with X and Y values set to an equal value.","Creates a point with X and Y equal to zero.","Returns a point with equal <code>x</code> value and <code>y</code> set to <code>0</code>.","Returns a point with equal <code>y</code> value and <code>x</code> set to <code>0</code>.","Remove the sign from a coordinate","Returns the componentwise minimum of two <code>Point</code>s","Returns the componentwise maximum of two <code>Point</code>s","Returns the componentwise multiplication of two <code>Point</code>s.","Returns the componentwise division of two <code>Points</code>s.","Creates a size from a width and a height.","Creates a size with width and height set to an equal …","Creates a size with width and height equal to zero.","Returns a size with equal <code>width</code> value and <code>height</code> set to <code>0</code>.","Returns a size with equal <code>height</code> value and <code>width</code> set to <code>0</code>.","Saturating addition.","Saturating subtraction.","Returns the componentwise minimum of two <code>Size</code>s.","Returns the componentwise maximum of two <code>Size</code>s.","Returns the componentwise multiplication of two <code>Size</code>s.","Returns the componentwise division of two <code>Size</code>s.","Inverts the color.","Returns <code>true</code> if this color is <code>On</code>.","Returns <code>true</code> if this color is <code>Off</code>.","Black color (0% luma).","White color (100% luma).","Creates a new grayscale color.","Creates a new grayscale color.","Creates a new grayscale color.","The maximum value in the red channel.","The maximum value in the green channel.","The maximum value in the blue channel.","Black color (R: 0%, G: 0%, B: 0%)","Red color (R: 100%, G: 0%, B: 0%)","Green color (R: 0%, G: 100%, B: 0%)","Blue color (R: 0%, G: 0%, B: 100%)","Yellow color (R: 100%, G: 100%, B: 0%)","Magenta color (R: 100%, G: 0%, B: 100%)","Cyan color (R: 0%, G: 100%, B: 100%)","White color (R: 100%, G: 100%, B: 100%)","Creates a new Rgb555 color. Too large channel values will …","Creates a new Bgr555 color. Too large channel values will …","Creates a new Rgb565 color. Too large channel values will …","Creates a new Bgr565 color. Too large channel values will …","Creates a new Rgb888 color. Too large channel values will …","Creates a new Bgr888 color. Too large channel values will …"," Alice Blue"," Antique White"," Aqua"," Aquamarine"," Azure"," Beige"," Bisque"," Black"," Blanched Almond"," Blue"," Blue Violet"," Brown"," Burly Wood"," Cadet Blue"," Chartreuse"," Chocolate"," Coral"," Cornflower Blue"," Cornsilk"," Crimson"," Cyan"," Dark Blue"," Dark Cyan"," Dark Goldenrod"," Dark Gray"," Dark Green"," Dark Khaki"," Dark Magenta"," Dark Olive Green"," Dark Orange"," Dark Orchid"," Dark Red"," Dark Salmon"," Dark Sea Green"," Dark Slate Blue"," Dark Slate Gray"," Dark Turquoise"," Dark Violet"," Deep Pink"," Deep Sky Blue"," Dim Gray"," Dodger Blue"," Fire Brick"," Floral White"," Forest Green"," Fuchsia"," Gainsboro"," Ghost White"," Gold"," Goldenrod"," Gray"," Green"," Green Yellow"," Honeydew"," Hot Pink"," Indian Red"," Indigo"," Ivory"," Khaki"," Lavender"," Lavender Blush"," Lawn Green"," Lemon Chiffon"," Light Blue"," Light Coral"," Light Cyan"," Light Goldenrod Yellow"," Light Gray"," Light Green"," Light Pink"," Light Salmon"," Light Sea Green"," Light Sky Blue"," Light Slate Gray"," Light Steel Blue"," Light Yellow"," Lime"," Lime Green"," Linen"," Magenta"," Maroon"," Medium Aquamarine"," Medium Blue"," Medium Orchid"," Medium Purple"," Medium Sea Green"," Medium Slate Blue"," Medium Spring Green"," Medium Turquoise"," Medium Violet Red"," Midnight Blue"," Mint Cream"," Misty Rose"," Moccasin"," Navajo White"," Navy"," Old Lace"," Olive"," Olive Drab"," Orange"," Orange Red"," Orchid"," Pale Goldenrod"," Pale Green"," Pale Turquoise"," Pale Violet Red"," Papaya Whip"," Peach Puff"," Peru"," Pink"," Plum"," Powder Blue"," Purple"," Rebeccapurple"," Red"," Rosy Brown"," Royal Blue"," Saddle Brown"," Salmon"," Sandy Brown"," Sea Green"," Seashell"," Sienna"," Silver"," Sky Blue"," Slate Blue"," Slate Gray"," Snow"," Spring Green"," Steel Blue"," Tan"," Teal"," Thistle"," Tomato"," Turquoise"," Violet"," Wheat"," White"," White Smoke"," Yellow"," Yellow Green","Create a points iterator that returns no items."],"i":[0,0,1,1,1,1,1,1,0,0,2,2,0,3,3,0,4,0,5,0,6,6,6,6,6,6,6,6,6,0,0,7,7,7,0,0,0,8,8,8,8,0,9,9,9,9,0,10,0,11,0,12,0,13,0,14,0,15,0,16,0,0,0,0,17,17,0,18,18,18,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,0,22,22,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,24,24,0,25,25,25,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6,6,6,6,6,6,17,17,17,17,17,17,17,17,17,17,17,17,17,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,23,23,23,23,23,23,23,23,23,23,23,23,23,26,23,27,28,29,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,16,16,16,15,15,15,10,10,11,11,12,12,13,13,14,14,15,15,16,16,32,32,32,33,33,33,34,34,34,35,35,35,36,36,36,37,37,37,23,26,2,3,6,17,27,28,29,10,11,12,13,14,15,16,30,31,32,33,34,35,36,37,38,23,2,3,2,3,2,2,3,26,26,2,2,3,3,6,17,27,27,28,28,29,29,10,10,11,11,12,12,13,13,14,14,15,15,16,16,30,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,23,23,26,2,3,6,17,27,28,29,10,11,12,13,14,15,16,30,31,32,33,34,35,36,37,23,26,2,3,6,17,27,28,29,10,11,12,13,14,15,16,30,31,32,33,34,35,36,37,23,2,2,3,2,3,2,2,2,3,2,2,3,2,3,2,3,2,3,26,2,3,6,17,27,28,29,10,11,12,13,14,15,16,30,31,32,33,34,35,36,37,38,23,2,2,2,38,2,2,2,3,3,3,17,10,17,33,34,35,36,37,32,34,35,36,37,32,33,35,36,37,32,33,34,36,37,32,33,34,35,37,32,33,34,35,36,28,29,27,29,27,28,32,32,32,27,28,29,33,33,33,27,28,29,34,34,34,27,28,29,35,35,35,27,28,29,36,36,36,27,28,29,37,37,37,27,28,29,32,33,34,35,36,37,27,28,29,17,17,17,17,17,17,17,17,17,27,11,28,12,29,13,10,11,12,13,14,15,16,32,14,33,14,34,14,35,14,36,15,37,15,26,2,3,6,17,27,28,29,10,11,12,13,14,15,16,30,31,32,33,34,35,36,37,38,23,26,2,3,17,27,28,29,10,11,12,13,14,15,16,32,33,34,35,36,37,23,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,17,17,17,18,18,27,28,29,19,19,19,19,19,19,19,19,19,19,19,32,33,34,35,36,37,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,38],"f":[null,null,null,null,[[],["result",4]],[[["rectangle",3]],["result",4]],[[["rectangle",3]],["result",4]],[[],["result",4]],null,null,null,null,null,null,null,null,[[],["rectangle",3]],null,[[],["size",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[["rectangle",3]],["result",4]],null,null,null,null,[[]],[[]],[[]],null,null,null,[[]],[[["u32",15]]],null,[[["u8",15]]],null,[[["u8",15]]],null,[[["u8",15]]],null,[[["u8",15]]],null,[[["u16",15]]],null,[[["u32",15]]],null,[[["u32",15]]],null,null,null,null,null,null,null,[[],["u8",15]],null,null,null,null,null,null,[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],null,null,null,null,null,null,null,[[["point",3],["size",3]]],[[["point",3]]],[[["point",3],["size",3]]],[[],["rectangle",3]],[[],["point",3]],[[],[["point",3],["option",4]]],[[["point",3]],["bool",15]],[[["rectangle",3]],["rectangle",3]],[[["anchorpoint",4],["size",3]]],[[["i32",15]]],[[["anchorpoint",4]],["point",3]],[[],[["range",3],["i32",15]]],[[],[["range",3],["i32",15]]],[[],["bool",15]],null,null,[[]],null,null,null,[[],["result",4]],null,null,null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["rectangle",3]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[]],[[["u32",15]]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[],["u8",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["i32",15]],["point",3]],[[["u32",15]],["size",3]],[[["point",3]],["point",3]],[[["size",3]],["point",3]],[[["size",3]],["size",3]],[[["pixel",3]],["bool",15]],[[["pixel",3]],["bool",15]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[["size",3]],["bool",15]],[[["size",3]],["bool",15]],[[["anchorpoint",4]],["bool",15]],[[["binarycolor",4]],["bool",15]],[[["gray2",3]],["bool",15]],[[["gray2",3]],["bool",15]],[[["gray4",3]],["bool",15]],[[["gray4",3]],["bool",15]],[[["gray8",3]],["bool",15]],[[["gray8",3]],["bool",15]],[[["rawu1",3]],["bool",15]],[[["rawu1",3]],["bool",15]],[[["rawu2",3]],["bool",15]],[[["rawu2",3]],["bool",15]],[[["rawu4",3]],["bool",15]],[[["rawu4",3]],["bool",15]],[[["rawu8",3]],["bool",15]],[[["rawu8",3]],["bool",15]],[[["rawu16",3]],["bool",15]],[[["rawu16",3]],["bool",15]],[[["rawu24",3]],["bool",15]],[[["rawu24",3]],["bool",15]],[[["rawu32",3]],["bool",15]],[[["rawu32",3]],["bool",15]],[[["littleendian",4]],["bool",15]],[[["bigendian",4]],["bool",15]],[[["rgb555",3]],["bool",15]],[[["rgb555",3]],["bool",15]],[[["bgr555",3]],["bool",15]],[[["bgr555",3]],["bool",15]],[[["rgb565",3]],["bool",15]],[[["rgb565",3]],["bool",15]],[[["bgr565",3]],["bool",15]],[[["bgr565",3]],["bool",15]],[[["rgb888",3]],["bool",15]],[[["rgb888",3]],["bool",15]],[[["bgr888",3]],["bool",15]],[[["bgr888",3]],["bool",15]],[[["points",3]],["bool",15]],[[["points",3]],["bool",15]],[[["rectangle",3]],["bool",15]],[[["rectangle",3]],["bool",15]],[[["pixel",3]],["ordering",4]],[[["point",3]],["ordering",4]],[[["size",3]],["ordering",4]],[[["anchorpoint",4]],["ordering",4]],[[["binarycolor",4]],["ordering",4]],[[["gray2",3]],["ordering",4]],[[["gray4",3]],["ordering",4]],[[["gray8",3]],["ordering",4]],[[["rawu1",3]],["ordering",4]],[[["rawu2",3]],["ordering",4]],[[["rawu4",3]],["ordering",4]],[[["rawu8",3]],["ordering",4]],[[["rawu16",3]],["ordering",4]],[[["rawu24",3]],["ordering",4]],[[["rawu32",3]],["ordering",4]],[[["littleendian",4]],["ordering",4]],[[["bigendian",4]],["ordering",4]],[[["rgb555",3]],["ordering",4]],[[["bgr555",3]],["ordering",4]],[[["rgb565",3]],["ordering",4]],[[["bgr565",3]],["ordering",4]],[[["rgb888",3]],["ordering",4]],[[["bgr888",3]],["ordering",4]],[[["rectangle",3]],["ordering",4]],[[["pixel",3]],[["ordering",4],["option",4]]],[[["point",3]],[["ordering",4],["option",4]]],[[["size",3]],[["ordering",4],["option",4]]],[[["anchorpoint",4]],[["ordering",4],["option",4]]],[[["binarycolor",4]],[["ordering",4],["option",4]]],[[["gray2",3]],[["ordering",4],["option",4]]],[[["gray4",3]],[["ordering",4],["option",4]]],[[["gray8",3]],[["ordering",4],["option",4]]],[[["rawu1",3]],[["ordering",4],["option",4]]],[[["rawu2",3]],[["ordering",4],["option",4]]],[[["rawu4",3]],[["ordering",4],["option",4]]],[[["rawu8",3]],[["ordering",4],["option",4]]],[[["rawu16",3]],[["ordering",4],["option",4]]],[[["rawu24",3]],[["ordering",4],["option",4]]],[[["rawu32",3]],[["ordering",4],["option",4]]],[[["littleendian",4]],[["ordering",4],["option",4]]],[[["bigendian",4]],[["ordering",4],["option",4]]],[[["rgb555",3]],[["ordering",4],["option",4]]],[[["bgr555",3]],[["ordering",4],["option",4]]],[[["rgb565",3]],[["ordering",4],["option",4]]],[[["bgr565",3]],[["ordering",4],["option",4]]],[[["rgb888",3]],[["ordering",4],["option",4]]],[[["bgr888",3]],[["ordering",4],["option",4]]],[[["rectangle",3]],[["ordering",4],["option",4]]],[[["point",3]],["point",3]],[[["size",3]],["point",3]],[[["size",3]],["size",3]],[[["i32",15]],["point",3]],[[["u32",15]],["size",3]],[[]],[[["point",3]]],[[["size",3]]],[[["size",3]]],[[["point",3]]],[[["size",3]]],[[["size",3]]],[[["i32",15]]],[[["u32",15]]],[[["i32",15]]],[[["u32",15]]],[[["usize",15]],["i32",15]],[[["usize",15]],["u32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["rawu1",3]]],[[["binarycolor",4]]],[[["bool",15]]],[[["rgb555",3]]],[[["rgb555",3]]],[[["rgb555",3]]],[[["rgb555",3]]],[[["rgb555",3]]],[[["bgr555",3]]],[[["bgr555",3]]],[[["bgr555",3]]],[[["bgr555",3]]],[[["bgr555",3]]],[[["rgb565",3]]],[[["rgb565",3]]],[[["rgb565",3]]],[[["rgb565",3]]],[[["rgb565",3]]],[[["bgr565",3]]],[[["bgr565",3]]],[[["bgr565",3]]],[[["bgr565",3]]],[[["bgr565",3]]],[[["rgb888",3]]],[[["rgb888",3]]],[[["rgb888",3]]],[[["rgb888",3]]],[[["rgb888",3]]],[[["bgr888",3]]],[[["bgr888",3]]],[[["bgr888",3]]],[[["bgr888",3]]],[[["bgr888",3]]],[[["gray2",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["gray8",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["rgb555",3]]],[[["rgb555",3]]],[[["rgb555",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["bgr555",3]]],[[["bgr555",3]]],[[["bgr555",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["rgb565",3]]],[[["rgb565",3]]],[[["rgb565",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["bgr565",3]]],[[["bgr565",3]]],[[["bgr565",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["rgb888",3]]],[[["rgb888",3]]],[[["rgb888",3]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["bgr888",3]]],[[["bgr888",3]]],[[["bgr888",3]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["binarycolor",4]]],[[["gray2",3]]],[[["gray4",3]]],[[["gray8",3]]],[[["rgb555",3]]],[[["bgr555",3]]],[[["rgb565",3]]],[[["bgr565",3]]],[[["rgb888",3]]],[[["bgr888",3]]],[[["rawu2",3]]],[[["gray2",3]]],[[["rawu4",3]]],[[["gray4",3]]],[[["rawu8",3]]],[[["gray8",3]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u16",15]]],[[["u32",15]]],[[["u32",15]]],[[["rawu16",3]]],[[["rgb555",3]]],[[["rawu16",3]]],[[["bgr555",3]]],[[["rawu16",3]]],[[["rgb565",3]]],[[["rawu16",3]]],[[["bgr565",3]]],[[["rawu24",3]]],[[["rgb888",3]]],[[["rawu24",3]]],[[["bgr888",3]]],[[],["pixel",3]],[[],["point",3]],[[],["size",3]],[[],["anchorpoint",4]],[[],["binarycolor",4]],[[],["gray2",3]],[[],["gray4",3]],[[],["gray8",3]],[[],["rawu1",3]],[[],["rawu2",3]],[[],["rawu4",3]],[[],["rawu8",3]],[[],["rawu16",3]],[[],["rawu24",3]],[[],["rawu32",3]],[[],["littleendian",4]],[[],["bigendian",4]],[[],["rgb555",3]],[[],["bgr555",3]],[[],["rgb565",3]],[[],["bgr565",3]],[[],["rgb888",3]],[[],["bgr888",3]],[[],["points",3]],[[],["rectangle",3]],[[],["pixel",3]],[[],["point",3]],[[],["size",3]],[[]],[[],["gray2",3]],[[],["gray4",3]],[[],["gray8",3]],[[],["rawu1",3]],[[],["rawu2",3]],[[],["rawu4",3]],[[],["rawu8",3]],[[],["rawu16",3]],[[],["rawu24",3]],[[],["rawu32",3]],[[],["rgb555",3]],[[],["bgr555",3]],[[],["rgb565",3]],[[],["bgr565",3]],[[],["rgb888",3]],[[],["bgr888",3]],[[],["rectangle",3]],[[["i32",15]]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],null,null,[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],[[["u8",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]]],"p":[[8,"DrawTarget"],[3,"Point"],[3,"Size"],[8,"Dimensions"],[8,"OriginDimensions"],[4,"AnchorPoint"],[8,"ImageDrawable"],[8,"ToBytes"],[8,"RawData"],[3,"RawU1"],[3,"RawU2"],[3,"RawU4"],[3,"RawU8"],[3,"RawU16"],[3,"RawU24"],[3,"RawU32"],[4,"BinaryColor"],[8,"GrayColor"],[8,"RgbColor"],[8,"WebColors"],[8,"PixelColor"],[8,"IntoStorage"],[3,"Rectangle"],[8,"PointsIter"],[8,"Drawable"],[3,"Pixel"],[3,"Gray2"],[3,"Gray4"],[3,"Gray8"],[4,"LittleEndian"],[4,"BigEndian"],[3,"Rgb555"],[3,"Bgr555"],[3,"Rgb565"],[3,"Bgr565"],[3,"Rgb888"],[3,"Bgr888"],[3,"Points"]]},\
"float_cmp":{"doc":"float-cmp","t":[8,16,10,10,10,8,16,10,11,8,16,10,11,3,12,12,3,12,12,8,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Ulps","U","ulps","next","prev","ApproxEqUlps","Flt","approx_eq_ulps","approx_ne_ulps","ApproxEq","Margin","approx_eq","approx_ne","F32Margin","epsilon","ulps","F64Margin","epsilon","ulps","ApproxEqRatio","approx_eq_ratio","approx_ne_ratio","approx_eq","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","fmt","from","from","clone","clone","default","default","approx_ne_ulps","approx_ne","zero","epsilon","ulps","zero","epsilon","ulps","approx_eq_ratio","approx_ne_ratio"],"q":["float_cmp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","The number of representable values or ULPs (Units of …","The next representable number above this one","The previous representable number below this one","ApproxEqUlps is a trait for approximate equality …","","This method tests for <code>self</code> and <code>other</code> values to be …","This method tests for <code>self</code> and <code>other</code> values to be not …","A trait for approximate equality comparisons.","This type type defines a margin within which two values …","This method tests that the <code>self</code> and <code>other</code> values are …","This method tests that the <code>self</code> and <code>other</code> values are not …","This type defines a margin within two <code>f32</code> values might be …","","","This type defines a margin within two <code>f64</code> values might be …","","","ApproxEqRatio is a trait for approximate equality …","This method tests if <code>self</code> and <code>other</code> are nearly equal by …","This method tests if <code>self</code> and <code>other</code> are not nearly equal …","","","","","","","","","","","","","","","","","","","","","","","","This method tests for <code>self</code> and <code>other</code> values to be not …","This method tests that the <code>self</code> and <code>other</code> values are not …","","","","","","","This method tests if <code>self</code> and <code>other</code> are nearly equal by …","This method tests if <code>self</code> and <code>other</code> are not nearly equal …"],"i":[0,1,1,1,1,0,2,2,2,0,3,3,3,0,4,4,0,5,5,0,6,6,0,4,4,4,4,4,4,4,5,5,5,5,5,5,5,4,5,4,5,4,5,4,5,2,3,4,4,4,5,5,5,6,6],"f":[null,null,[[]],[[]],[[]],null,null,[[],["bool",15]],[[],["bool",15]],null,null,[[["into",8]],["bool",15]],[[["into",8]],["bool",15]],null,null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],null,[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["f32margin",3]],[[],["f64margin",3]],[[],["f32margin",3]],[[],["f64margin",3]],[[],["f32margin",3]],[[],["f64margin",3]],[[],["bool",15]],[[["into",8]],["bool",15]],[[],["f32margin",3]],[[["f32",15]]],[[["i32",15]]],[[],["f64margin",3]],[[["f64",15]]],[[["i64",15]]],[[],["bool",15]],[[],["bool",15]]],"p":[[8,"Ulps"],[8,"ApproxEqUlps"],[8,"ApproxEq"],[3,"F32Margin"],[3,"F64Margin"],[8,"ApproxEqRatio"]]},\
"micromath":{"doc":"Embedded-friendly (i.e. <code>#![no_std]</code>) math library …","t":[8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10],"n":["F32Ext","abs","asin","acos","atan","atan_norm","atan2","atan2_norm","ceil","cos","div_euclid","floor","hypot","inv","invsqrt","rem_euclid","sin","sqrt","tan","trunc","round","fract","copysign","ln","exp","log","log2","log10","powf","powi"],"q":["micromath","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["<code>f32</code> extension providing various arithmetic approximations …","Compute absolute value with a constant-time, …","Approximate <code>asin(x)</code> in radians in the range <code>[-pi/2, pi/2]</code>.","Approximate <code>acos(x)</code> in radians in the range <code>[0, pi]</code>","Approximate <code>atan(x)</code> in radians with a maximum error of …","Approximate <code>atan(x)</code> normalized to the <code>[−1,1]</code> range with …","Approximate the four quadrant arctangent <code>atan2(x)</code> in …","Approximate the four quadrant arctangent. Normalized to …","Approximate floating point ceiling.","Approximate cosine in radians with a maximum error of …","Calculates Euclidean division, the matching method for …","Approximate floating point floor.","Approximate the length of the hypotenuse of a right-angle …","Approximate <code>1/x</code> with an average deviation of ~8%.","Approximate inverse square root with an average deviation …","Calculates the least nonnegative remainder of …","Approximate sine in radians with a maximum error of <code>0.002</code>.","Approximate square root with an average deviation of ~5%.","Approximate <code>tan(x)</code> in radians with a maximum error of <code>0.6</code>.","Retrieve whole number part of floating point with sign.","Round the number part of floating point with sign.","Retrieve the fractional part of floating point with sign.","Copies the sign from one number to another and returns it.","Approximate <code>ln(x)</code>.","Approximate <code>e^x</code>.","Approximate <code>log</code> with an arbitrary base.","Approximate <code>log2</code>.","Approximate <code>log10</code>.","Approximate <code>self^n</code>.","Approximate <code>self^n</code> where n is an <code>i32</code>"],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[["f32",15]],["f32",15]],[[["f32",15]],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[["f32",15]],["f32",15]],[[],["f32",15]],[[["f32",15]],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[["f32",15]],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[["f32",15]],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[["f32",15]],["f32",15]],[[],["f32",15]],[[],["f32",15]],[[["f32",15]],["f32",15]],[[["i32",15]],["f32",15]]],"p":[[8,"F32Ext"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":[0,8,10,10,0,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,8,11,11,11,11,10,11,11,11,11,11,10,11,11,11,5,8,10,8,10,0,8,10,10,10,10,10,10,10,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,0,8,10,11,10,8,10,11,11,5,5,0,8,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,8,10,8,10,8,10,8,10,8,10,8,10,8,10,8,10,0,8,16,10,0,8,16,10,8,10,0,8,10,8,10,8,10,0,8,10,10,8,10,8,10,8,10,0,8,10,8,10,8,10,8,10,8,10,8,10,0,8,16,10,5,5,0,8,10,10,10,10,10,5,5,5,8,8,16,10,8,8,8,8,8,8,4,13,13,3,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["bounds","Bounded","min_value","max_value","cast","ToPrimitive","to_isize","to_i8","to_i16","to_i32","to_i64","to_i128","to_usize","to_u8","to_u16","to_u32","to_u64","to_u128","to_f32","to_f64","FromPrimitive","from_isize","from_i8","from_i16","from_i32","from_i64","from_i128","from_usize","from_u8","from_u16","from_u32","from_u64","from_u128","from_f32","from_f64","cast","NumCast","from","AsPrimitive","as_","float","FloatCore","infinity","neg_infinity","nan","neg_zero","min_value","min_positive_value","epsilon","max_value","is_nan","is_infinite","is_finite","is_normal","classify","floor","ceil","round","trunc","fract","abs","signum","is_sign_positive","is_sign_negative","min","max","recip","powi","to_degrees","to_radians","integer_decode","FloatConst","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","LN_10","LN_2","LOG10_E","LOG2_E","PI","SQRT_2","TAU","LOG10_2","LOG2_10","identities","Zero","zero","set_zero","is_zero","One","one","set_one","is_one","zero","one","int","PrimInt","count_ones","count_zeros","leading_zeros","trailing_zeros","rotate_left","rotate_right","signed_shl","signed_shr","unsigned_shl","unsigned_shr","swap_bytes","from_be","from_le","to_be","to_le","pow","ops","checked","CheckedAdd","checked_add","CheckedSub","checked_sub","CheckedMul","checked_mul","CheckedDiv","checked_div","CheckedRem","checked_rem","CheckedNeg","checked_neg","CheckedShl","checked_shl","CheckedShr","checked_shr","inv","Inv","Output","inv","mul_add","MulAdd","Output","mul_add","MulAddAssign","mul_add_assign","overflowing","OverflowingAdd","overflowing_add","OverflowingSub","overflowing_sub","OverflowingMul","overflowing_mul","saturating","Saturating","saturating_add","saturating_sub","SaturatingAdd","saturating_add","SaturatingSub","saturating_sub","SaturatingMul","saturating_mul","wrapping","WrappingAdd","wrapping_add","WrappingSub","wrapping_sub","WrappingMul","wrapping_mul","WrappingNeg","wrapping_neg","WrappingShl","wrapping_shl","WrappingShr","wrapping_shr","pow","Pow","Output","pow","pow","checked_pow","sign","Signed","abs","abs_sub","signum","is_positive","is_negative","abs","abs_sub","signum","Unsigned","Num","FromStrRadixErr","from_str_radix","NumOps","NumRef","RefNum","NumAssignOps","NumAssign","NumAssignRef","FloatErrorKind","Empty","Invalid","ParseFloatError","kind","clamp","clamp_min","clamp_max","borrow","borrow_mut","try_from","from","into","try_into","type_id","borrow","borrow_mut","try_from","from","into","try_into","type_id","fmt","fmt","fmt"],"q":["num_traits","num_traits::bounds","","","num_traits","num_traits::cast","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits","num_traits::float","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","num_traits","num_traits::identities","","","","","","","","","","num_traits","num_traits::int","","","","","","","","","","","","","","","","","num_traits","num_traits::ops","num_traits::ops::checked","","","","","","","","","","","","","","","","num_traits::ops","num_traits::ops::inv","","","num_traits::ops","num_traits::ops::mul_add","","","","","num_traits::ops","num_traits::ops::overflowing","","","","","","num_traits::ops","num_traits::ops::saturating","","","","","","","","","num_traits::ops","num_traits::ops::wrapping","","","","","","","","","","","","num_traits","num_traits::pow","","","","","num_traits","num_traits::sign","","","","","","","","","","num_traits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Numbers which have upper and lower bounds","returns the smallest finite number this type can represent","returns the largest finite number this type can represent","","A generic trait for converting a value to a number.","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i128</code>. If the value …","Converts the value of <code>self</code> to a <code>usize</code>. If the value …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be…","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map …","A generic trait for converting a number to a value.","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this …","Converts a <code>usize</code> to return an optional value of this …","Converts an <code>u8</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u128</code> to return an optional value of this …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Cast from one machine scalar to another.","An interface for casting between machine scalars.","Creates a number from another value that can be converted …","A generic interface for casting between machine scalars …","Convert a value to another, using the <code>as</code> operator.","","Generic trait for floating point numbers that works with …","Returns positive infinity.","Returns negative infinity.","Returns NaN.","Returns <code>-0.0</code>.","Returns the smallest finite value that this type can …","Returns the smallest positive, normalized value that this …","Returns epsilon, a small positive value.","Returns the largest finite value that this type can …","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the floating point category of the number. If …","Returns the largest integer less than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the nearest integer to a number. Round half-way …","Return the integer part of a number.","Returns the fractional part of a number.","Computes the absolute value of <code>self</code>. Returns …","Returns a number that represents the sign of <code>self</code>.","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns the minimum of the two numbers.","Returns the maximum of the two numbers.","Returns the reciprocal (multiplicative inverse) of the …","Raise a number to an integer power.","Converts to degrees, assuming the number is in radians.","Converts to radians, assuming the number is in degrees.","Returns the mantissa, base 2 exponent, and sign as …","","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Return <code>log10(2.0)</code>.","Return <code>log2(10.0)</code>.","","Defines an additive identity element for <code>Self</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Defines a multiplicative identity element for <code>Self</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns the additive identity, <code>0</code>.","Returns the multiplicative identity, <code>1</code>.","","Generic trait for primitive integers.","Returns the number of ones in the binary representation …","Returns the number of zeros in the binary representation …","Returns the number of leading zeros in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Raises self to the power of <code>exp</code>, using exponentiation by …","","","Performs addition that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Performs subtraction that returns <code>None</code> instead of …","Subtracts two numbers, checking for underflow. If …","Performs multiplication that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Performs division that returns <code>None</code> instead of panicking …","Divides two numbers, checking for underflow, overflow and …","Performs an integral remainder that returns <code>None</code> instead …","Finds the remainder of dividing two numbers, checking for …","Performs negation that returns <code>None</code> if the result can’t …","Negates a number, returning <code>None</code> for results that can’t …","Performs a left shift that returns <code>None</code> on shifts larger …","Checked shift left. Computes <code>self << rhs</code>, returning <code>None</code> …","Performs a right shift that returns <code>None</code> on shifts larger …","Checked shift right. Computes <code>self >> rhs</code>, returning <code>None</code> …","","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation.","The fused multiply-add assignment operation.","Performs the fused multiply-add operation.","","Performs addition with a flag for overflow.","Returns a tuple of the sum along with a boolean …","Performs substraction with a flag for overflow.","Returns a tuple of the difference along with a boolean …","Performs multiplication with a flag for overflow.","Returns a tuple of the product along with a boolean …","","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>…","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Performs addition that saturates at the numeric bounds …","Saturating addition. Computes <code>self + other</code>, saturating at …","Performs subtraction that saturates at the numeric bounds …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs multiplication that saturates at the numeric …","Saturating multiplication. Computes <code>self * other</code>, …","","Performs addition that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Performs subtraction that wraps around on overflow.","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Performs multiplication that wraps around on overflow.","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Performs a negation that does not panic.","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Performs a left shift that does not panic.","Panic-free bitwise shift-left; yields <code>self << mask(rhs)</code>, …","Performs a right shift that does not panic.","Panic-free bitwise shift-right; yields <code>self >> mask(rhs)</code>, …","","Binary operator for raising a value to a power.","The result after applying the operator.","Returns <code>self</code> to the power <code>rhs</code>.","Raises a value to the power of exp, using exponentiation …","Raises a value to the power of exp, returning <code>None</code> if an …","","Useful functions for signed numbers (i.e. numbers that …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","Returns true if the number is positive and false if the …","Returns true if the number is negative and false if the …","Computes the absolute value.","The positive difference of two numbers.","Returns the sign of the number.","A trait for values which cannot be negative","The base trait for numeric types, covering <code>0</code> and <code>1</code> values,…","","Convert from a string and radix (typically <code>2..=36</code>).","The trait for types implementing basic numeric operations","The trait for <code>Num</code> types which also implement numeric …","The trait for references which implement numeric …","The trait for types implementing numeric assignment …","The trait for <code>Num</code> types which also implement assignment …","The trait for <code>NumAssign</code> types which also implement …","","","","","","A value bounded by a minimum and a maximum","A value bounded by a minimum value","A value bounded by a maximum value","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,4,0,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,8,8,8,0,9,9,9,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,0,11,0,12,0,13,0,14,0,15,0,16,0,17,0,18,0,0,19,19,0,0,20,20,0,21,0,0,22,0,23,0,24,0,0,25,25,0,26,0,27,0,28,0,0,29,0,30,0,31,0,32,0,33,0,34,0,0,35,35,0,0,0,0,36,36,36,36,36,0,0,0,0,0,37,37,0,0,0,0,0,0,0,38,38,0,39,0,0,0,38,38,38,38,38,38,38,39,39,39,39,39,39,39,38,39,39],"f":[null,null,[[]],[[]],null,null,[[],[["option",4],["isize",15]]],[[],[["option",4],["i8",15]]],[[],[["i16",15],["option",4]]],[[],[["i32",15],["option",4]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["usize",15],["option",4]]],[[],[["u8",15],["option",4]]],[[],[["u16",15],["option",4]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["option",4],["f64",15]]],null,[[["isize",15]],["option",4]],[[["i8",15]],["option",4]],[[["i16",15]],["option",4]],[[["i32",15]],["option",4]],[[["i64",15]],["option",4]],[[["i128",15]],["option",4]],[[["usize",15]],["option",4]],[[["u8",15]],["option",4]],[[["u16",15]],["option",4]],[[["u32",15]],["option",4]],[[["u64",15]],["option",4]],[[["u128",15]],["option",4]],[[["f32",15]],["option",4]],[[["f64",15]],["option",4]],[[["numcast",8]],[["numcast",8],["option",4]]],null,[[["toprimitive",8]],["option",4]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["fpcategory",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[["i32",15]]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[],["bool",15]],null,[[]],[[]],[[],["bool",15]],[[],["zero",8]],[[],["one",8]],null,null,[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[["u32",15]]],[[]],[[]],[[]],[[]],[[]],[[["u32",15]]],null,null,null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[],["option",4]],null,[[["u32",15]],["option",4]],null,[[["u32",15]],["option",4]],null,null,null,[[]],null,null,null,[[]],null,[[]],null,null,[[]],null,[[]],null,[[]],null,null,[[]],[[]],null,[[]],null,[[]],null,[[]],null,null,[[]],null,[[]],null,[[]],null,[[]],null,[[["u32",15]]],null,[[["u32",15]]],null,null,null,[[]],[[["usize",15],["one",8],["mul",8],["clone",8]],[["mul",8],["clone",8],["one",8]]],[[["usize",15],["one",8],["checkedmul",8],["clone",8]],[["one",8],["option",4],["checkedmul",8],["clone",8]]],null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["signed",8]],["signed",8]],[[["signed",8]],["signed",8]],[[["signed",8]],["signed",8]],null,null,null,[[["u32",15],["str",15]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],[[["partialord",8]],["partialord",8]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[8,"Bounded"],[8,"ToPrimitive"],[8,"FromPrimitive"],[8,"NumCast"],[8,"AsPrimitive"],[8,"FloatCore"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"PrimInt"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedRem"],[8,"CheckedNeg"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingSub"],[8,"OverflowingMul"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingSub"],[8,"SaturatingMul"],[8,"WrappingAdd"],[8,"WrappingSub"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"Pow"],[8,"Signed"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"]]}\
}');
initSearch(searchIndex);